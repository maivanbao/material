{"version":3,"file":"material-menu.umd.min.js","sources":["../../node_modules/tslib/tslib.es6.js","../../src/lib/menu/menu-errors.ts","../../src/lib/menu/menu-trigger.ts","../../src/lib/menu/menu-animations.ts","../../src/lib/menu/menu-item.ts","../../src/lib/menu/menu-content.ts","../../src/lib/menu/menu-directive.ts","../../src/lib/menu/menu-module.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\n/**\r\n * Throws an exception for the case when menu trigger doesn't have a valid mat-menu instance\r\n * @docs-private\r\n */\r\nexport function throwMatMenuMissingError() {\r\n  throw Error(`mat-menu-trigger: must pass in an mat-menu instance.\r\n\r\n    Example:\r\n      <mat-menu #menu=\"matMenu\"></mat-menu>\r\n      <button [matMenuTriggerFor]=\"menu\"></button>`);\r\n}\r\n\r\n/**\r\n * Throws an exception for the case when menu's x-position value isn't valid.\r\n * In other words, it doesn't match 'before' or 'after'.\r\n * @docs-private\r\n */\r\nexport function throwMatMenuInvalidPositionX() {\r\n  throw Error(`x-position value must be either 'before' or after'.\r\n      Example: <mat-menu x-position=\"before\" #menu=\"matMenu\"></mat-menu>`);\r\n}\r\n\r\n/**\r\n * Throws an exception for the case when menu's y-position value isn't valid.\r\n * In other words, it doesn't match 'above' or 'below'.\r\n * @docs-private\r\n */\r\nexport function throwMatMenuInvalidPositionY() {\r\n  throw Error(`y-position value must be either 'above' or below'.\r\n      Example: <mat-menu y-position=\"above\" #menu=\"matMenu\"></mat-menu>`);\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {isFakeMousedownFromScreenReader} from '@angular/cdk/a11y';\r\nimport {Direction, Directionality} from '@angular/cdk/bidi';\r\nimport {LEFT_ARROW, RIGHT_ARROW} from '@angular/cdk/keycodes';\r\nimport {\r\n  ConnectedPositionStrategy,\r\n  HorizontalConnectionPos,\r\n  Overlay,\r\n  OverlayRef,\r\n  OverlayConfig,\r\n  RepositionScrollStrategy,\r\n  ScrollStrategy,\r\n  VerticalConnectionPos,\r\n} from '@angular/cdk/overlay';\r\nimport {TemplatePortal} from '@angular/cdk/portal';\r\nimport {filter} from 'rxjs/operators/filter';\r\nimport {\r\n  AfterContentInit,\r\n  Directive,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Inject,\r\n  InjectionToken,\r\n  Input,\r\n  OnDestroy,\r\n  Optional,\r\n  Output,\r\n  Self,\r\n  ViewContainerRef,\r\n} from '@angular/core';\r\nimport {merge} from 'rxjs/observable/merge';\r\nimport {of as observableOf} from 'rxjs/observable/of';\r\nimport {Subscription} from 'rxjs/Subscription';\r\nimport {MatMenu} from './menu-directive';\r\nimport {throwMatMenuMissingError} from './menu-errors';\r\nimport {MatMenuItem} from './menu-item';\r\nimport {MatMenuPanel} from './menu-panel';\r\nimport {MenuPositionX, MenuPositionY} from './menu-positions';\r\nimport {FocusMonitor, FocusOrigin} from '@angular/cdk/a11y';\r\n\r\n/** Injection token that determines the scroll handling while the menu is open. */\r\nexport const MAT_MENU_SCROLL_STRATEGY =\r\n    new InjectionToken<() => ScrollStrategy>('mat-menu-scroll-strategy');\r\n\r\n/** @docs-private */\r\nexport function MAT_MENU_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay: Overlay):\r\n    () => RepositionScrollStrategy {\r\n  return () => overlay.scrollStrategies.reposition();\r\n}\r\n\r\n/** @docs-private */\r\nexport const MAT_MENU_SCROLL_STRATEGY_PROVIDER = {\r\n  provide: MAT_MENU_SCROLL_STRATEGY,\r\n  deps: [Overlay],\r\n  useFactory: MAT_MENU_SCROLL_STRATEGY_PROVIDER_FACTORY,\r\n};\r\n\r\n\r\n// TODO(andrewseguin): Remove the kebab versions in favor of camelCased attribute selectors\r\n\r\n/** Default top padding of the menu panel. */\r\nexport const MENU_PANEL_TOP_PADDING = 8;\r\n\r\n/**\r\n * This directive is intended to be used in conjunction with an mat-menu tag.  It is\r\n * responsible for toggling the display of the provided menu instance.\r\n */\r\n@Directive({\r\n  selector: `[mat-menu-trigger-for], [matMenuTriggerFor]`,\r\n  host: {\r\n    'aria-haspopup': 'true',\r\n    '(mousedown)': '_handleMousedown($event)',\r\n    '(keydown)': '_handleKeydown($event)',\r\n    '(click)': '_handleClick($event)',\r\n  },\r\n  exportAs: 'matMenuTrigger'\r\n})\r\nexport class MatMenuTrigger implements AfterContentInit, OnDestroy {\r\n  private _portal: TemplatePortal;\r\n  private _overlayRef: OverlayRef | null = null;\r\n  private _menuOpen: boolean = false;\r\n  private _closeSubscription = Subscription.EMPTY;\r\n  private _hoverSubscription = Subscription.EMPTY;\r\n\r\n  // Tracking input type is necessary so it's possible to only auto-focus\r\n  // the first item of the list when the menu is opened via the keyboard\r\n  private _openedByMouse: boolean = false;\r\n\r\n  /**\r\n   * @deprecated\r\n   * @deletion-target 6.0.0\r\n   */\r\n  @Input('mat-menu-trigger-for')\r\n  get _deprecatedMatMenuTriggerFor(): MatMenuPanel {\r\n    return this.menu;\r\n  }\r\n\r\n  set _deprecatedMatMenuTriggerFor(v: MatMenuPanel) {\r\n    this.menu = v;\r\n  }\r\n\r\n  /** References the menu instance that the trigger is associated with. */\r\n  @Input('matMenuTriggerFor') menu: MatMenuPanel;\r\n\r\n  /** Data to be passed along to any lazily-rendered content. */\r\n  @Input('matMenuTriggerData') menuData: any;\r\n\r\n  /** Event emitted when the associated menu is opened. */\r\n  @Output() readonly menuOpened: EventEmitter<void> = new EventEmitter<void>();\r\n\r\n  /**\r\n   * Event emitted when the associated menu is opened.\r\n   * @deprecated Switch to `menuOpened` instead\r\n   * @deletion-target 6.0.0\r\n   */\r\n  @Output() readonly onMenuOpen: EventEmitter<void> = this.menuOpened;\r\n\r\n  /** Event emitted when the associated menu is closed. */\r\n  @Output() readonly menuClosed: EventEmitter<void> = new EventEmitter<void>();\r\n\r\n  /**\r\n   * Event emitted when the associated menu is closed.\r\n   * @deprecated Switch to `menuClosed` instead\r\n   * @deletion-target 6.0.0\r\n   */\r\n  @Output() readonly onMenuClose: EventEmitter<void> = this.menuClosed;\r\n\r\n  constructor(private _overlay: Overlay,\r\n              private _element: ElementRef,\r\n              private _viewContainerRef: ViewContainerRef,\r\n              @Inject(MAT_MENU_SCROLL_STRATEGY) private _scrollStrategy,\r\n              @Optional() private _parentMenu: MatMenu,\r\n              @Optional() @Self() private _menuItemInstance: MatMenuItem,\r\n              @Optional() private _dir: Directionality,\r\n              // TODO(crisbeto): make the _focusMonitor required when doing breaking changes.\r\n              private _focusMonitor?: FocusMonitor) {\r\n\r\n    if (_menuItemInstance) {\r\n      _menuItemInstance._triggersSubmenu = this.triggersSubmenu();\r\n    }\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    this._checkMenu();\r\n\r\n    this.menu.close.subscribe(reason => {\r\n      this._destroyMenu();\r\n\r\n      // If a click closed the menu, we should close the entire chain of nested menus.\r\n      if (reason === 'click' && this._parentMenu) {\r\n        this._parentMenu.closed.emit(reason);\r\n      }\r\n    });\r\n\r\n    if (this.triggersSubmenu()) {\r\n      // Subscribe to changes in the hovered item in order to toggle the panel.\r\n      this._hoverSubscription = this._parentMenu._hovered()\r\n          .pipe(filter(active => active === this._menuItemInstance))\r\n          .subscribe(() => {\r\n            this._openedByMouse = true;\r\n            this.openMenu();\r\n          });\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this._overlayRef) {\r\n      this._overlayRef.dispose();\r\n      this._overlayRef = null;\r\n    }\r\n\r\n    this._cleanUpSubscriptions();\r\n  }\r\n\r\n  /** Whether the menu is open. */\r\n  get menuOpen(): boolean {\r\n    return this._menuOpen;\r\n  }\r\n\r\n  /** The text direction of the containing app. */\r\n  get dir(): Direction {\r\n    return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\r\n  }\r\n\r\n  /** Whether the menu triggers a sub-menu or a top-level one. */\r\n  triggersSubmenu(): boolean {\r\n    return !!(this._menuItemInstance && this._parentMenu);\r\n  }\r\n\r\n  /** Toggles the menu between the open and closed states. */\r\n  toggleMenu(): void {\r\n    return this._menuOpen ? this.closeMenu() : this.openMenu();\r\n  }\r\n\r\n  /** Opens the menu. */\r\n  openMenu(): void {\r\n    if (this._menuOpen) {\r\n      return;\r\n    }\r\n\r\n    this._createOverlay().attach(this._portal);\r\n\r\n    if (this.menu.lazyContent) {\r\n      this.menu.lazyContent.attach(this.menuData);\r\n    }\r\n\r\n    this._closeSubscription = this._menuClosingActions().subscribe(() => this.closeMenu());\r\n    this._initMenu();\r\n\r\n    if (this.menu instanceof MatMenu) {\r\n      this.menu._startAnimation();\r\n    }\r\n  }\r\n\r\n  /** Closes the menu. */\r\n  closeMenu(): void {\r\n    this.menu.close.emit();\r\n  }\r\n\r\n  /**\r\n   * Focuses the menu trigger.\r\n   * @param origin Source of the menu trigger's focus.\r\n   */\r\n  focus(origin: FocusOrigin = 'program') {\r\n    if (this._focusMonitor) {\r\n      this._focusMonitor.focusVia(this._element.nativeElement, origin);\r\n    } else {\r\n      this._element.nativeElement.focus();\r\n    }\r\n  }\r\n\r\n  /** Closes the menu and does the necessary cleanup. */\r\n  private _destroyMenu() {\r\n    if (this._overlayRef && this.menuOpen) {\r\n      this._resetMenu();\r\n      this._closeSubscription.unsubscribe();\r\n      this._overlayRef.detach();\r\n\r\n      if (this.menu instanceof MatMenu) {\r\n        this.menu._resetAnimation();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * This method sets the menu state to open and focuses the first item if\r\n   * the menu was opened via the keyboard.\r\n   */\r\n  private _initMenu(): void {\r\n    this.menu.parentMenu = this.triggersSubmenu() ? this._parentMenu : undefined;\r\n    this.menu.direction = this.dir;\r\n    this._setMenuElevation();\r\n    this._setIsMenuOpen(true);\r\n    this.menu.focusFirstItem(this._openedByMouse ? 'mouse' : 'program');\r\n  }\r\n\r\n  /** Updates the menu elevation based on the amount of parent menus that it has. */\r\n  private _setMenuElevation(): void {\r\n    if (this.menu.setElevation) {\r\n      let depth = 0;\r\n      let parentMenu = this.menu.parentMenu;\r\n\r\n      while (parentMenu) {\r\n        depth++;\r\n        parentMenu = parentMenu.parentMenu;\r\n      }\r\n\r\n      this.menu.setElevation(depth);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * This method resets the menu when it's closed, most importantly restoring\r\n   * focus to the menu trigger if the menu was opened via the keyboard.\r\n   */\r\n  private _resetMenu(): void {\r\n    this._setIsMenuOpen(false);\r\n\r\n    // We should reset focus if the user is navigating using a keyboard or\r\n    // if we have a top-level trigger which might cause focus to be lost\r\n    // when clicking on the backdrop.\r\n    if (!this._openedByMouse) {\r\n      // Note that the focus style will show up both for `program` and\r\n      // `keyboard` so we don't have to specify which one it is.\r\n      this.focus();\r\n    } else if (!this.triggersSubmenu()) {\r\n      this.focus('mouse');\r\n    }\r\n\r\n    this._openedByMouse = false;\r\n  }\r\n\r\n  // set state rather than toggle to support triggers sharing a menu\r\n  private _setIsMenuOpen(isOpen: boolean): void {\r\n    this._menuOpen = isOpen;\r\n    this._menuOpen ? this.menuOpened.emit() : this.menuClosed.emit();\r\n\r\n    if (this.triggersSubmenu()) {\r\n      this._menuItemInstance._highlighted = isOpen;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * This method checks that a valid instance of MatMenu has been passed into\r\n   * matMenuTriggerFor. If not, an exception is thrown.\r\n   */\r\n  private _checkMenu() {\r\n    if (!this.menu) {\r\n      throwMatMenuMissingError();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * This method creates the overlay from the provided menu's template and saves its\r\n   * OverlayRef so that it can be attached to the DOM when openMenu is called.\r\n   */\r\n  private _createOverlay(): OverlayRef {\r\n    if (!this._overlayRef) {\r\n      this._portal = new TemplatePortal(this.menu.templateRef, this._viewContainerRef);\r\n      const config = this._getOverlayConfig();\r\n      this._subscribeToPositions(config.positionStrategy as ConnectedPositionStrategy);\r\n      this._overlayRef = this._overlay.create(config);\r\n    }\r\n\r\n    return this._overlayRef;\r\n  }\r\n\r\n  /**\r\n   * This method builds the configuration object needed to create the overlay, the OverlayState.\r\n   * @returns OverlayConfig\r\n   */\r\n  private _getOverlayConfig(): OverlayConfig {\r\n    return new OverlayConfig({\r\n      positionStrategy: this._getPosition(),\r\n      hasBackdrop: !this.triggersSubmenu(),\r\n      backdropClass: 'cdk-overlay-transparent-backdrop',\r\n      direction: this.dir,\r\n      scrollStrategy: this._scrollStrategy()\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Listens to changes in the position of the overlay and sets the correct classes\r\n   * on the menu based on the new position. This ensures the animation origin is always\r\n   * correct, even if a fallback position is used for the overlay.\r\n   */\r\n  private _subscribeToPositions(position: ConnectedPositionStrategy): void {\r\n    position.onPositionChange.subscribe(change => {\r\n      const posX: MenuPositionX = change.connectionPair.overlayX === 'start' ? 'after' : 'before';\r\n      const posY: MenuPositionY = change.connectionPair.overlayY === 'top' ? 'below' : 'above';\r\n\r\n      this.menu.setPositionClasses(posX, posY);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * This method builds the position strategy for the overlay, so the menu is properly connected\r\n   * to the trigger.\r\n   * @returns ConnectedPositionStrategy\r\n   */\r\n  private _getPosition(): ConnectedPositionStrategy {\r\n    let [originX, originFallbackX]: HorizontalConnectionPos[] =\r\n        this.menu.xPosition === 'before' ? ['end', 'start'] : ['start', 'end'];\r\n\r\n    let [overlayY, overlayFallbackY]: VerticalConnectionPos[] =\r\n        this.menu.yPosition === 'above' ? ['bottom', 'top'] : ['top', 'bottom'];\r\n\r\n    let [originY, originFallbackY] = [overlayY, overlayFallbackY];\r\n    let [overlayX, overlayFallbackX] = [originX, originFallbackX];\r\n    let offsetY = 0;\r\n\r\n    if (this.triggersSubmenu()) {\r\n      // When the menu is a sub-menu, it should always align itself\r\n      // to the edges of the trigger, instead of overlapping it.\r\n      overlayFallbackX = originX = this.menu.xPosition === 'before' ? 'start' : 'end';\r\n      originFallbackX = overlayX = originX === 'end' ? 'start' : 'end';\r\n      offsetY = overlayY === 'bottom' ? MENU_PANEL_TOP_PADDING : -MENU_PANEL_TOP_PADDING;\r\n    } else if (!this.menu.overlapTrigger) {\r\n      originY = overlayY === 'top' ? 'bottom' : 'top';\r\n      originFallbackY = overlayFallbackY === 'top' ? 'bottom' : 'top';\r\n    }\r\n\r\n    return this._overlay.position()\r\n        .connectedTo(this._element, {originX, originY}, {overlayX, overlayY})\r\n        .withDirection(this.dir)\r\n        .withOffsetY(offsetY)\r\n        .withFallbackPosition(\r\n            {originX: originFallbackX, originY},\r\n            {overlayX: overlayFallbackX, overlayY})\r\n        .withFallbackPosition(\r\n            {originX, originY: originFallbackY},\r\n            {overlayX, overlayY: overlayFallbackY},\r\n            undefined, -offsetY)\r\n        .withFallbackPosition(\r\n            {originX: originFallbackX, originY: originFallbackY},\r\n            {overlayX: overlayFallbackX, overlayY: overlayFallbackY},\r\n            undefined, -offsetY);\r\n  }\r\n\r\n  /** Cleans up the active subscriptions. */\r\n  private _cleanUpSubscriptions(): void {\r\n    this._closeSubscription.unsubscribe();\r\n    this._hoverSubscription.unsubscribe();\r\n  }\r\n\r\n  /** Returns a stream that emits whenever an action that should close the menu occurs. */\r\n  private _menuClosingActions() {\r\n    const backdrop = this._overlayRef!.backdropClick();\r\n    const detachments = this._overlayRef!.detachments();\r\n    const parentClose = this._parentMenu ? this._parentMenu.close : observableOf();\r\n    const hover = this._parentMenu ? this._parentMenu._hovered().pipe(\r\n      filter(active => active !== this._menuItemInstance),\r\n      filter(() => this._menuOpen)\r\n    ) : observableOf();\r\n\r\n    return merge(backdrop, parentClose, hover, detachments);\r\n  }\r\n\r\n  /** Handles mouse presses on the trigger. */\r\n  _handleMousedown(event: MouseEvent): void {\r\n    if (!isFakeMousedownFromScreenReader(event)) {\r\n      this._openedByMouse = true;\r\n\r\n      // Since clicking on the trigger won't close the menu if it opens a sub-menu,\r\n      // we should prevent focus from moving onto it via click to avoid the\r\n      // highlight from lingering on the menu item.\r\n      if (this.triggersSubmenu()) {\r\n        event.preventDefault();\r\n      }\r\n    }\r\n  }\r\n\r\n  /** Handles key presses on the trigger. */\r\n  _handleKeydown(event: KeyboardEvent): void {\r\n    const keyCode = event.keyCode;\r\n\r\n    if (this.triggersSubmenu() && (\r\n            (keyCode === RIGHT_ARROW && this.dir === 'ltr') ||\r\n            (keyCode === LEFT_ARROW && this.dir === 'rtl'))) {\r\n      this.openMenu();\r\n    }\r\n  }\r\n\r\n  /** Handles click events on the trigger. */\r\n  _handleClick(event: MouseEvent): void {\r\n    if (this.triggersSubmenu()) {\r\n      // Stop event propagation to avoid closing the parent menu.\r\n      event.stopPropagation();\r\n      this.openMenu();\r\n    } else {\r\n      this.toggleMenu();\r\n    }\r\n  }\r\n\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport{\r\n  trigger,\r\n  state,\r\n  style,\r\n  animate,\r\n  transition,\r\n  AnimationTriggerMetadata,\r\n} from '@angular/animations';\r\n\r\n/**\r\n * Animations used by the mat-menu component.\r\n * Animation duration and timing values are based on:\r\n * https://material.io/guidelines/components/menus.html#menus-usage\r\n */\r\nexport const matMenuAnimations: {\r\n  readonly transformMenu: AnimationTriggerMetadata;\r\n  readonly fadeInItems: AnimationTriggerMetadata;\r\n} = {\r\n  /**\r\n   * This animation controls the menu panel's entry and exit from the page.\r\n   *\r\n   * When the menu panel is added to the DOM, it scales in and fades in its border.\r\n   *\r\n   * When the menu panel is removed from the DOM, it simply fades out after a brief\r\n   * delay to display the ripple.\r\n   */\r\n  transformMenu: trigger('transformMenu', [\r\n    // TODO(kara): switch to :enter and :leave once Mobile Safari is sorted out.\r\n    state('void', style({\r\n      opacity: 0,\r\n      // This starts off from 0.01, instead of 0, because there's an issue in the Angular animations\r\n      // as of 4.2, which causes the animation to be skipped if it starts from 0.\r\n      transform: 'scale(0.01, 0.01)'\r\n    })),\r\n    state('enter-start', style({\r\n      opacity: 1,\r\n      transform: 'scale(1, 0.5)'\r\n    })),\r\n    state('enter', style({\r\n      transform: 'scale(1, 1)'\r\n    })),\r\n    transition('void => enter-start', animate('100ms linear')),\r\n    transition('enter-start => enter', animate('300ms cubic-bezier(0.25, 0.8, 0.25, 1)')),\r\n    transition('* => void', animate('150ms 50ms linear', style({opacity: 0})))\r\n  ]),\r\n\r\n\r\n  /**\r\n   * This animation fades in the background color and content of the menu panel\r\n   * after its containing element is scaled in.\r\n   */\r\n  fadeInItems: trigger('fadeInItems', [\r\n    state('showing', style({opacity: 1})),\r\n    transition('void => *', [\r\n      style({opacity: 0}),\r\n      animate('400ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)')\r\n    ])\r\n  ])\r\n};\r\n\r\n/**\r\n * @deprecated\r\n * @deletion-target 7.0.0\r\n */\r\nexport const fadeInItems = matMenuAnimations.fadeInItems;\r\n\r\n/**\r\n * @deprecated\r\n * @deletion-target 7.0.0\r\n */\r\nexport const transformMenu = matMenuAnimations.transformMenu;\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {FocusableOption, FocusMonitor, FocusOrigin} from '@angular/cdk/a11y';\r\nimport {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  ElementRef,\r\n  OnDestroy,\r\n  ViewEncapsulation,\r\n  Inject,\r\n} from '@angular/core';\r\nimport {\r\n  CanDisable,\r\n  CanDisableRipple,\r\n  mixinDisabled,\r\n  mixinDisableRipple\r\n} from '@angular/material/core';\r\nimport {Subject} from 'rxjs/Subject';\r\nimport {DOCUMENT} from '@angular/common';\r\n\r\n// Boilerplate for applying mixins to MatMenuItem.\r\n/** @docs-private */\r\nexport class MatMenuItemBase {}\r\nexport const _MatMenuItemMixinBase = mixinDisableRipple(mixinDisabled(MatMenuItemBase));\r\n\r\n/**\r\n * This directive is intended to be used inside an mat-menu tag.\r\n * It exists mostly to set the role attribute.\r\n */\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: '[mat-menu-item]',\r\n  exportAs: 'matMenuItem',\r\n  inputs: ['disabled', 'disableRipple'],\r\n  host: {\r\n    'role': 'menuitem',\r\n    'class': 'mat-menu-item',\r\n    '[class.mat-menu-item-highlighted]': '_highlighted',\r\n    '[class.mat-menu-item-submenu-trigger]': '_triggersSubmenu',\r\n    '[attr.tabindex]': '_getTabIndex()',\r\n    '[attr.aria-disabled]': 'disabled.toString()',\r\n    '[attr.disabled]': 'disabled || null',\r\n    '(click)': '_checkDisabled($event)',\r\n    '(mouseenter)': '_emitHoverEvent()',\r\n  },\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  encapsulation: ViewEncapsulation.None,\r\n  preserveWhitespaces: false,\r\n  templateUrl: 'menu-item.html',\r\n})\r\nexport class MatMenuItem extends _MatMenuItemMixinBase\r\n    implements FocusableOption, CanDisable, CanDisableRipple, OnDestroy {\r\n\r\n  private _document: Document;\r\n\r\n  /** Stream that emits when the menu item is hovered. */\r\n  readonly _hovered: Subject<MatMenuItem> = new Subject<MatMenuItem>();\r\n\r\n  /** Whether the menu item is highlighted. */\r\n  _highlighted: boolean = false;\r\n\r\n  /** Whether the menu item acts as a trigger for a sub-menu. */\r\n  _triggersSubmenu: boolean = false;\r\n\r\n  constructor(\r\n    private _elementRef: ElementRef,\r\n    @Inject(DOCUMENT) document?: any,\r\n    private _focusMonitor?: FocusMonitor) {\r\n\r\n    // @deletion-target 6.0.0 make `_focusMonitor` and `document` required params.\r\n    super();\r\n\r\n    if (_focusMonitor) {\r\n      // Start monitoring the element so it gets the appropriate focused classes. We want\r\n      // to show the focus style for menu items only when the focus was not caused by a\r\n      // mouse or touch interaction.\r\n      _focusMonitor.monitor(this._getHostElement(), false);\r\n    }\r\n\r\n    this._document = document;\r\n  }\r\n\r\n  /** Focuses the menu item. */\r\n  focus(origin: FocusOrigin = 'program'): void {\r\n    if (this._focusMonitor) {\r\n      this._focusMonitor.focusVia(this._getHostElement(), origin);\r\n    } else {\r\n      this._getHostElement().focus();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this._focusMonitor) {\r\n      this._focusMonitor.stopMonitoring(this._getHostElement());\r\n    }\r\n\r\n    this._hovered.complete();\r\n  }\r\n\r\n  /** Used to set the `tabindex`. */\r\n  _getTabIndex(): string {\r\n    return this.disabled ? '-1' : '0';\r\n  }\r\n\r\n  /** Returns the host DOM element. */\r\n  _getHostElement(): HTMLElement {\r\n    return this._elementRef.nativeElement;\r\n  }\r\n\r\n  /** Prevents the default element actions if it is disabled. */\r\n  _checkDisabled(event: Event): void {\r\n    if (this.disabled) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n    }\r\n  }\r\n\r\n  /** Emits to the hover stream. */\r\n  _emitHoverEvent() {\r\n    if (!this.disabled) {\r\n      this._hovered.next(this);\r\n    }\r\n  }\r\n\r\n  /** Gets the label to be used when determining whether the option should be focused. */\r\n  getLabel(): string {\r\n    const element: HTMLElement = this._elementRef.nativeElement;\r\n    const textNodeType = this._document ? this._document.TEXT_NODE : 3;\r\n    let output = '';\r\n\r\n    if (element.childNodes) {\r\n      const length = element.childNodes.length;\r\n\r\n      // Go through all the top-level text nodes and extract their text.\r\n      // We skip anything that's not a text node to prevent the text from\r\n      // being thrown off by something like an icon.\r\n      for (let i = 0; i < length; i++) {\r\n        if (element.childNodes[i].nodeType === textNodeType) {\r\n          output += element.childNodes[i].textContent;\r\n        }\r\n      }\r\n    }\r\n\r\n    return output.trim();\r\n  }\r\n\r\n}\r\n\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {\r\n  Directive,\r\n  TemplateRef,\r\n  ComponentFactoryResolver,\r\n  ApplicationRef,\r\n  Injector,\r\n  ViewContainerRef,\r\n  Inject,\r\n  OnDestroy,\r\n} from '@angular/core';\r\nimport {TemplatePortal, DomPortalOutlet} from '@angular/cdk/portal';\r\nimport {DOCUMENT} from '@angular/common';\r\n\r\n/**\r\n * Menu content that will be rendered lazily once the menu is opened.\r\n */\r\n@Directive({\r\n  selector: 'ng-template[matMenuContent]'\r\n})\r\nexport class MatMenuContent implements OnDestroy {\r\n  private _portal: TemplatePortal<any>;\r\n  private _outlet: DomPortalOutlet;\r\n\r\n  constructor(\r\n    private _template: TemplateRef<any>,\r\n    private _componentFactoryResolver: ComponentFactoryResolver,\r\n    private _appRef: ApplicationRef,\r\n    private _injector: Injector,\r\n    private _viewContainerRef: ViewContainerRef,\r\n    @Inject(DOCUMENT) private _document: any) {}\r\n\r\n  /**\r\n   * Attaches the content with a particular context.\r\n   * @docs-private\r\n   */\r\n  attach(context: any = {}) {\r\n    if (!this._portal) {\r\n      this._portal = new TemplatePortal(this._template, this._viewContainerRef);\r\n    } else if (this._portal.isAttached) {\r\n      this._portal.detach();\r\n    }\r\n\r\n    if (!this._outlet) {\r\n      this._outlet = new DomPortalOutlet(this._document.createElement('div'),\r\n          this._componentFactoryResolver, this._appRef, this._injector);\r\n    }\r\n\r\n    const element: HTMLElement = this._template.elementRef.nativeElement;\r\n\r\n    // Because we support opening the same menu from different triggers (which in turn have their\r\n    // own `OverlayRef` panel), we have to re-insert the host element every time, otherwise we\r\n    // risk it staying attached to a pane that's no longer in the DOM.\r\n    element.parentNode!.insertBefore(this._outlet.outletElement, element);\r\n    this._portal.attach(this._outlet, context);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this._outlet) {\r\n      this._outlet.dispose();\r\n    }\r\n  }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {AnimationEvent} from '@angular/animations';\r\nimport {FocusKeyManager} from '@angular/cdk/a11y';\r\nimport {Direction} from '@angular/cdk/bidi';\r\nimport {ESCAPE, LEFT_ARROW, RIGHT_ARROW} from '@angular/cdk/keycodes';\r\nimport {startWith} from 'rxjs/operators/startWith';\r\nimport {switchMap} from 'rxjs/operators/switchMap';\r\nimport {take} from 'rxjs/operators/take';\r\nimport {\r\n  AfterContentInit,\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  ContentChild,\r\n  ContentChildren,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Inject,\r\n  InjectionToken,\r\n  Input,\r\n  OnDestroy,\r\n  Output,\r\n  QueryList,\r\n  TemplateRef,\r\n  ViewChild,\r\n  ViewEncapsulation,\r\n  NgZone,\r\n} from '@angular/core';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport {merge} from 'rxjs/observable/merge';\r\nimport {Subscription} from 'rxjs/Subscription';\r\nimport {matMenuAnimations} from './menu-animations';\r\nimport {throwMatMenuInvalidPositionX, throwMatMenuInvalidPositionY} from './menu-errors';\r\nimport {MatMenuItem} from './menu-item';\r\nimport {MatMenuPanel} from './menu-panel';\r\nimport {MatMenuContent} from './menu-content';\r\nimport {MenuPositionX, MenuPositionY} from './menu-positions';\r\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\r\nimport {FocusOrigin} from '@angular/cdk/a11y';\r\n\r\n\r\n/** Default `mat-menu` options that can be overridden. */\r\nexport interface MatMenuDefaultOptions {\r\n  /** The x-axis position of the menu. */\r\n  xPosition: MenuPositionX;\r\n\r\n  /** The y-axis position of the menu. */\r\n  yPosition: MenuPositionY;\r\n\r\n  /** Whether the menu should overlap the menu trigger. */\r\n  overlapTrigger: boolean;\r\n}\r\n\r\n/** Injection token to be used to override the default options for `mat-menu`. */\r\nexport const MAT_MENU_DEFAULT_OPTIONS =\r\n    new InjectionToken<MatMenuDefaultOptions>('mat-menu-default-options');\r\n\r\n/**\r\n * Start elevation for the menu panel.\r\n * @docs-private\r\n */\r\nconst MAT_MENU_BASE_ELEVATION = 2;\r\n\r\n\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'mat-menu',\r\n  templateUrl: 'menu.html',\r\n  styleUrls: ['menu.css'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  encapsulation: ViewEncapsulation.None,\r\n  preserveWhitespaces: false,\r\n  animations: [\r\n    matMenuAnimations.transformMenu,\r\n    matMenuAnimations.fadeInItems\r\n  ],\r\n  exportAs: 'matMenu'\r\n})\r\nexport class MatMenu implements AfterContentInit, MatMenuPanel, OnDestroy {\r\n  private _keyManager: FocusKeyManager<MatMenuItem>;\r\n  private _xPosition: MenuPositionX = this._defaultOptions.xPosition;\r\n  private _yPosition: MenuPositionY = this._defaultOptions.yPosition;\r\n  private _previousElevation: string;\r\n\r\n  /** Subscription to tab events on the menu panel */\r\n  private _tabSubscription = Subscription.EMPTY;\r\n\r\n  /** Config object to be passed into the menu's ngClass */\r\n  _classList: {[key: string]: boolean} = {};\r\n\r\n  /** Current state of the panel animation. */\r\n  _panelAnimationState: 'void' | 'enter-start' | 'enter' = 'void';\r\n\r\n  /** Parent menu of the current menu panel. */\r\n  parentMenu: MatMenuPanel | undefined;\r\n\r\n  /** Layout direction of the menu. */\r\n  direction: Direction;\r\n\r\n  /** Position of the menu in the X axis. */\r\n  @Input()\r\n  get xPosition(): MenuPositionX { return this._xPosition; }\r\n  set xPosition(value: MenuPositionX) {\r\n    if (value !== 'before' && value !== 'after') {\r\n      throwMatMenuInvalidPositionX();\r\n    }\r\n    this._xPosition = value;\r\n    this.setPositionClasses();\r\n  }\r\n\r\n  /** Position of the menu in the Y axis. */\r\n  @Input()\r\n  get yPosition(): MenuPositionY { return this._yPosition; }\r\n  set yPosition(value: MenuPositionY) {\r\n    if (value !== 'above' && value !== 'below') {\r\n      throwMatMenuInvalidPositionY();\r\n    }\r\n    this._yPosition = value;\r\n    this.setPositionClasses();\r\n  }\r\n\r\n  /** @docs-private */\r\n  @ViewChild(TemplateRef) templateRef: TemplateRef<any>;\r\n\r\n  /** List of the items inside of a menu. */\r\n  @ContentChildren(MatMenuItem) items: QueryList<MatMenuItem>;\r\n\r\n  /**\r\n   * Menu content that will be rendered lazily.\r\n   * @docs-private\r\n   */\r\n  @ContentChild(MatMenuContent) lazyContent: MatMenuContent;\r\n\r\n  /** Whether the menu should overlap its trigger. */\r\n  @Input()\r\n  get overlapTrigger(): boolean { return this._overlapTrigger; }\r\n  set overlapTrigger(value: boolean) {\r\n    this._overlapTrigger = coerceBooleanProperty(value);\r\n  }\r\n  private _overlapTrigger: boolean = this._defaultOptions.overlapTrigger;\r\n\r\n  /**\r\n   * This method takes classes set on the host mat-menu element and applies them on the\r\n   * menu template that displays in the overlay container.  Otherwise, it's difficult\r\n   * to style the containing menu from outside the component.\r\n   * @param classes list of class names\r\n   */\r\n  @Input('class')\r\n  set panelClass(classes: string) {\r\n    if (classes && classes.length) {\r\n      this._classList = classes.split(' ').reduce((obj: any, className: string) => {\r\n        obj[className] = true;\r\n        return obj;\r\n      }, {});\r\n\r\n      this._elementRef.nativeElement.className = '';\r\n      this.setPositionClasses();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * This method takes classes set on the host mat-menu element and applies them on the\r\n   * menu template that displays in the overlay container.  Otherwise, it's difficult\r\n   * to style the containing menu from outside the component.\r\n   * @deprecated Use `panelClass` instead.\r\n   * @deletion-target 6.0.0\r\n   */\r\n  @Input()\r\n  get classList(): string { return this.panelClass; }\r\n  set classList(classes: string) { this.panelClass = classes; }\r\n\r\n  /** Event emitted when the menu is closed. */\r\n  @Output() readonly closed: EventEmitter<void | 'click' | 'keydown'> =\r\n      new EventEmitter<void | 'click' | 'keydown'>();\r\n\r\n  /**\r\n   * Event emitted when the menu is closed.\r\n   * @deprecated Switch to `closed` instead\r\n   * @deletion-target 6.0.0\r\n   */\r\n  @Output() close = this.closed;\r\n\r\n  constructor(\r\n    private _elementRef: ElementRef,\r\n    private _ngZone: NgZone,\r\n    @Inject(MAT_MENU_DEFAULT_OPTIONS) private _defaultOptions: MatMenuDefaultOptions) { }\r\n\r\n  ngAfterContentInit() {\r\n    this._keyManager = new FocusKeyManager<MatMenuItem>(this.items).withWrap().withTypeAhead();\r\n    this._tabSubscription = this._keyManager.tabOut.subscribe(() => this.close.emit('keydown'));\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this._tabSubscription.unsubscribe();\r\n    this.closed.complete();\r\n  }\r\n\r\n  /** Stream that emits whenever the hovered menu item changes. */\r\n  _hovered(): Observable<MatMenuItem> {\r\n    if (this.items) {\r\n      return this.items.changes.pipe(\r\n        startWith(this.items),\r\n        switchMap(items => merge(...items.map(item => item._hovered)))\r\n      );\r\n    }\r\n\r\n    return this._ngZone.onStable\r\n      .asObservable()\r\n      .pipe(take(1), switchMap(() => this._hovered()));\r\n  }\r\n\r\n  /** Handle a keyboard event from the menu, delegating to the appropriate action. */\r\n  _handleKeydown(event: KeyboardEvent) {\r\n    switch (event.keyCode) {\r\n      case ESCAPE:\r\n        this.closed.emit('keydown');\r\n        event.stopPropagation();\r\n      break;\r\n      case LEFT_ARROW:\r\n        if (this.parentMenu && this.direction === 'ltr') {\r\n          this.closed.emit('keydown');\r\n        }\r\n      break;\r\n      case RIGHT_ARROW:\r\n        if (this.parentMenu && this.direction === 'rtl') {\r\n          this.closed.emit('keydown');\r\n        }\r\n      break;\r\n      default:\r\n        this._keyManager.onKeydown(event);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Focus the first item in the menu.\r\n   * @param origin Action from which the focus originated. Used to set the correct styling.\r\n   */\r\n  focusFirstItem(origin: FocusOrigin = 'program'): void {\r\n    // When the content is rendered lazily, it takes a bit before the items are inside the DOM.\r\n    if (this.lazyContent) {\r\n      this._ngZone.onStable.asObservable()\r\n        .pipe(take(1))\r\n        .subscribe(() => this._keyManager.setFocusOrigin(origin).setFirstItemActive());\r\n    } else {\r\n      this._keyManager.setFocusOrigin(origin).setFirstItemActive();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Resets the active item in the menu. This is used when the menu is opened, allowing\r\n   * the user to start from the first option when pressing the down arrow.\r\n   */\r\n  resetActiveItem() {\r\n    this._keyManager.setActiveItem(-1);\r\n  }\r\n\r\n  /**\r\n   * It's necessary to set position-based classes to ensure the menu panel animation\r\n   * folds out from the correct direction.\r\n   */\r\n  setPositionClasses(posX: MenuPositionX = this.xPosition, posY: MenuPositionY = this.yPosition) {\r\n    this._classList['mat-menu-before'] = posX === 'before';\r\n    this._classList['mat-menu-after'] = posX === 'after';\r\n    this._classList['mat-menu-above'] = posY === 'above';\r\n    this._classList['mat-menu-below'] = posY === 'below';\r\n  }\r\n\r\n  /**\r\n   * Sets the menu panel elevation.\r\n   * @param depth Number of parent menus that come before the menu.\r\n   */\r\n  setElevation(depth: number): void {\r\n    // The elevation starts at the base and increases by one for each level.\r\n    const newElevation = `mat-elevation-z${MAT_MENU_BASE_ELEVATION + depth}`;\r\n    const customElevation = Object.keys(this._classList).find(c => c.startsWith('mat-elevation-z'));\r\n\r\n    if (!customElevation || customElevation === this._previousElevation) {\r\n      if (this._previousElevation) {\r\n        this._classList[this._previousElevation] = false;\r\n      }\r\n\r\n      this._classList[newElevation] = true;\r\n      this._previousElevation = newElevation;\r\n    }\r\n  }\r\n\r\n  /** Starts the enter animation. */\r\n  _startAnimation() {\r\n    this._panelAnimationState = 'enter-start';\r\n  }\r\n\r\n  /** Resets the panel animation to its initial state. */\r\n  _resetAnimation() {\r\n    this._panelAnimationState = 'void';\r\n  }\r\n\r\n  /** Callback that is invoked when the panel animation completes. */\r\n  _onAnimationDone(event: AnimationEvent) {\r\n    // After the initial expansion is done, trigger the second phase of the enter animation.\r\n    if (event.toState === 'enter-start') {\r\n      this._panelAnimationState = 'enter';\r\n    }\r\n  }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {A11yModule} from '@angular/cdk/a11y';\r\nimport {OverlayModule} from '@angular/cdk/overlay';\r\nimport {CommonModule} from '@angular/common';\r\nimport {NgModule} from '@angular/core';\r\nimport {MatCommonModule, MatRippleModule} from '@angular/material/core';\r\nimport {PortalModule} from '@angular/cdk/portal';\r\nimport {MAT_MENU_DEFAULT_OPTIONS, MatMenu} from './menu-directive';\r\nimport {MatMenuItem} from './menu-item';\r\nimport {MAT_MENU_SCROLL_STRATEGY_PROVIDER, MatMenuTrigger} from './menu-trigger';\r\nimport {MatMenuContent} from './menu-content';\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    A11yModule,\r\n    CommonModule,\r\n    MatCommonModule,\r\n    MatRippleModule,\r\n    OverlayModule,\r\n    PortalModule,\r\n  ],\r\n  exports: [MatMenu, MatMenuItem, MatMenuTrigger, MatMenuContent, MatCommonModule],\r\n  declarations: [MatMenu, MatMenuItem, MatMenuTrigger, MatMenuContent],\r\n  providers: [\r\n    MAT_MENU_SCROLL_STRATEGY_PROVIDER,\r\n    {\r\n      provide: MAT_MENU_DEFAULT_OPTIONS,\r\n      useValue: {\r\n        overlapTrigger: true,\r\n        xPosition: 'after',\r\n        yPosition: 'below',\r\n      },\r\n    }\r\n  ],\r\n})\r\nexport class MatMenuModule {}\r\n"],"names":["__extends","d","b","__","this","constructor","extendStatics","prototype","Object","create","throwMatMenuMissingError","Error","throwMatMenuInvalidPositionX","throwMatMenuInvalidPositionY","MAT_MENU_SCROLL_STRATEGY_PROVIDER_FACTORY","overlay","scrollStrategies","reposition","setPrototypeOf","__proto__","Array","p","hasOwnProperty","matMenuAnimations","transformMenu","trigger","state","style","opacity","transform","transition","animate","fadeInItems","MatMenuItemBase","_MatMenuItemMixinBase","mixinDisableRipple","mixinDisabled","MatMenuItem","_elementRef","document","_focusMonitor","_this","_super","call","_hovered","Subject","_highlighted","_triggersSubmenu","monitor","_getHostElement","_document","tslib_1.__extends","focus","origin","focusVia","ngOnDestroy","stopMonitoring","complete","_getTabIndex","disabled","nativeElement","_checkDisabled","event","preventDefault","stopPropagation","_emitHoverEvent","next","getLabel","element","textNodeType","TEXT_NODE","output","childNodes","length_1","length","i","nodeType","textContent","trim","type","Component","args","selector","exportAs","inputs","host","role","class","[class.mat-menu-item-highlighted]","[class.mat-menu-item-submenu-trigger]","[attr.tabindex]","[attr.aria-disabled]","[attr.disabled]","(click)","(mouseenter)","changeDetection","ChangeDetectionStrategy","OnPush","encapsulation","ViewEncapsulation","None","preserveWhitespaces","template","FocusMonitor","MatMenuContent","_template","_componentFactoryResolver","_appRef","_injector","_viewContainerRef","attach","context","_portal","isAttached","detach","TemplatePortal","_outlet","DomPortalOutlet","createElement","elementRef","insertBefore","outletElement","dispose","Directive","TemplateRef","ComponentFactoryResolver","ApplicationRef","Injector","ViewContainerRef","undefined","decorators","Inject","DOCUMENT","MAT_MENU_DEFAULT_OPTIONS","InjectionToken","MatMenu","_ngZone","_defaultOptions","_xPosition","xPosition","_yPosition","yPosition","_tabSubscription","Subscription","EMPTY","_classList","_panelAnimationState","_overlapTrigger","overlapTrigger","closed","EventEmitter","close","defineProperty","value","setPositionClasses","coerceBooleanProperty","classes","split","reduce","obj","className","panelClass","ngAfterContentInit","_keyManager","FocusKeyManager","items","withWrap","withTypeAhead","tabOut","subscribe","emit","unsubscribe","changes","pipe","startWith","switchMap","merge","apply","map","item","onStable","asObservable","take","_handleKeydown","keyCode","ESCAPE","LEFT_ARROW","parentMenu","direction","RIGHT_ARROW","onKeydown","focusFirstItem","lazyContent","setFocusOrigin","setFirstItemActive","resetActiveItem","setActiveItem","posX","posY","setElevation","depth","newElevation","customElevation","keys","find","c","startsWith","_previousElevation","_startAnimation","_resetAnimation","_onAnimationDone","toState","styles","animations","propDecorators","templateRef","ViewChild","ContentChildren","ContentChild","Input","classList","Output","MAT_MENU_SCROLL_STRATEGY","MAT_MENU_SCROLL_STRATEGY_PROVIDER","provide","deps","Overlay","useFactory","MatMenuTrigger","_overlay","_element","_scrollStrategy","_parentMenu","_menuItemInstance","_dir","_overlayRef","_menuOpen","_closeSubscription","_hoverSubscription","_openedByMouse","menuOpened","onMenuOpen","menuClosed","onMenuClose","triggersSubmenu","menu","v","_checkMenu","reason","_destroyMenu","filter","active","openMenu","_cleanUpSubscriptions","toggleMenu","closeMenu","_createOverlay","menuData","_menuClosingActions","_initMenu","menuOpen","_resetMenu","dir","_setMenuElevation","_setIsMenuOpen","isOpen","config","_getOverlayConfig","_subscribeToPositions","OverlayConfig","positionStrategy","_getPosition","hasBackdrop","backdropClass","scrollStrategy","position","onPositionChange","change","connectionPair","overlayX","overlayY","_a","originX","originFallbackX","_b","overlayFallbackY","_c","originY","originFallbackY","_d","overlayFallbackX","offsetY","connectedTo","withDirection","withOffsetY","withFallbackPosition","backdrop","backdropClick","detachments","parentClose","observableOf","hover","_handleMousedown","isFakeMousedownFromScreenReader","_handleClick","aria-haspopup","(mousedown)","(keydown)","ElementRef","Optional","Self","Directionality","_deprecatedMatMenuTriggerFor","ɵ0","NgModule","imports","A11yModule","CommonModule","MatCommonModule","MatRippleModule","OverlayModule","PortalModule","exports","declarations","providers","useValue","MatMenuModule"],"mappings":";;;;;;;g+CAoBA,SAAgBA,GAAUC,EAAGC,GAEzB,QAASC,KAAOC,KAAKC,YAAcJ,EADnCK,EAAcL,EAAGC,GAEjBD,EAAEM,UAAkB,OAANL,EAAaM,OAAOC,OAAOP,IAAMC,EAAGI,UAAYL,EAAEK,UAAW,GAAIJ,ICXnF,QAAAO,KACE,KAAMC,OAAM,yKAYd,QAAAC,KACE,KAAMD,OAAM,oIASd,QAAAE,KACE,KAAMF,OAAM,kICgBd,QAAAG,GAA0DC,GAExD,MAAO,YAAM,MAAAA,GAAQC,iBAAiBC,cFtCxC,GAAIX,GAAgBE,OAAOU,iBACpBC,uBAA2BC,QAAS,SAAUnB,EAAGC,GAAKD,EAAEkB,UAAYjB,IACvE,SAAUD,EAAGC,GAAK,IAAK,GAAImB,KAAKnB,GAAOA,EAAEoB,eAAeD,KAAIpB,EAAEoB,GAAKnB,EAAEmB,KGI5DE,GAYXC,cAAeC,EAAAA,QAAQ,iBAErBC,EAAAA,MAAM,OAAQC,EAAAA,OACZC,QAAS,EAGTC,UAAW,uBAEbH,EAAAA,MAAM,cAAeC,EAAAA,OACnBC,QAAS,EACTC,UAAW,mBAEbH,EAAAA,MAAM,QAASC,EAAAA,OACbE,UAAW,iBAEbC,EAAAA,WAAW,sBAAuBC,EAAAA,QAAQ,iBAC1CD,EAAAA,WAAW,uBAAwBC,EAAAA,QAAQ,2CAC3CD,EAAAA,WAAW,YAAaC,EAAAA,QAAQ,oBAAqBJ,EAAAA,OAAOC,QAAS,QAQvEI,YAAaP,EAAAA,QAAQ,eACnBC,EAAAA,MAAM,UAAWC,EAAAA,OAAOC,QAAS,KACjCE,EAAAA,WAAW,aACTH,EAAAA,OAAOC,QAAS,IAChBG,EAAAA,QAAQ,qDASDC,EAAcT,EAAkBS,YAMhCR,EAAgBD,EAAkBC,cClD/CS,EAAA,yBA5BA,MAAAA,MA6BaC,EAAwBC,EAAAA,mBAAmBC,EAAAA,cAAcH,kBAyCpE,QAAFI,GACYC,EACUC,EACVC,GAHV,GAAFC,GAMIC,EAAJC,KAAAvC,OAAAA,WALYqC,GAAZH,YAAYA,EAEAG,EAAZD,cAAYA,EAXZC,EAAAG,SAA4C,GAAIC,GAAAA,QAGhDJ,EAAAK,cAA0B,EAG1BL,EAAAM,kBAA8B,EAUtBP,GAIFA,EAAcQ,QAAQP,EAAKQ,mBAAmB,GAGhDR,EAAKS,UAAYX,IA7ErB,MAgDiCY,GAAjCd,EAAAK,GAiCEL,EAAF9B,UAAA6C,MAAE,SAAMC,OAAR,KAAAA,IAAQA,EAAR,WACQjD,KAAKoC,cACPpC,KAAKoC,cAAcc,SAASlD,KAAK6C,kBAAmBI,GAEpDjD,KAAK6C,kBAAkBG,SAI3Bf,EAAF9B,UAAAgD,YAAE,WACMnD,KAAKoC,eACPpC,KAAKoC,cAAcgB,eAAepD,KAAK6C,mBAGzC7C,KAAKwC,SAASa,YAIhBpB,EAAF9B,UAAAmD,aAAE,WACE,MAAOtD,MAAKuD,SAAW,KAAO,KAIhCtB,EAAF9B,UAAA0C,gBAAE,WACE,MAAO7C,MAAKkC,YAAYsB,eAI1BvB,EAAF9B,UAAAsD,eAAE,SAAeC,GACT1D,KAAKuD,WACPG,EAAMC,iBACND,EAAME,oBAKV3B,EAAF9B,UAAA0D,gBAAE,WACO7D,KAAKuD,UACRvD,KAAKwC,SAASsB,KAAK9D,OAKvBiC,EAAF9B,UAAA4D,SAAE,WACE,GAAMC,GAAuBhE,KAAKkC,YAAYsB,cACxCS,EAAejE,KAAK8C,UAAY9C,KAAK8C,UAAUoB,UAAY,EAC7DC,EAAS,EAEb,IAAIH,EAAQI,WAMV,IAAK,GALCC,GAASL,EAAQI,WAAWE,OAKzBC,EAAI,EAAGA,EAAIF,EAAQE,IACtBP,EAAQI,WAAWG,GAAGC,WAAaP,IACrCE,GAAUH,EAAQI,WAAWG,GAAGE,YAKtC,OAAON,GAAOO,uBAlHlBC,KAACC,EAAAA,UAADC,OAAAC,SAAA,kBACEC,SAAU,cACVC,QAAF,WAAA,iBACEC,MACFC,KAAA,WACMC,MAAN,gBACIC,oCAAJ,eACIC,wCAAJ,mBACIC,kBAAJ,iBACIC,uBAAJ,sBACIC,kBAAmB,mBACnBC,UAAJ,yBACIC,eAAJ,qBAEAC,gBAAAC,EAAAA,wBAAAC,OACAC,cAAAC,EAAAA,kBAAAC,KACEC,qBAAF,EACEC,SAAF,yRAxCAvB,KAAEwB,EAAAA,gBAJFlE,GARAH,gBC+BE,QAAFsE,GACYC,EACAC,EACAC,EACAC,EACAC,EACkB3D,GALlB9C,KAAZqG,UAAYA,EACArG,KAAZsG,0BAAYA,EACAtG,KAAZuG,QAAYA,EACAvG,KAAZwG,UAAYA,EACAxG,KAAZyG,kBAAYA,EACkBzG,KAA9B8C,UAA8BA,EArC9B,MA2CEsD,GAAFjG,UAAAuG,OAAE,SAAOC,OAAT,KAAAA,IAASA,MACA3G,KAAK4G,QAEC5G,KAAK4G,QAAQC,YACtB7G,KAAK4G,QAAQE,SAFb9G,KAAK4G,QAAU,GAAIG,GAAAA,eAAe/G,KAAKqG,UAAWrG,KAAKyG,mBAKpDzG,KAAKgH,UACRhH,KAAKgH,QAAU,GAAIC,GAAAA,gBAAgBjH,KAAK8C,UAAUoE,cAAc,OAC5DlH,KAAKsG,0BAA2BtG,KAAKuG,QAASvG,KAAKwG,WAGzD,IAAMxC,GAAuBhE,KAAKqG,UAAUc,WAAW3D,aAKvDQ,GAAkB,WAAEoD,aAAapH,KAAKgH,QAAQK,cAAerD,GAC7DhE,KAAK4G,QAAQF,OAAO1G,KAAKgH,QAASL,IAGpCP,EAAFjG,UAAAgD,YAAE,WACMnD,KAAKgH,SACPhH,KAAKgH,QAAQM,0BA1CnB3C,KAAC4C,EAAAA,UAAD1C,OACEC,SAAU,sEAfZH,KAAE6C,EAAAA,cACF7C,KAAE8C,EAAAA,2BACF9C,KAAE+C,EAAAA,iBACF/C,KAAEgD,EAAAA,WACFhD,KAAEiD,EAAAA,mBAuBFjD,SAAAkD,GAAAC,aAAAnD,KAAKoD,EAAAA,OAALlD,MAAYmD,EAAAA,eArCZ5B,KC4Da6B,EACT,GAAIC,GAAAA,eAAsC,yCA+H5C,QAAFC,GACYjG,EACAkG,EACkCC,GAFlCrI,KAAZkC,YAAYA,EACAlC,KAAZoI,QAAYA,EACkCpI,KAA9CqI,gBAA8CA,EAzG9CrI,KAAAsI,WAAsCtI,KAAKqI,gBAAgBE,UAC3DvI,KAAAwI,WAAsCxI,KAAKqI,gBAAgBI,UAI3DzI,KAAA0I,iBAA6BC,EAAAA,aAAaC,MAG1C5I,KAAA6I,cAGA7I,KAAA8I,qBAA2D,OAgD3D9I,KAAA+I,gBAAqC/I,KAAKqI,gBAAgBW,eAkC1DhJ,KAAAiJ,OAAM,GAAIC,GAAAA,aAOVlJ,KAAAmJ,MAAoBnJ,KAAKiJ,OAAzB,MA/EA7I,QAAAgJ,eAAMjB,EAANhI,UAAA,iBAAA,WAAmC,MAAOH,MAAKsI,gBAC7C,SAAce,GACE,WAAVA,GAAgC,UAAVA,GACxB7I,IAEFR,KAAKsI,WAAae,EAClBrJ,KAAKsJ,sDAKTlJ,OAAAgJ,eAAMjB,EAANhI,UAAA,iBAAA,WAAmC,MAAOH,MAAKwI,gBAC7C,SAAca,GACE,UAAVA,GAA+B,UAAVA,GACvB5I,IAEFT,KAAKwI,WAAaa,EAClBrJ,KAAKsJ,sDAiBTlJ,OAAAgJ,eAAMjB,EAANhI,UAAA,sBAAA,WAAkC,MAAOH,MAAK+I,qBAC5C,SAAmBM,GACjBrJ,KAAK+I,gBAAkBQ,EAAAA,sBAAsBF,oCAWjDjJ,OAAAgJ,eAAMjB,EAANhI,UAAA,kBAAA,SAAiBqJ,GACTA,GAAWA,EAAQlF,SACrBtE,KAAK6I,WAAaW,EAAQC,MAAM,KAAKC,OAAO,SAACC,EAAUC,GAErD,MADAD,GAAIC,IAAa,EACVD,OAGT3J,KAAKkC,YAAYsB,cAAcoG,UAAY,GAC3C5J,KAAKsJ,uDAYXlJ,OAAAgJ,eAAMjB,EAANhI,UAAA,iBAAA,WAA4B,MAAOH,MAAK6J,gBACtC,SAAcL,GAAmBxJ,KAAK6J,WAAaL,mCAkBnDrB,EAAFhI,UAAA2J,mBAAE,WAAA,GAAFzH,GAAArC,IACIA,MAAK+J,YAAc,GAAIC,GAAAA,gBAA6BhK,KAAKiK,OAAOC,WAAWC,gBAC3EnK,KAAK0I,iBAAmB1I,KAAK+J,YAAYK,OAAOC,UAAU,WAAM,MAAAhI,GAAK8G,MAAMmB,KAAK,cAGlFnC,EAAFhI,UAAAgD,YAAE,WACEnD,KAAK0I,iBAAiB6B,cACtBvK,KAAKiJ,OAAO5F,YAId8E,EAAFhI,UAAAqC,SAAE,WAAA,GAAFH,GAAArC,IACI,OAAIA,MAAKiK,MACAjK,KAAKiK,MAAMO,QAAQC,KACxBC,EAAAA,UAAU1K,KAAKiK,OACfU,EAAAA,UAAU,SAAAV,GAAS,MAAAW,GAAAA,MAF3BC,UAAA,GAEoCZ,EAAMa,IAAI,SAAAC,GAAQ,MAAAA,GAAKvI,eAIhDxC,KAAKoI,QAAQ4C,SACjBC,eACAR,KAAKS,EAAAA,KAAK,GAAIP,EAAAA,UAAU,WAAM,MAAAtI,GAAKG,eAIxC2F,EAAFhI,UAAAgL,eAAE,SAAezH,GACb,OAAQA,EAAM0H,SACZ,IAAKC,GAAAA,OACHrL,KAAKiJ,OAAOqB,KAAK,WACjB5G,EAAME,iBACR,MACA,KAAK0H,GAAAA,WACCtL,KAAKuL,YAAiC,QAAnBvL,KAAKwL,WAC1BxL,KAAKiJ,OAAOqB,KAAK,UAErB,MACA,KAAKmB,GAAAA,YACCzL,KAAKuL,YAAiC,QAAnBvL,KAAKwL,WAC1BxL,KAAKiJ,OAAOqB,KAAK,UAErB,MACA,SACEtK,KAAK+J,YAAY2B,UAAUhI,KAQjCyE,EAAFhI,UAAAwL,eAAE,SAAe1I,GAAf,GAAFZ,GAAArC,SAAA,KAAAiD,IAAiBA,EAAjB,WAEQjD,KAAK4L,YACP5L,KAAKoI,QAAQ4C,SAASC,eACnBR,KAAKS,EAAAA,KAAK,IACVb,UAAU,WAAM,MAAAhI,GAAK0H,YAAY8B,eAAe5I,GAAQ6I,uBAE3D9L,KAAK+J,YAAY8B,eAAe5I,GAAQ6I,sBAQ5C3D,EAAFhI,UAAA4L,gBAAE,WACE/L,KAAK+J,YAAYiC,eAAe,IAOlC7D,EAAFhI,UAAAmJ,mBAAE,SAAmB2C,EAAsCC,OAA3D,KAAAD,IAAqBA,EAAsBjM,KAAKuI,eAAhD,KAAA2D,IAA2DA,EAAsBlM,KAAKyI,WAClFzI,KAAK6I,WAAW,mBAA8B,WAAToD,EACrCjM,KAAK6I,WAAW,kBAA6B,UAAToD,EACpCjM,KAAK6I,WAAW,kBAA6B,UAATqD,EACpClM,KAAK6I,WAAW,kBAA6B,UAATqD,GAOtC/D,EAAFhI,UAAAgM,aAAE,SAAaC,GAEX,GAAMC,GAAe,mBApNO,EAoNqCD,GAC3DE,EAAkBlM,OAAOmM,KAAKvM,KAAK6I,YAAY2D,KAAK,SAAAC,GAAK,MAAAA,GAAEC,WAAW,oBAEvEJ,IAAmBA,IAAoBtM,KAAK2M,qBAC3C3M,KAAK2M,qBACP3M,KAAK6I,WAAW7I,KAAK2M,qBAAsB,GAG7C3M,KAAK6I,WAAWwD,IAAgB,EAChCrM,KAAK2M,mBAAqBN,IAK9BlE,EAAFhI,UAAAyM,gBAAE,WACE5M,KAAK8I,qBAAuB,eAI9BX,EAAFhI,UAAA0M,gBAAE,WACE7M,KAAK8I,qBAAuB,QAI9BX,EAAFhI,UAAA2M,iBAAE,SAAiBpJ,GAEO,gBAAlBA,EAAMqJ,UACR/M,KAAK8I,qBAAuB,yBA5OlCnE,KAACC,EAAAA,UAADC,OAAAC,SAAA,WACEoB,SAAU,wWACV8G,QAAF,wvEACErH,gBAAFC,EAAAA,wBAAAC,OACEC,cAAFC,EAAAA,kBAAAC,KACEC,qBAAF,EACEgH,YACF9L,EAAAC,cACAD,EAAAS,aAEAmD,SAAA,sFA3DAJ,SAAEkD,GAAFC,aAAAnD,KAAAoD,EAAAA,OAAAlD,MAAAoD,QA0KAE,EAAA+E,sEArFAC,cAAAxI,KAAAyI,EAAAA,UAAAvI,MAAA2C,EAAAA,eAWAyC,QAAAtF,KAAA0I,EAAAA,gBAAAxI,MAAA5C,KAWA2J,cAAAjH,KAAG2I,EAAAA,aAAHzI,MAAAuB,KAGA4C,iBAAArE,KAAA4I,EAAAA,QAMA1D,aAAAlF,KAAA4I,EAAAA,MAAA1I,MAAA,WAGA2I,YAAA7I,KAAA4I,EAAAA,QAaAtE,SAAAtE,KAAA8I,EAAAA,SAoBAtE,QAAAxE,KAAA8I,EAAAA,UAaAtF,KJ1IauF,EACT,GAAIxF,GAAAA,eAAqC,4BAShCyF,GACXC,QAASF,EACTG,MAAOC,EAAAA,SACPC,WAAYrN,gBAyEZ,QAAFsN,GAAsBC,EACAC,EACAzH,EACkC0H,EACtBC,EACQC,EACRC,EAEZlM,GARApC,KAAtBiO,SAAsBA,EACAjO,KAAtBkO,SAAsBA,EACAlO,KAAtByG,kBAAsBA,EACkCzG,KAAxDmO,gBAAwDA,EACtBnO,KAAlCoO,YAAkCA,EACQpO,KAA1CqO,kBAA0CA,EACRrO,KAAlCsO,KAAkCA,EAEZtO,KAAtBoC,cAAsBA,EAxDtBpC,KAAAuO,YAA2C,KAC3CvO,KAAAwO,WAA+B,EAC/BxO,KAAAyO,mBAA+B9F,EAAAA,aAAaC,MAC5C5I,KAAA0O,mBAA+B/F,EAAAA,aAAaC,MAI5C5I,KAAA2O,gBAAoC,EAsBpC3O,KAAA4O,WAAsD,GAAI1F,GAAAA,aAO1DlJ,KAAA6O,WAAsD7O,KAAK4O,WAG3D5O,KAAA8O,WAAsD,GAAI5F,GAAAA,aAO1DlJ,KAAA+O,YAAuD/O,KAAK8O,WAYpDT,IACFA,EAAkB1L,iBAAmB3C,KAAKgP,mBAjJhD,MAoGA5O,QAAAgJ,eAAM4E,EAAN7N,UAAA,+CACI,MAAOH,MAAKiP,UAGd,SAAiCC,GAC/BlP,KAAKiP,KAAOC,mCA4CdlB,EAAF7N,UAAA2J,mBAAE,WAAA,GAAFzH,GAAArC,IACIA,MAAKmP,aAELnP,KAAKiP,KAAK9F,MAAMkB,UAAU,SAAA+E,GACxB/M,EAAKgN,eAGU,UAAXD,GAAsB/M,EAAK+L,aAC7B/L,EAAK+L,YAAYnF,OAAOqB,KAAK8E,KAI7BpP,KAAKgP,oBAEPhP,KAAK0O,mBAAqB1O,KAAKoO,YAAY5L,WACtCiI,KAAK6E,EAAAA,OAAO,SAAAC,GAAU,MAAAA,KAAWlN,EAAKgM,qBACtChE,UAAU,WACThI,EAAKsM,gBAAiB,EACtBtM,EAAKmN,eAKfxB,EAAF7N,UAAAgD,YAAE,WACMnD,KAAKuO,cACPvO,KAAKuO,YAAYjH,UACjBtH,KAAKuO,YAAc,MAGrBvO,KAAKyP,yBAIPrP,OAAFgJ,eAAM4E,EAAN7N,UAAA,gBAAE,WACE,MAAOH,MAAKwO,2CAIdpO,OAAFgJ,eAAM4E,EAAN7N,UAAA,WAAE,WACE,MAAOH,MAAKsO,MAA4B,QAApBtO,KAAKsO,KAAKjF,MAAkB,MAAQ,uCAI1D2E,EAAF7N,UAAA6O,gBAAE,WACE,SAAUhP,KAAKqO,oBAAqBrO,KAAKoO,cAI3CJ,EAAF7N,UAAAuP,WAAE,WACE,MAAO1P,MAAKwO,UAAYxO,KAAK2P,YAAc3P,KAAKwP,YAIlDxB,EAAF7N,UAAAqP,SAAE,WAAA,GAAFnN,GAAArC,IACQA,MAAKwO,YAITxO,KAAK4P,iBAAiBlJ,OAAO1G,KAAK4G,SAE9B5G,KAAKiP,KAAKrD,aACZ5L,KAAKiP,KAAKrD,YAAYlF,OAAO1G,KAAK6P,UAGpC7P,KAAKyO,mBAAqBzO,KAAK8P,sBAAsBzF,UAAU,WAAM,MAAAhI,GAAKsN,cAC1E3P,KAAK+P,YAED/P,KAAKiP,eAAgB9G,IACvBnI,KAAKiP,KAAKrC,oBAKdoB,EAAF7N,UAAAwP,UAAE,WACE3P,KAAKiP,KAAK9F,MAAMmB,QAOlB0D,EAAF7N,UAAA6C,MAAE,SAAMC,OAAR,KAAAA,IAAQA,EAAR,WACQjD,KAAKoC,cACPpC,KAAKoC,cAAcc,SAASlD,KAAKkO,SAAS1K,cAAeP,GAEzDjD,KAAKkO,SAAS1K,cAAcR,SAKxBgL,EAAV7N,UAAAkP,wBACQrP,KAAKuO,aAAevO,KAAKgQ,WAC3BhQ,KAAKiQ,aACLjQ,KAAKyO,mBAAmBlE,cACxBvK,KAAKuO,YAAYzH,SAEb9G,KAAKiP,eAAgB9G,IACvBnI,KAAKiP,KAAKpC,oBASRmB,EAAV7N,UAAA4P,qBACI/P,KAAKiP,KAAK1D,WAAavL,KAAKgP,kBAAoBhP,KAAKoO,gBAAcvG,GACnE7H,KAAKiP,KAAKzD,UAAYxL,KAAKkQ,IAC3BlQ,KAAKmQ,oBACLnQ,KAAKoQ,gBAAe,GACpBpQ,KAAKiP,KAAKtD,eAAe3L,KAAK2O,eAAiB,QAAU,YAInDX,EAAV7N,UAAAgQ,6BACI,GAAInQ,KAAKiP,KAAK9C,aAAc,CAI1B,IAHA,GAAIC,GAAQ,EACRb,EAAavL,KAAKiP,KAAK1D,WAEpBA,GACLa,IACAb,EAAaA,EAAWA,UAG1BvL,MAAKiP,KAAK9C,aAAaC,KAQnB4B,EAAV7N,UAAA8P,sBACIjQ,KAAKoQ,gBAAe,GAKfpQ,KAAK2O,eAIE3O,KAAKgP,mBACfhP,KAAKgD,MAAM,SAFXhD,KAAKgD,QAKPhD,KAAK2O,gBAAiB,GAIhBX,EAAV7N,UAAAiQ,eAAA,SAAyBC,GACrBrQ,KAAKwO,UAAY6B,EACjBrQ,KAAKwO,UAAYxO,KAAK4O,WAAWtE,OAAStK,KAAK8O,WAAWxE,OAEtDtK,KAAKgP,oBACPhP,KAAKqO,kBAAkB3L,aAAe2N,IAQlCrC,EAAV7N,UAAAgP,sBACSnP,KAAKiP,MACR3O,KAQI0N,EAAV7N,UAAAyP,0BACI,IAAK5P,KAAKuO,YAAa,CACrBvO,KAAK4G,QAAU,GAAIG,GAAAA,eAAe/G,KAAKiP,KAAK9B,YAAanN,KAAKyG,kBAC9D,IAAM6J,GAAStQ,KAAKuQ,mBACpBvQ,MAAKwQ,sBAAsBF,EAAoD,kBAC/EtQ,KAAKuO,YAAcvO,KAAKiO,SAAS5N,OAAOiQ,GAG1C,MAAOtQ,MAAKuO,aAONP,EAAV7N,UAAAoQ,6BACI,MAAO,IAAIE,GAAAA,eACTC,iBAAkB1Q,KAAK2Q,eACvBC,aAAc5Q,KAAKgP,kBACnB6B,cAAe,mCACfrF,UAAWxL,KAAKkQ,IAChBY,eAAgB9Q,KAAKmO,qBASjBH,EAAV7N,UAAAqQ,sBAAA,SAAgCO,aAC5BA,GAASC,iBAAiB3G,UAAU,SAAA4G,GAClC,GAAMhF,GAAyD,UAAnCgF,EAAOC,eAAeC,SAAuB,QAAU,SAC7EjF,EAAyD,QAAnC+E,EAAOC,eAAeE,SAAqB,QAAU,OAEjF/O,GAAK4M,KAAK3F,mBAAmB2C,EAAMC,MAS/B8B,EAAV7N,UAAAwQ,wBACI,GAAJU,GAAA,WAAArR,KAAAiP,KAAA1G,WAAA,MAAA,UAAA,QAAA,OAAS+I,EAATD,EAAA,GAAkBE,EAAlBF,EAAA,GAGAG,EAAA,UAAAxR,KAAAiP,KAAAxG,WAAA,SAAA,QAAA,MAAA,UAAS2I,EAATI,EAAA,GAAmBC,EAAnBD,EAAA,GAGAE,GAAAN,EAAAK,GAASE,EAATD,EAAA,GAAkBE,EAAlBF,EAAA,GACAG,GAAAP,EAAAC,GAASJ,EAATU,EAAA,GAAmBC,EAAnBD,EAAA,GACQE,EAAU,CAad,OAXI/R,MAAKgP,mBAGP8C,EAAmBR,EAAkC,WAAxBtR,KAAKiP,KAAK1G,UAAyB,QAAU,MAC1EgJ,EAAkBJ,EAAuB,QAAZG,EAAoB,QAAU,MAC3DS,EAAuB,WAAbX,EA3TsB,GAAA,GA4TtBpR,KAAKiP,KAAKjG,iBACpB2I,EAAuB,QAAbP,EAAqB,SAAW,MAC1CQ,EAAuC,QAArBH,EAA6B,SAAW,OAGrDzR,KAAKiO,SAAS8C,WAChBiB,YAAYhS,KAAKkO,UAAWoD,QAArCA,EAA8CK,QAA9CA,IAAyDR,SAAzDA,EAAmEC,SAAnEA,IACSa,cAAcjS,KAAKkQ,KACnBgC,YAAYH,GACZI,sBACIb,QAASC,EAAiBI,QADvCA,IAEaR,SAAUW,EAAkBV,SAFzCA,IAGSe,sBACIb,QADbA,EACsBK,QAASC,IAClBT,SAFbA,EAEuBC,SAAUK,OACrB5J,IAAYkK,GACfI,sBACIb,QAASC,EAAiBI,QAASC,IACnCT,SAAUW,EAAkBV,SAAUK,OACvC5J,IAAYkK,IAId/D,EAAV7N,UAAAsP,iCACIzP,KAAKyO,mBAAmBlE,cACxBvK,KAAK0O,mBAAmBnE,eAIlByD,EAAV7N,UAAA2P,0CACUsC,EAAWpS,KAAgB,YAAEqS,gBAC7BC,EAActS,KAAgB,YAAEsS,cAChCC,EAAcvS,KAAKoO,YAAcpO,KAAKoO,YAAYjF,MAAQqJ,EAAAA,KAC1DC,EAAQzS,KAAKoO,YAAcpO,KAAKoO,YAAY5L,WAAWiI,KAC3D6E,EAAAA,OAAO,SAAAC,GAAU,MAAAA,KAAWlN,EAAKgM,oBACjCiB,EAAAA,OAAO,WAAM,MAAAjN,GAAKmM,aAChBgE,EAAAA,IAEJ,OAAO5H,GAAAA,MAAMwH,EAAUG,EAAaE,EAAOH,IAI7CtE,EAAF7N,UAAAuS,iBAAE,SAAiBhP,GACViP,EAAAA,gCAAgCjP,KACnC1D,KAAK2O,gBAAiB,EAKlB3O,KAAKgP,mBACPtL,EAAMC,mBAMZqK,EAAF7N,UAAAgL,eAAE,SAAezH,GACb,GAAM0H,GAAU1H,EAAM0H,OAElBpL,MAAKgP,oBACA5D,IAAYK,EAAAA,aAA4B,QAAbzL,KAAKkQ,KAChC9E,IAAYE,EAAAA,YAA2B,QAAbtL,KAAKkQ,MACtClQ,KAAKwP,YAKTxB,EAAF7N,UAAAyS,aAAE,SAAalP,GACP1D,KAAKgP,mBAEPtL,EAAME,kBACN5D,KAAKwP,YAELxP,KAAK0P,6BA/XX/K,KAAC4C,EAAAA,UAAD1C,OACEC,SAAU,8CACVG,MACE4N,gBAAiB,OACjBC,cAAe,2BACfC,YAAa,yBACbtN,UAAW,wBAEbV,SAAU,yDApEZJ,KAAEmJ,EAAAA,UAYFnJ,KAAEqO,EAAAA,aASFrO,KAAEiD,EAAAA,mBAsGFjD,SAAAkD,GAAAC,aAAAnD,KAAeoD,EAAAA,OAAflD,MAAsB6I,OAjGtB/I,KAAQwD,EAARL,aAAAnD,KAkGesO,EAAAA,aAhGftO,KAAQ1C,EAAR6F,aAAAnD,KAiGesO,EAAAA,WAjGftO,KAiG2BuO,EAAAA,SAlI3BvO,KAAmBwO,EAAAA,eAAnBrL,aAAAnD,KAmIesO,EAAAA,aA/FftO,KAAQwB,EAAAA,kCAsDRiN,+BAAAzO,KAAG4I,EAAAA,MAAH1I,MAAS,0BAUToK,OAAAtK,KAAG4I,EAAAA,MAAH1I,MAAS,uBAGTgL,WAAAlL,KAAG4I,EAAAA,MAAH1I,MAAS,wBAGT+J,aAAAjK,KAAG8I,EAAAA,SAOHoB,aAAAlK,KAAG8I,EAAAA,SAGHqB,aAAAnK,KAAG8I,EAAAA,SAOHsB,cAAApK,KAAG8I,EAAAA,UApIHO,KKmCAqF,GACQrK,gBAAgB,EAChBT,UAAW,QACXE,UAAW,oCAtCnB,sBAoBA9D,KAAC2O,EAAAA,SAADzO,OACE0O,SACEC,EAAAA,WACAC,EAAAA,aACAC,EAAAA,gBACAC,EAAAA,gBACAC,EAAAA,cACAC,EAAAA,cAEFC,SAAU3L,EAASlG,EAAa+L,EAAgB5H,EAAgBsN,EAAAA,iBAChEK,cAAe5L,EAASlG,EAAa+L,EAAgB5H,GACrD4N,WACErG,GAEEC,QAAS3F,EACTgM,SAANZ,8CAnCAa"}
{"version":3,"file":"material.umd.js","sources":["../../src/lib/version.ts","../../src/lib/toolbar/toolbar-module.ts","../../src/lib/toolbar/toolbar.ts","../../src/lib/tabs/tabs-module.ts","../../src/lib/tabs/tab-nav-bar/tab-nav-bar.ts","../../src/lib/tabs/tab-header.ts","../../src/lib/tabs/tab-label-wrapper.ts","../../src/lib/tabs/tab-group.ts","../../src/lib/tabs/tab-body.ts","../../src/lib/tabs/tabs-animations.ts","../../src/lib/tabs/tab.ts","../../src/lib/tabs/tab-label.ts","../../src/lib/tabs/ink-bar.ts","../../src/lib/table/table-data-source.ts","../../src/lib/table/table-module.ts","../../src/lib/table/row.ts","../../src/lib/table/cell.ts","../../src/lib/table/table.ts","../../src/lib/stepper/stepper-module.ts","../../src/lib/stepper/stepper-button.ts","../../src/lib/stepper/stepper.ts","../../src/lib/stepper/stepper-icon.ts","../../src/lib/stepper/stepper-animations.ts","../../src/lib/stepper/step-header.ts","../../src/lib/stepper/stepper-intl.ts","../../src/lib/stepper/step-label.ts","../../src/lib/sort/sort-module.ts","../../src/lib/sort/sort-header.ts","../../src/lib/sort/sort-animations.ts","../../src/lib/sort/sort-header-intl.ts","../../src/lib/sort/sort.ts","../../src/lib/sort/sort-errors.ts","../../src/lib/snack-bar/snack-bar-module.ts","../../src/lib/snack-bar/snack-bar.ts","../../src/lib/snack-bar/snack-bar-container.ts","../../src/lib/snack-bar/simple-snack-bar.ts","../../src/lib/snack-bar/snack-bar-animations.ts","../../src/lib/snack-bar/snack-bar-config.ts","../../src/lib/snack-bar/snack-bar-ref.ts","../../src/lib/slider/slider-module.ts","../../src/lib/slider/slider.ts","../../src/lib/slide-toggle/slide-toggle-module.ts","../../src/lib/slide-toggle/slide-toggle.ts","../../src/lib/sidenav/sidenav-module.ts","../../src/lib/sidenav/sidenav.ts","../../src/lib/sidenav/drawer.ts","../../src/lib/sidenav/drawer-animations.ts","../../src/lib/radio/radio-module.ts","../../src/lib/radio/radio.ts","../../src/lib/progress-spinner/progress-spinner-module.ts","../../src/lib/progress-spinner/progress-spinner.ts","../../src/lib/progress-bar/progress-bar-module.ts","../../src/lib/progress-bar/progress-bar.ts","../../src/lib/paginator/paginator-module.ts","../../src/lib/paginator/paginator.ts","../../src/lib/paginator/paginator-intl.ts","../../src/lib/tooltip/tooltip-module.ts","../../src/lib/tooltip/tooltip.ts","../../src/lib/tooltip/tooltip-animations.ts","../../src/lib/select/select-module.ts","../../src/lib/select/select.ts","../../src/lib/select/select-errors.ts","../../src/lib/select/select-animations.ts","../../src/lib/menu/menu-module.ts","../../src/lib/menu/menu-trigger.ts","../../src/lib/menu/menu-directive.ts","../../src/lib/menu/menu-content.ts","../../src/lib/menu/menu-item.ts","../../src/lib/menu/menu-errors.ts","../../src/lib/menu/menu-animations.ts","../../src/lib/list/list-module.ts","../../src/lib/list/selection-list.ts","../../src/lib/list/list.ts","../../src/lib/icon/icon-module.ts","../../src/lib/icon/icon.ts","../../src/lib/icon/icon-registry.ts","../../src/lib/grid-list/grid-list-module.ts","../../src/lib/grid-list/grid-list.ts","../../src/lib/grid-list/tile-styler.ts","../../src/lib/grid-list/tile-coordinator.ts","../../src/lib/grid-list/grid-tile.ts","../../src/lib/grid-list/grid-list-measure.ts","../../src/lib/expansion/expansion-module.ts","../../src/lib/expansion/expansion-panel-header.ts","../../src/lib/expansion/expansion-panel.ts","../../src/lib/expansion/expansion-animations.ts","../../src/lib/expansion/expansion-panel-content.ts","../../src/lib/expansion/accordion.ts","../../src/lib/divider/divider-module.ts","../../src/lib/divider/divider.ts","../../src/lib/datepicker/datepicker-module.ts","../../src/lib/datepicker/datepicker-toggle.ts","../../src/lib/datepicker/datepicker-input.ts","../../src/lib/datepicker/datepicker.ts","../../src/lib/datepicker/calendar.ts","../../src/lib/datepicker/year-view.ts","../../src/lib/datepicker/multi-year-view.ts","../../src/lib/datepicker/month-view.ts","../../src/lib/datepicker/calendar-body.ts","../../src/lib/datepicker/datepicker-intl.ts","../../src/lib/datepicker/datepicker-errors.ts","../../src/lib/input/input-module.ts","../../src/lib/input/input.ts","../../src/lib/input/input-value-accessor.ts","../../src/lib/input/input-errors.ts","../../src/lib/input/autosize.ts","../../src/lib/dialog/dialog-module.ts","../../src/lib/dialog/dialog-content-directives.ts","../../src/lib/dialog/dialog.ts","../../src/lib/dialog/dialog-ref.ts","../../src/lib/dialog/dialog-container.ts","../../src/lib/dialog/dialog-animations.ts","../../src/lib/dialog/dialog-config.ts","../../src/lib/chips/chips-module.ts","../../src/lib/chips/chip-input.ts","../../src/lib/chips/chip-list.ts","../../src/lib/chips/chip.ts","../../src/lib/checkbox/checkbox-module.ts","../../src/lib/checkbox/checkbox-required-validator.ts","../../src/lib/checkbox/checkbox.ts","../../src/lib/checkbox/checkbox-config.ts","../../src/lib/card/card-module.ts","../../src/lib/card/card.ts","../../src/lib/button-toggle/button-toggle-module.ts","../../src/lib/button-toggle/button-toggle.ts","../../src/lib/button/button-module.ts","../../src/lib/button/button.ts","../../src/lib/autocomplete/autocomplete-module.ts","../../src/lib/autocomplete/autocomplete-trigger.ts","../../src/lib/autocomplete/autocomplete.ts","../../src/lib/form-field/form-field-module.ts","../../src/lib/form-field/form-field.ts","../../src/lib/form-field/suffix.ts","../../src/lib/form-field/prefix.ts","../../src/lib/form-field/placeholder.ts","../../src/lib/form-field/label.ts","../../src/lib/form-field/hint.ts","../../src/lib/form-field/form-field-errors.ts","../../src/lib/form-field/form-field-control.ts","../../src/lib/form-field/form-field-animations.ts","../../src/lib/form-field/error.ts","../../src/lib/core/testing/month-constants.ts","../../src/lib/core/label/label-options.ts","../../src/lib/core/option/index.ts","../../src/lib/core/option/option.ts","../../src/lib/core/option/optgroup.ts","../../src/lib/core/selection/index.ts","../../src/lib/core/selection/pseudo-checkbox/pseudo-checkbox.ts","../../src/lib/core/ripple/index.ts","../../src/lib/core/ripple/ripple.ts","../../src/lib/core/ripple/ripple-renderer.ts","../../src/lib/core/ripple/ripple-ref.ts","../../src/lib/core/line/line.ts","../../src/lib/core/gestures/gesture-config.ts","../../src/lib/core/error/error-options.ts","../../src/lib/core/datetime/index.ts","../../src/lib/core/datetime/native-date-formats.ts","../../src/lib/core/datetime/native-date-adapter.ts","../../src/lib/core/datetime/date-formats.ts","../../src/lib/core/datetime/date-adapter.ts","../../src/lib/core/common-behaviors/initialized.ts","../../src/lib/core/common-behaviors/error-state.ts","../../src/lib/core/common-behaviors/tabindex.ts","../../src/lib/core/common-behaviors/disable-ripple.ts","../../src/lib/core/common-behaviors/color.ts","../../src/lib/core/common-behaviors/disabled.ts","../../src/lib/core/common-behaviors/common-module.ts","../../src/lib/core/animation/animation.ts","../../node_modules/tslib/tslib.es6.js"],"sourcesContent":["/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {Version} from '@angular/core';\r\n\r\n/** Current version of Angular Material. */\r\nexport const VERSION = new Version('5.2.5');\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {NgModule} from '@angular/core';\r\nimport {MatCommonModule} from '@angular/material/core';\r\nimport {PlatformModule} from '@angular/cdk/platform';\r\nimport {MatToolbar, MatToolbarRow} from './toolbar';\r\n\r\n@NgModule({\r\n  imports: [MatCommonModule, PlatformModule],\r\n  exports: [MatToolbar, MatToolbarRow, MatCommonModule],\r\n  declarations: [MatToolbar, MatToolbarRow],\r\n})\r\nexport class MatToolbarModule {}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {\r\n  AfterViewInit,\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  ContentChildren,\r\n  Directive,\r\n  ElementRef,\r\n  isDevMode,\r\n  QueryList,\r\n  ViewEncapsulation,\r\n  Inject,\r\n} from '@angular/core';\r\nimport {CanColor, mixinColor} from '@angular/material/core';\r\nimport {Platform} from '@angular/cdk/platform';\r\nimport {DOCUMENT} from '@angular/common';\r\n\r\n// Boilerplate for applying mixins to MatToolbar.\r\n/** @docs-private */\r\nexport class MatToolbarBase {\r\n  constructor(public _elementRef: ElementRef) {}\r\n}\r\nexport const _MatToolbarMixinBase = mixinColor(MatToolbarBase);\r\n\r\n@Directive({\r\n  selector: 'mat-toolbar-row',\r\n  exportAs: 'matToolbarRow',\r\n  host: {'class': 'mat-toolbar-row'},\r\n})\r\nexport class MatToolbarRow {}\r\n\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'mat-toolbar',\r\n  exportAs: 'matToolbar',\r\n  templateUrl: 'toolbar.html',\r\n  styleUrls: ['toolbar.css'],\r\n  inputs: ['color'],\r\n  host: {\r\n    'class': 'mat-toolbar',\r\n    '[class.mat-toolbar-multiple-rows]': 'this._toolbarRows.length',\r\n    '[class.mat-toolbar-single-row]': '!this._toolbarRows.length'\r\n  },\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  encapsulation: ViewEncapsulation.None,\r\n  preserveWhitespaces: false,\r\n})\r\nexport class MatToolbar extends _MatToolbarMixinBase implements CanColor, AfterViewInit {\r\n  private _document: Document;\r\n\r\n  /** Reference to all toolbar row elements that have been projected. */\r\n  @ContentChildren(MatToolbarRow) _toolbarRows: QueryList<MatToolbarRow>;\r\n\r\n  constructor(\r\n    elementRef: ElementRef,\r\n    private _platform: Platform,\r\n    @Inject(DOCUMENT) document?: any) {\r\n    super(elementRef);\r\n\r\n    // TODO: make the document a required param when doing breaking changes.\r\n    this._document = document;\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (!isDevMode() || !this._platform.isBrowser) {\r\n      return;\r\n    }\r\n\r\n    this._checkToolbarMixedModes();\r\n    this._toolbarRows.changes.subscribe(() => this._checkToolbarMixedModes());\r\n  }\r\n\r\n  /**\r\n   * Throws an exception when developers are attempting to combine the different toolbar row modes.\r\n   */\r\n  private _checkToolbarMixedModes() {\r\n    if (!this._toolbarRows.length) {\r\n      return;\r\n    }\r\n\r\n    // Check if there are any other DOM nodes that can display content but aren't inside of\r\n    // a <mat-toolbar-row> element.\r\n    const isCombinedUsage = [].slice.call(this._elementRef.nativeElement.childNodes)\r\n      .filter(node => !(node.classList && node.classList.contains('mat-toolbar-row')))\r\n      .filter(node => node.nodeType !== (this._document ? this._document.COMMENT_NODE : 8))\r\n      .some(node => node.textContent.trim());\r\n\r\n    if (isCombinedUsage) {\r\n      throwToolbarMixedModesError();\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Throws an exception when attempting to combine the different toolbar row modes.\r\n * @docs-private\r\n */\r\nexport function throwToolbarMixedModesError() {\r\n  throw Error('MatToolbar: Attempting to combine different toolbar modes. ' +\r\n    'Either specify multiple `<mat-toolbar-row>` elements explicitly or just place content ' +\r\n    'inside of a `<mat-toolbar>` for a single row.');\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {ObserversModule} from '@angular/cdk/observers';\r\nimport {PortalModule} from '@angular/cdk/portal';\r\nimport {ScrollDispatchModule, VIEWPORT_RULER_PROVIDER} from '@angular/cdk/scrolling';\r\nimport {CommonModule} from '@angular/common';\r\nimport {NgModule} from '@angular/core';\r\nimport {MatCommonModule, MatRippleModule} from '@angular/material/core';\r\nimport {MatInkBar} from './ink-bar';\r\nimport {MatTab} from './tab';\r\nimport {MatTabBody, MatTabBodyPortal} from './tab-body';\r\nimport {MatTabGroup} from './tab-group';\r\nimport {MatTabHeader} from './tab-header';\r\nimport {MatTabLabel} from './tab-label';\r\nimport {MatTabLabelWrapper} from './tab-label-wrapper';\r\nimport {MatTabLink, MatTabNav} from './tab-nav-bar/tab-nav-bar';\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    MatCommonModule,\r\n    PortalModule,\r\n    MatRippleModule,\r\n    ObserversModule,\r\n    ScrollDispatchModule,\r\n  ],\r\n  // Don't export all components because some are only to be used internally.\r\n  exports: [\r\n    MatCommonModule,\r\n    MatTabGroup,\r\n    MatTabLabel,\r\n    MatTab,\r\n    MatTabNav,\r\n    MatTabLink,\r\n  ],\r\n  declarations: [\r\n    MatTabGroup,\r\n    MatTabLabel,\r\n    MatTab,\r\n    MatInkBar,\r\n    MatTabLabelWrapper,\r\n    MatTabNav,\r\n    MatTabLink,\r\n    MatTabBody,\r\n    MatTabBodyPortal,\r\n    MatTabHeader\r\n  ],\r\n  providers: [VIEWPORT_RULER_PROVIDER],\r\n})\r\nexport class MatTabsModule {}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\nimport {Directionality} from '@angular/cdk/bidi';\r\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\r\nimport {Platform} from '@angular/cdk/platform';\r\nimport {ViewportRuler} from '@angular/cdk/scrolling';\r\nimport {\r\n  AfterContentInit,\r\n  Attribute,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ContentChildren,\r\n  Directive,\r\n  ElementRef,\r\n  forwardRef,\r\n  Inject,\r\n  Input,\r\n  NgZone,\r\n  OnDestroy,\r\n  Optional,\r\n  QueryList,\r\n  ViewChild,\r\n  ViewEncapsulation,\r\n} from '@angular/core';\r\nimport {\r\n  CanColor,\r\n  CanDisable,\r\n  CanDisableRipple,\r\n  HasTabIndex,\r\n  MAT_RIPPLE_GLOBAL_OPTIONS,\r\n  mixinColor,\r\n  mixinDisabled,\r\n  mixinDisableRipple,\r\n  mixinTabIndex, RippleConfig,\r\n  RippleGlobalOptions,\r\n  RippleRenderer,\r\n  RippleTarget,\r\n  ThemePalette,\r\n} from '@angular/material/core';\r\nimport {merge} from 'rxjs/observable/merge';\r\nimport {of as observableOf} from 'rxjs/observable/of';\r\nimport {takeUntil} from 'rxjs/operators/takeUntil';\r\nimport {Subject} from 'rxjs/Subject';\r\nimport {MatInkBar} from '../ink-bar';\r\n\r\n\r\n// Boilerplate for applying mixins to MatTabNav.\r\n/** @docs-private */\r\nexport class MatTabNavBase {\r\n  constructor(public _elementRef: ElementRef) {}\r\n}\r\nexport const _MatTabNavMixinBase = mixinColor(MatTabNavBase, 'primary');\r\n\r\n/**\r\n * Navigation component matching the styles of the tab group header.\r\n * Provides anchored navigation with animated ink bar.\r\n */\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: '[mat-tab-nav-bar]',\r\n  exportAs: 'matTabNavBar, matTabNav',\r\n  inputs: ['color'],\r\n  templateUrl: 'tab-nav-bar.html',\r\n  styleUrls: ['tab-nav-bar.css'],\r\n  host: {'class': 'mat-tab-nav-bar'},\r\n  encapsulation: ViewEncapsulation.None,\r\n  preserveWhitespaces: false,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class MatTabNav extends _MatTabNavMixinBase implements AfterContentInit, CanColor,\r\n    OnDestroy {\r\n\r\n  /** Subject that emits when the component has been destroyed. */\r\n  private readonly _onDestroy = new Subject<void>();\r\n\r\n  _activeLinkChanged: boolean;\r\n  _activeLinkElement: ElementRef;\r\n\r\n  @ViewChild(MatInkBar) _inkBar: MatInkBar;\r\n\r\n  /** Query list of all tab links of the tab navigation. */\r\n  @ContentChildren(forwardRef(() => MatTabLink), {descendants: true})\r\n  _tabLinks: QueryList<MatTabLink>;\r\n\r\n  /** Background color of the tab nav. */\r\n  @Input()\r\n  get backgroundColor(): ThemePalette { return this._backgroundColor; }\r\n  set backgroundColor(value: ThemePalette) {\r\n    const nativeElement: HTMLElement = this._elementRef.nativeElement;\r\n\r\n    nativeElement.classList.remove(`mat-background-${this.backgroundColor}`);\r\n\r\n    if (value) {\r\n      nativeElement.classList.add(`mat-background-${value}`);\r\n    }\r\n\r\n    this._backgroundColor = value;\r\n  }\r\n  private _backgroundColor: ThemePalette;\r\n\r\n  /** Whether ripples should be disabled for all links or not. */\r\n  @Input()\r\n  get disableRipple() { return this._disableRipple; }\r\n  set disableRipple(value: boolean) {\r\n    this._disableRipple = coerceBooleanProperty(value);\r\n    this._setLinkDisableRipple();\r\n  }\r\n  private _disableRipple: boolean = false;\r\n\r\n  constructor(elementRef: ElementRef,\r\n              @Optional() private _dir: Directionality,\r\n              private _ngZone: NgZone,\r\n              private _changeDetectorRef: ChangeDetectorRef,\r\n              private _viewportRuler: ViewportRuler) {\r\n    super(elementRef);\r\n  }\r\n\r\n  /** Notifies the component that the active link has been changed. */\r\n  updateActiveLink(element: ElementRef) {\r\n    this._activeLinkChanged = this._activeLinkElement != element;\r\n    this._activeLinkElement = element;\r\n\r\n    if (this._activeLinkChanged) {\r\n      this._changeDetectorRef.markForCheck();\r\n    }\r\n  }\r\n\r\n  ngAfterContentInit(): void {\r\n    this._ngZone.runOutsideAngular(() => {\r\n      const dirChange = this._dir ? this._dir.change : observableOf(null);\r\n\r\n      return merge(dirChange, this._viewportRuler.change(10)).pipe(takeUntil(this._onDestroy))\r\n          .subscribe(() => this._alignInkBar());\r\n    });\r\n\r\n    this._setLinkDisableRipple();\r\n  }\r\n\r\n  /** Checks if the active link has been changed and, if so, will update the ink bar. */\r\n  ngAfterContentChecked(): void {\r\n    if (this._activeLinkChanged) {\r\n      this._alignInkBar();\r\n      this._activeLinkChanged = false;\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this._onDestroy.next();\r\n    this._onDestroy.complete();\r\n  }\r\n\r\n  /** Aligns the ink bar to the active link. */\r\n  _alignInkBar(): void {\r\n    if (this._activeLinkElement) {\r\n      this._inkBar.alignToElement(this._activeLinkElement.nativeElement);\r\n    }\r\n  }\r\n\r\n  /** Sets the `disableRipple` property on each link of the navigation bar. */\r\n  private _setLinkDisableRipple() {\r\n    if (this._tabLinks) {\r\n      this._tabLinks.forEach(link => link.disableRipple = this.disableRipple);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n// Boilerplate for applying mixins to MatTabLink.\r\nexport class MatTabLinkBase {}\r\nexport const _MatTabLinkMixinBase =\r\n  mixinTabIndex(mixinDisableRipple(mixinDisabled(MatTabLinkBase)));\r\n\r\n/**\r\n * Link inside of a `mat-tab-nav-bar`.\r\n */\r\n@Directive({\r\n  selector: '[mat-tab-link], [matTabLink]',\r\n  exportAs: 'matTabLink',\r\n  inputs: ['disabled', 'disableRipple', 'tabIndex'],\r\n  host: {\r\n    'class': 'mat-tab-link',\r\n    '[attr.aria-disabled]': 'disabled.toString()',\r\n    '[attr.tabIndex]': 'tabIndex',\r\n    '[class.mat-tab-disabled]': 'disabled',\r\n    '[class.mat-tab-label-active]': 'active',\r\n    '(click)': '_handleClick($event)'\r\n  }\r\n})\r\nexport class MatTabLink extends _MatTabLinkMixinBase\r\n    implements OnDestroy, CanDisable, CanDisableRipple, HasTabIndex, RippleTarget {\r\n\r\n  /** Whether the tab link is active or not. */\r\n  private _isActive: boolean = false;\r\n\r\n  /** Reference to the RippleRenderer for the tab-link. */\r\n  private _tabLinkRipple: RippleRenderer;\r\n\r\n  /** Whether the link is active. */\r\n  @Input()\r\n  get active(): boolean { return this._isActive; }\r\n  set active(value: boolean) {\r\n    this._isActive = value;\r\n    if (value) {\r\n      this._tabNavBar.updateActiveLink(this._elementRef);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Ripple configuration for ripples that are launched on pointer down.\r\n   * @docs-private\r\n   */\r\n  rippleConfig: RippleConfig = {};\r\n\r\n  /**\r\n   * Whether ripples are disabled on interaction\r\n   * @docs-private\r\n   */\r\n  get rippleDisabled(): boolean {\r\n    return this.disabled || this.disableRipple;\r\n  }\r\n\r\n  constructor(private _tabNavBar: MatTabNav,\r\n              private _elementRef: ElementRef,\r\n              ngZone: NgZone,\r\n              platform: Platform,\r\n              @Optional() @Inject(MAT_RIPPLE_GLOBAL_OPTIONS) globalOptions: RippleGlobalOptions,\r\n              @Attribute('tabindex') tabIndex: string) {\r\n    super();\r\n\r\n    this._tabLinkRipple = new RippleRenderer(this, ngZone, _elementRef, platform);\r\n    this._tabLinkRipple.setupTriggerEvents(_elementRef.nativeElement);\r\n\r\n    this.tabIndex = parseInt(tabIndex) || 0;\r\n\r\n    if (globalOptions) {\r\n      this.rippleConfig = {\r\n        terminateOnPointerUp: globalOptions.terminateOnPointerUp,\r\n        speedFactor: globalOptions.baseSpeedFactor,\r\n        animation: globalOptions.animation,\r\n      };\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this._tabLinkRipple._removeTriggerEvents();\r\n  }\r\n\r\n  /**\r\n   * Handles the click event, preventing default navigation if the tab link is disabled.\r\n   */\r\n  _handleClick(event: MouseEvent) {\r\n    if (this.disabled) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {Direction, Directionality} from '@angular/cdk/bidi';\r\nimport {ENTER, LEFT_ARROW, RIGHT_ARROW, SPACE, HOME, END} from '@angular/cdk/keycodes';\r\nimport {\r\n  AfterContentChecked,\r\n  AfterContentInit,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ContentChildren,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Input,\r\n  OnDestroy,\r\n  Optional,\r\n  Output,\r\n  QueryList,\r\n  ViewChild,\r\n  ViewEncapsulation,\r\n} from '@angular/core';\r\nimport {CanDisableRipple, mixinDisableRipple} from '@angular/material/core';\r\nimport {merge} from 'rxjs/observable/merge';\r\nimport {of as observableOf} from 'rxjs/observable/of';\r\nimport {Subscription} from 'rxjs/Subscription';\r\nimport {coerceNumberProperty} from '@angular/cdk/coercion';\r\nimport {MatInkBar} from './ink-bar';\r\nimport {MatTabLabelWrapper} from './tab-label-wrapper';\r\nimport {ViewportRuler} from '@angular/cdk/scrolling';\r\n\r\n\r\n/**\r\n * The directions that scrolling can go in when the header's tabs exceed the header width. 'After'\r\n * will scroll the header towards the end of the tabs list and 'before' will scroll towards the\r\n * beginning of the list.\r\n */\r\nexport type ScrollDirection = 'after' | 'before';\r\n\r\n/**\r\n * The distance in pixels that will be overshot when scrolling a tab label into view. This helps\r\n * provide a small affordance to the label next to it.\r\n */\r\nconst EXAGGERATED_OVERSCROLL = 60;\r\n\r\n// Boilerplate for applying mixins to MatTabHeader.\r\n/** @docs-private */\r\nexport class MatTabHeaderBase {}\r\nexport const _MatTabHeaderMixinBase = mixinDisableRipple(MatTabHeaderBase);\r\n\r\n/**\r\n * The header of the tab group which displays a list of all the tabs in the tab group. Includes\r\n * an ink bar that follows the currently selected tab. When the tabs list's width exceeds the\r\n * width of the header container, then arrows will be displayed to allow the user to scroll\r\n * left and right across the header.\r\n * @docs-private\r\n */\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'mat-tab-header',\r\n  templateUrl: 'tab-header.html',\r\n  styleUrls: ['tab-header.css'],\r\n  inputs: ['disableRipple'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  preserveWhitespaces: false,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  host: {\r\n    'class': 'mat-tab-header',\r\n    '[class.mat-tab-header-pagination-controls-enabled]': '_showPaginationControls',\r\n    '[class.mat-tab-header-rtl]': \"_getLayoutDirection() == 'rtl'\",\r\n  },\r\n})\r\nexport class MatTabHeader extends _MatTabHeaderMixinBase\r\n    implements AfterContentChecked, AfterContentInit, OnDestroy, CanDisableRipple {\r\n\r\n  @ContentChildren(MatTabLabelWrapper) _labelWrappers: QueryList<MatTabLabelWrapper>;\r\n  @ViewChild(MatInkBar) _inkBar: MatInkBar;\r\n  @ViewChild('tabListContainer') _tabListContainer: ElementRef;\r\n  @ViewChild('tabList') _tabList: ElementRef;\r\n\r\n  /** The tab index that is focused. */\r\n  private _focusIndex: number = 0;\r\n\r\n  /** The distance in pixels that the tab labels should be translated to the left. */\r\n  private _scrollDistance = 0;\r\n\r\n  /** Whether the header should scroll to the selected index after the view has been checked. */\r\n  private _selectedIndexChanged = false;\r\n\r\n  /** Combines listeners that will re-align the ink bar whenever they're invoked. */\r\n  private _realignInkBar = Subscription.EMPTY;\r\n\r\n  /** Whether the controls for pagination should be displayed */\r\n  _showPaginationControls = false;\r\n\r\n  /** Whether the tab list can be scrolled more towards the end of the tab label list. */\r\n  _disableScrollAfter = true;\r\n\r\n  /** Whether the tab list can be scrolled more towards the beginning of the tab label list. */\r\n  _disableScrollBefore = true;\r\n\r\n  /**\r\n   * The number of tab labels that are displayed on the header. When this changes, the header\r\n   * should re-evaluate the scroll position.\r\n   */\r\n  private _tabLabelCount: number;\r\n\r\n  /** Whether the scroll distance has changed and should be applied after the view is checked. */\r\n  private _scrollDistanceChanged: boolean;\r\n\r\n  private _selectedIndex: number = 0;\r\n\r\n  /** The index of the active tab. */\r\n  @Input()\r\n  get selectedIndex(): number { return this._selectedIndex; }\r\n  set selectedIndex(value: number) {\r\n    value = coerceNumberProperty(value);\r\n    this._selectedIndexChanged = this._selectedIndex != value;\r\n    this._selectedIndex = value;\r\n    this._focusIndex = value;\r\n  }\r\n\r\n  /** Event emitted when the option is selected. */\r\n  @Output() readonly selectFocusedIndex = new EventEmitter();\r\n\r\n  /** Event emitted when a label is focused. */\r\n  @Output() readonly indexFocused = new EventEmitter();\r\n\r\n  constructor(private _elementRef: ElementRef,\r\n              private _changeDetectorRef: ChangeDetectorRef,\r\n              private _viewportRuler: ViewportRuler,\r\n              @Optional() private _dir: Directionality) {\r\n    super();\r\n  }\r\n\r\n  ngAfterContentChecked(): void {\r\n    // If the number of tab labels have changed, check if scrolling should be enabled\r\n    if (this._tabLabelCount != this._labelWrappers.length) {\r\n      this._updatePagination();\r\n      this._tabLabelCount = this._labelWrappers.length;\r\n      this._changeDetectorRef.markForCheck();\r\n    }\r\n\r\n    // If the selected index has changed, scroll to the label and check if the scrolling controls\r\n    // should be disabled.\r\n    if (this._selectedIndexChanged) {\r\n      this._scrollToLabel(this._selectedIndex);\r\n      this._checkScrollingControls();\r\n      this._alignInkBarToSelectedTab();\r\n      this._selectedIndexChanged = false;\r\n      this._changeDetectorRef.markForCheck();\r\n    }\r\n\r\n    // If the scroll distance has been changed (tab selected, focused, scroll controls activated),\r\n    // then translate the header to reflect this.\r\n    if (this._scrollDistanceChanged) {\r\n      this._updateTabScrollPosition();\r\n      this._scrollDistanceChanged = false;\r\n      this._changeDetectorRef.markForCheck();\r\n    }\r\n  }\r\n\r\n  _handleKeydown(event: KeyboardEvent) {\r\n    switch (event.keyCode) {\r\n      case RIGHT_ARROW:\r\n        this._focusNextTab();\r\n        break;\r\n      case LEFT_ARROW:\r\n        this._focusPreviousTab();\r\n        break;\r\n      case HOME:\r\n        this._focusFirstTab();\r\n        event.preventDefault();\r\n        break;\r\n      case END:\r\n        this._focusLastTab();\r\n        event.preventDefault();\r\n        break;\r\n      case ENTER:\r\n      case SPACE:\r\n        this.selectFocusedIndex.emit(this.focusIndex);\r\n        event.preventDefault();\r\n        break;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Aligns the ink bar to the selected tab on load.\r\n   */\r\n  ngAfterContentInit() {\r\n    const dirChange = this._dir ? this._dir.change : observableOf(null);\r\n    const resize = this._viewportRuler.change(150);\r\n    const realign = () => {\r\n      this._updatePagination();\r\n      this._alignInkBarToSelectedTab();\r\n    };\r\n\r\n    // Defer the first call in order to allow for slower browsers to lay out the elements.\r\n    // This helps in cases where the user lands directly on a page with paginated tabs.\r\n    typeof requestAnimationFrame !== 'undefined' ? requestAnimationFrame(realign) : realign();\r\n    this._realignInkBar = merge(dirChange, resize).subscribe(realign);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this._realignInkBar.unsubscribe();\r\n  }\r\n\r\n  /**\r\n   * Callback for when the MutationObserver detects that the content has changed.\r\n   */\r\n  _onContentChanges() {\r\n    this._updatePagination();\r\n    this._alignInkBarToSelectedTab();\r\n    this._changeDetectorRef.markForCheck();\r\n  }\r\n\r\n  /**\r\n   * Updating the view whether pagination should be enabled or not\r\n   */\r\n  _updatePagination() {\r\n    this._checkPaginationEnabled();\r\n    this._checkScrollingControls();\r\n    this._updateTabScrollPosition();\r\n  }\r\n\r\n  /** When the focus index is set, we must manually send focus to the correct label */\r\n  set focusIndex(value: number) {\r\n    if (!this._isValidIndex(value) || this._focusIndex == value) { return; }\r\n\r\n    this._focusIndex = value;\r\n    this.indexFocused.emit(value);\r\n    this._setTabFocus(value);\r\n  }\r\n\r\n  /** Tracks which element has focus; used for keyboard navigation */\r\n  get focusIndex(): number { return this._focusIndex; }\r\n\r\n  /**\r\n   * Determines if an index is valid.  If the tabs are not ready yet, we assume that the user is\r\n   * providing a valid index and return true.\r\n   */\r\n  _isValidIndex(index: number): boolean {\r\n    if (!this._labelWrappers) { return true; }\r\n\r\n    const tab = this._labelWrappers ? this._labelWrappers.toArray()[index] : null;\r\n    return !!tab && !tab.disabled;\r\n  }\r\n\r\n  /**\r\n   * Sets focus on the HTML element for the label wrapper and scrolls it into the view if\r\n   * scrolling is enabled.\r\n   */\r\n  _setTabFocus(tabIndex: number) {\r\n    if (this._showPaginationControls) {\r\n      this._scrollToLabel(tabIndex);\r\n    }\r\n\r\n    if (this._labelWrappers && this._labelWrappers.length) {\r\n      this._labelWrappers.toArray()[tabIndex].focus();\r\n\r\n      // Do not let the browser manage scrolling to focus the element, this will be handled\r\n      // by using translation. In LTR, the scroll left should be 0. In RTL, the scroll width\r\n      // should be the full width minus the offset width.\r\n      const containerEl = this._tabListContainer.nativeElement;\r\n      const dir = this._getLayoutDirection();\r\n\r\n      if (dir == 'ltr') {\r\n        containerEl.scrollLeft = 0;\r\n      } else {\r\n        containerEl.scrollLeft = containerEl.scrollWidth - containerEl.offsetWidth;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Moves the focus towards the beginning or the end of the list depending on the offset provided.\r\n   * Valid offsets are 1 and -1.\r\n   */\r\n  _moveFocus(offset: number) {\r\n    if (this._labelWrappers) {\r\n      const tabs: MatTabLabelWrapper[] = this._labelWrappers.toArray();\r\n\r\n      for (let i = this.focusIndex + offset; i < tabs.length && i >= 0; i += offset) {\r\n        if (this._isValidIndex(i)) {\r\n          this.focusIndex = i;\r\n          return;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /** Increment the focus index by 1 until a valid tab is found. */\r\n  _focusNextTab(): void {\r\n    this._moveFocus(this._getLayoutDirection() == 'ltr' ? 1 : -1);\r\n  }\r\n\r\n  /** Decrement the focus index by 1 until a valid tab is found. */\r\n  _focusPreviousTab(): void {\r\n    this._moveFocus(this._getLayoutDirection() == 'ltr' ? -1 : 1);\r\n  }\r\n\r\n  /** Focuses the first tab. */\r\n  private _focusFirstTab(): void {\r\n    for (let i = 0; i < this._labelWrappers.length; i++) {\r\n      if (this._isValidIndex(i)) {\r\n        this.focusIndex = i;\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  /** Focuses the last tab. */\r\n  private _focusLastTab(): void {\r\n    for (let i = this._labelWrappers.length - 1; i > -1; i--) {\r\n      if (this._isValidIndex(i)) {\r\n        this.focusIndex = i;\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  /** The layout direction of the containing app. */\r\n  _getLayoutDirection(): Direction {\r\n    return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\r\n  }\r\n\r\n  /** Performs the CSS transformation on the tab list that will cause the list to scroll. */\r\n  _updateTabScrollPosition() {\r\n    const scrollDistance = this.scrollDistance;\r\n    const translateX = this._getLayoutDirection() === 'ltr' ? -scrollDistance : scrollDistance;\r\n\r\n    this._tabList.nativeElement.style.transform = `translate3d(${translateX}px, 0, 0)`;\r\n  }\r\n\r\n  /** Sets the distance in pixels that the tab header should be transformed in the X-axis. */\r\n  get scrollDistance(): number { return this._scrollDistance; }\r\n  set scrollDistance(v: number) {\r\n    this._scrollDistance = Math.max(0, Math.min(this._getMaxScrollDistance(), v));\r\n\r\n    // Mark that the scroll distance has changed so that after the view is checked, the CSS\r\n    // transformation can move the header.\r\n    this._scrollDistanceChanged = true;\r\n    this._checkScrollingControls();\r\n  }\r\n\r\n  /**\r\n   * Moves the tab list in the 'before' or 'after' direction (towards the beginning of the list or\r\n   * the end of the list, respectively). The distance to scroll is computed to be a third of the\r\n   * length of the tab list view window.\r\n   *\r\n   * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\r\n   * should be called sparingly.\r\n   */\r\n  _scrollHeader(scrollDir: ScrollDirection) {\r\n    const viewLength = this._tabListContainer.nativeElement.offsetWidth;\r\n\r\n    // Move the scroll distance one-third the length of the tab list's viewport.\r\n    this.scrollDistance += (scrollDir == 'before' ? -1 : 1) * viewLength / 3;\r\n  }\r\n\r\n  /**\r\n   * Moves the tab list such that the desired tab label (marked by index) is moved into view.\r\n   *\r\n   * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\r\n   * should be called sparingly.\r\n   */\r\n  _scrollToLabel(labelIndex: number) {\r\n    const selectedLabel = this._labelWrappers ? this._labelWrappers.toArray()[labelIndex] : null;\r\n\r\n    if (!selectedLabel) { return; }\r\n\r\n    // The view length is the visible width of the tab labels.\r\n    const viewLength = this._tabListContainer.nativeElement.offsetWidth;\r\n\r\n    let labelBeforePos: number, labelAfterPos: number;\r\n    if (this._getLayoutDirection() == 'ltr') {\r\n      labelBeforePos = selectedLabel.getOffsetLeft();\r\n      labelAfterPos = labelBeforePos + selectedLabel.getOffsetWidth();\r\n    } else {\r\n      labelAfterPos = this._tabList.nativeElement.offsetWidth - selectedLabel.getOffsetLeft();\r\n      labelBeforePos = labelAfterPos - selectedLabel.getOffsetWidth();\r\n    }\r\n\r\n    const beforeVisiblePos = this.scrollDistance;\r\n    const afterVisiblePos = this.scrollDistance + viewLength;\r\n\r\n    if (labelBeforePos < beforeVisiblePos) {\r\n      // Scroll header to move label to the before direction\r\n      this.scrollDistance -= beforeVisiblePos - labelBeforePos + EXAGGERATED_OVERSCROLL;\r\n    } else if (labelAfterPos > afterVisiblePos) {\r\n      // Scroll header to move label to the after direction\r\n      this.scrollDistance += labelAfterPos - afterVisiblePos + EXAGGERATED_OVERSCROLL;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Evaluate whether the pagination controls should be displayed. If the scroll width of the\r\n   * tab list is wider than the size of the header container, then the pagination controls should\r\n   * be shown.\r\n   *\r\n   * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\r\n   * should be called sparingly.\r\n   */\r\n  _checkPaginationEnabled() {\r\n    const isEnabled =\r\n        this._tabList.nativeElement.scrollWidth > this._elementRef.nativeElement.offsetWidth;\r\n\r\n    if (!isEnabled) {\r\n      this.scrollDistance = 0;\r\n    }\r\n\r\n    if (isEnabled !== this._showPaginationControls) {\r\n      this._changeDetectorRef.markForCheck();\r\n    }\r\n\r\n    this._showPaginationControls = isEnabled;\r\n  }\r\n\r\n  /**\r\n   * Evaluate whether the before and after controls should be enabled or disabled.\r\n   * If the header is at the beginning of the list (scroll distance is equal to 0) then disable the\r\n   * before button. If the header is at the end of the list (scroll distance is equal to the\r\n   * maximum distance we can scroll), then disable the after button.\r\n   *\r\n   * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\r\n   * should be called sparingly.\r\n   */\r\n  _checkScrollingControls() {\r\n    // Check if the pagination arrows should be activated.\r\n    this._disableScrollBefore = this.scrollDistance == 0;\r\n    this._disableScrollAfter = this.scrollDistance == this._getMaxScrollDistance();\r\n    this._changeDetectorRef.markForCheck();\r\n  }\r\n\r\n  /**\r\n   * Determines what is the maximum length in pixels that can be set for the scroll distance. This\r\n   * is equal to the difference in width between the tab list container and tab header container.\r\n   *\r\n   * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\r\n   * should be called sparingly.\r\n   */\r\n  _getMaxScrollDistance(): number {\r\n    const lengthOfTabList = this._tabList.nativeElement.scrollWidth;\r\n    const viewLength = this._tabListContainer.nativeElement.offsetWidth;\r\n    return (lengthOfTabList - viewLength) || 0;\r\n  }\r\n\r\n  /** Tells the ink-bar to align itself to the current label wrapper */\r\n  private _alignInkBarToSelectedTab(): void {\r\n    const selectedLabelWrapper = this._labelWrappers && this._labelWrappers.length ?\r\n        this._labelWrappers.toArray()[this.selectedIndex].elementRef.nativeElement :\r\n        null;\r\n\r\n    this._inkBar.alignToElement(selectedLabelWrapper);\r\n  }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {Directive, ElementRef} from '@angular/core';\r\nimport {CanDisable, mixinDisabled} from '@angular/material/core';\r\n\r\n// Boilerplate for applying mixins to MatTabLabelWrapper.\r\n/** @docs-private */\r\nexport class MatTabLabelWrapperBase {}\r\nexport const _MatTabLabelWrapperMixinBase = mixinDisabled(MatTabLabelWrapperBase);\r\n\r\n/**\r\n * Used in the `mat-tab-group` view to display tab labels.\r\n * @docs-private\r\n */\r\n@Directive({\r\n  selector: '[matTabLabelWrapper]',\r\n  inputs: ['disabled'],\r\n  host: {\r\n    '[class.mat-tab-disabled]': 'disabled'\r\n  }\r\n})\r\nexport class MatTabLabelWrapper extends _MatTabLabelWrapperMixinBase implements CanDisable {\r\n  constructor(public elementRef: ElementRef) {\r\n    super();\r\n  }\r\n\r\n  /** Sets focus on the wrapper element */\r\n  focus(): void {\r\n    this.elementRef.nativeElement.focus();\r\n  }\r\n\r\n  getOffsetLeft(): number {\r\n    return this.elementRef.nativeElement.offsetLeft;\r\n  }\r\n\r\n  getOffsetWidth(): number {\r\n    return this.elementRef.nativeElement.offsetWidth;\r\n  }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {\r\n  AfterContentChecked,\r\n  AfterContentInit,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ContentChildren,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Input,\r\n  OnDestroy,\r\n  Output,\r\n  QueryList,\r\n  ViewChild,\r\n  ViewEncapsulation,\r\n} from '@angular/core';\r\nimport {coerceBooleanProperty, coerceNumberProperty} from '@angular/cdk/coercion';\r\nimport {Subscription} from 'rxjs/Subscription';\r\nimport {MatTab} from './tab';\r\nimport {MatTabHeader} from './tab-header';\r\nimport {merge} from 'rxjs/observable/merge';\r\nimport {\r\n  CanColor,\r\n  CanDisableRipple,\r\n  mixinColor,\r\n  mixinDisableRipple,\r\n  ThemePalette\r\n} from '@angular/material/core';\r\n\r\n\r\n/** Used to generate unique ID's for each tab component */\r\nlet nextId = 0;\r\n\r\n/** A simple change event emitted on focus or selection changes. */\r\nexport class MatTabChangeEvent {\r\n  /** Index of the currently-selected tab. */\r\n  index: number;\r\n  /** Reference to the currently-selected tab. */\r\n  tab: MatTab;\r\n}\r\n\r\n/** Possible positions for the tab header. */\r\nexport type MatTabHeaderPosition = 'above' | 'below';\r\n\r\n// Boilerplate for applying mixins to MatTabGroup.\r\n/** @docs-private */\r\nexport class MatTabGroupBase {\r\n  constructor(public _elementRef: ElementRef) {}\r\n}\r\nexport const _MatTabGroupMixinBase = mixinColor(mixinDisableRipple(MatTabGroupBase), 'primary');\r\n\r\n/**\r\n * Material design tab-group component.  Supports basic tab pairs (label + content) and includes\r\n * animated ink-bar, keyboard navigation, and screen reader.\r\n * See: https://www.google.com/design/spec/components/tabs.html\r\n */\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'mat-tab-group',\r\n  exportAs: 'matTabGroup',\r\n  templateUrl: 'tab-group.html',\r\n  styleUrls: ['tab-group.css'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  preserveWhitespaces: false,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  inputs: ['color', 'disableRipple'],\r\n  host: {\r\n    'class': 'mat-tab-group',\r\n    '[class.mat-tab-group-dynamic-height]': 'dynamicHeight',\r\n    '[class.mat-tab-group-inverted-header]': 'headerPosition === \"below\"',\r\n  },\r\n})\r\nexport class MatTabGroup extends _MatTabGroupMixinBase implements AfterContentInit,\r\n    AfterContentChecked, OnDestroy, CanColor, CanDisableRipple {\r\n\r\n  @ContentChildren(MatTab) _tabs: QueryList<MatTab>;\r\n\r\n  @ViewChild('tabBodyWrapper') _tabBodyWrapper: ElementRef;\r\n\r\n  /** The tab index that should be selected after the content has been checked. */\r\n  private _indexToSelect: number | null = 0;\r\n\r\n  /** Snapshot of the height of the tab body wrapper before another tab is activated. */\r\n  private _tabBodyWrapperHeight: number = 0;\r\n\r\n  /** Subscription to tabs being added/removed. */\r\n  private _tabsSubscription = Subscription.EMPTY;\r\n\r\n  /** Subscription to changes in the tab labels. */\r\n  private _tabLabelSubscription = Subscription.EMPTY;\r\n\r\n  /** Whether the tab group should grow to the size of the active tab. */\r\n  @Input()\r\n  get dynamicHeight(): boolean { return this._dynamicHeight; }\r\n  set dynamicHeight(value: boolean) { this._dynamicHeight = coerceBooleanProperty(value); }\r\n  private _dynamicHeight: boolean = false;\r\n\r\n  /**\r\n   * @deprecated\r\n   * @deletion-target 6.0.0\r\n   */\r\n  @Input('mat-dynamic-height')\r\n  get _dynamicHeightDeprecated(): boolean { return this._dynamicHeight; }\r\n  set _dynamicHeightDeprecated(value: boolean) { this._dynamicHeight = value; }\r\n\r\n  /** The index of the active tab. */\r\n  @Input()\r\n  get selectedIndex(): number | null { return this._selectedIndex; }\r\n  set selectedIndex(value: number | null) {\r\n    this._indexToSelect = coerceNumberProperty(value, null);\r\n  }\r\n  private _selectedIndex: number | null = null;\r\n\r\n  /** Position of the tab header. */\r\n  @Input() headerPosition: MatTabHeaderPosition = 'above';\r\n\r\n  /** Background color of the tab group. */\r\n  @Input()\r\n  get backgroundColor(): ThemePalette { return this._backgroundColor; }\r\n  set backgroundColor(value: ThemePalette) {\r\n    const nativeElement: HTMLElement = this._elementRef.nativeElement;\r\n\r\n    nativeElement.classList.remove(`mat-background-${this.backgroundColor}`);\r\n\r\n    if (value) {\r\n      nativeElement.classList.add(`mat-background-${value}`);\r\n    }\r\n\r\n    this._backgroundColor = value;\r\n  }\r\n  private _backgroundColor: ThemePalette;\r\n\r\n  /** Output to enable support for two-way binding on `[(selectedIndex)]` */\r\n  @Output() readonly selectedIndexChange: EventEmitter<number> = new EventEmitter<number>();\r\n\r\n  /** Event emitted when focus has changed within a tab group. */\r\n  @Output() readonly focusChange: EventEmitter<MatTabChangeEvent> =\r\n      new EventEmitter<MatTabChangeEvent>();\r\n\r\n  /** Event emitted when the body animation has completed */\r\n  @Output() readonly animationDone: EventEmitter<void> = new EventEmitter<void>();\r\n\r\n  /** Event emitted when the tab selection has changed. */\r\n  @Output() readonly selectedTabChange: EventEmitter<MatTabChangeEvent> =\r\n      new EventEmitter<MatTabChangeEvent>(true);\r\n\r\n  /**\r\n   * Event emitted when the tab selection has changed.\r\n   * @deprecated Use `selectedTabChange` instead.\r\n   * @deletion-target 6.0.0\r\n   */\r\n  @Output() readonly selectChange: EventEmitter<MatTabChangeEvent> = this.selectedTabChange;\r\n\r\n  private _groupId: number;\r\n\r\n  constructor(elementRef: ElementRef,\r\n              private _changeDetectorRef: ChangeDetectorRef) {\r\n    super(elementRef);\r\n    this._groupId = nextId++;\r\n  }\r\n\r\n  /**\r\n   * After the content is checked, this component knows what tabs have been defined\r\n   * and what the selected index should be. This is where we can know exactly what position\r\n   * each tab should be in according to the new selected index, and additionally we know how\r\n   * a new selected tab should transition in (from the left or right).\r\n   */\r\n  ngAfterContentChecked() {\r\n    // Clamp the next selected index to the boundsof 0 and the tabs length.\r\n    // Note the `|| 0`, which ensures that values like NaN can't get through\r\n    // and which would otherwise throw the component into an infinite loop\r\n    // (since Math.max(NaN, 0) === NaN).\r\n    let indexToSelect = this._indexToSelect =\r\n        Math.min(this._tabs.length - 1, Math.max(this._indexToSelect || 0, 0));\r\n\r\n    // If there is a change in selected index, emit a change event. Should not trigger if\r\n    // the selected index has not yet been initialized.\r\n    if (this._selectedIndex != indexToSelect && this._selectedIndex != null) {\r\n      const tabChangeEvent = this._createChangeEvent(indexToSelect);\r\n      this.selectedTabChange.emit(tabChangeEvent);\r\n      // Emitting this value after change detection has run\r\n      // since the checked content may contain this variable'\r\n      Promise.resolve().then(() => this.selectedIndexChange.emit(indexToSelect));\r\n    }\r\n\r\n    // Setup the position for each tab and optionally setup an origin on the next selected tab.\r\n    this._tabs.forEach((tab: MatTab, index: number) => {\r\n      tab.position = index - indexToSelect;\r\n      tab.isActive = index === indexToSelect;\r\n\r\n      // If there is already a selected tab, then set up an origin for the next selected tab\r\n      // if it doesn't have one already.\r\n      if (this._selectedIndex != null && tab.position == 0 && !tab.origin) {\r\n        tab.origin = indexToSelect - this._selectedIndex;\r\n      }\r\n    });\r\n\r\n    if (this._selectedIndex !== indexToSelect) {\r\n      this._selectedIndex = indexToSelect;\r\n      this._changeDetectorRef.markForCheck();\r\n    }\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    this._subscribeToTabLabels();\r\n\r\n    // Subscribe to changes in the amount of tabs, in order to be\r\n    // able to re-render the content as new tabs are added or removed.\r\n    this._tabsSubscription = this._tabs.changes.subscribe(() => {\r\n      this._subscribeToTabLabels();\r\n      this._changeDetectorRef.markForCheck();\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this._tabsSubscription.unsubscribe();\r\n    this._tabLabelSubscription.unsubscribe();\r\n  }\r\n\r\n  _focusChanged(index: number) {\r\n    this.focusChange.emit(this._createChangeEvent(index));\r\n  }\r\n\r\n  private _createChangeEvent(index: number): MatTabChangeEvent {\r\n    const event = new MatTabChangeEvent;\r\n    event.index = index;\r\n    if (this._tabs && this._tabs.length) {\r\n      event.tab = this._tabs.toArray()[index];\r\n    }\r\n    return event;\r\n  }\r\n\r\n  /**\r\n   * Subscribes to changes in the tab labels. This is needed, because the @Input for the label is\r\n   * on the MatTab component, whereas the data binding is inside the MatTabGroup. In order for the\r\n   * binding to be updated, we need to subscribe to changes in it and trigger change detection\r\n   * manually.\r\n   */\r\n  private _subscribeToTabLabels() {\r\n    if (this._tabLabelSubscription) {\r\n      this._tabLabelSubscription.unsubscribe();\r\n    }\r\n\r\n    this._tabLabelSubscription = merge(\r\n        ...this._tabs.map(tab => tab._disableChange),\r\n        ...this._tabs.map(tab => tab._labelChange)).subscribe(() => {\r\n      this._changeDetectorRef.markForCheck();\r\n    });\r\n  }\r\n\r\n  /** Returns a unique id for each tab label element */\r\n  _getTabLabelId(i: number): string {\r\n    return `mat-tab-label-${this._groupId}-${i}`;\r\n  }\r\n\r\n  /** Returns a unique id for each tab content element */\r\n  _getTabContentId(i: number): string {\r\n    return `mat-tab-content-${this._groupId}-${i}`;\r\n  }\r\n\r\n  /**\r\n   * Sets the height of the body wrapper to the height of the activating tab if dynamic\r\n   * height property is true.\r\n   */\r\n  _setTabBodyWrapperHeight(tabHeight: number): void {\r\n    if (!this._dynamicHeight || !this._tabBodyWrapperHeight) { return; }\r\n\r\n    const wrapper: HTMLElement = this._tabBodyWrapper.nativeElement;\r\n\r\n    wrapper.style.height = this._tabBodyWrapperHeight + 'px';\r\n\r\n    // This conditional forces the browser to paint the height so that\r\n    // the animation to the new height can have an origin.\r\n    if (this._tabBodyWrapper.nativeElement.offsetHeight) {\r\n      wrapper.style.height = tabHeight + 'px';\r\n    }\r\n  }\r\n\r\n  /** Removes the height of the tab body wrapper. */\r\n  _removeTabBodyWrapperHeight(): void {\r\n    this._tabBodyWrapperHeight = this._tabBodyWrapper.nativeElement.clientHeight;\r\n    this._tabBodyWrapper.nativeElement.style.height = '';\r\n    this.animationDone.emit();\r\n  }\r\n\r\n  /** Handle click events, setting new selected index if appropriate. */\r\n  _handleClick(tab: MatTab, tabHeader: MatTabHeader, idx: number) {\r\n    if (!tab.disabled) {\r\n      this.selectedIndex = tabHeader.focusIndex = idx;\r\n    }\r\n  }\r\n\r\n  /** Retrieves the tabindex for the tab. */\r\n  _getTabIndex(tab: MatTab, idx: number): number | null {\r\n    if (tab.disabled) {\r\n      return null;\r\n    }\r\n    return this.selectedIndex === idx ? 0 : -1;\r\n  }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {\r\n  Component,\r\n  Input,\r\n  Inject,\r\n  Output,\r\n  EventEmitter,\r\n  OnDestroy,\r\n  OnInit,\r\n  ElementRef,\r\n  Directive,\r\n  Optional,\r\n  ViewEncapsulation,\r\n  ChangeDetectionStrategy,\r\n  ComponentFactoryResolver,\r\n  ViewContainerRef,\r\n  forwardRef,\r\n} from '@angular/core';\r\nimport {AnimationEvent} from '@angular/animations';\r\nimport {TemplatePortal, CdkPortalOutlet} from '@angular/cdk/portal';\r\nimport {Directionality, Direction} from '@angular/cdk/bidi';\r\nimport {Subscription} from 'rxjs/Subscription';\r\nimport {matTabsAnimations} from './tabs-animations';\r\n\r\n/**\r\n * These position states are used internally as animation states for the tab body. Setting the\r\n * position state to left, right, or center will transition the tab body from its current\r\n * position to its respective state. If there is not current position (void, in the case of a new\r\n * tab body), then there will be no transition animation to its state.\r\n *\r\n * In the case of a new tab body that should immediately be centered with an animating transition,\r\n * then left-origin-center or right-origin-center can be used, which will use left or right as its\r\n * psuedo-prior state.\r\n */\r\nexport type MatTabBodyPositionState =\r\n    'left' | 'center' | 'right' | 'left-origin-center' | 'right-origin-center';\r\n\r\n/**\r\n * The origin state is an internally used state that is set on a new tab body indicating if it\r\n * began to the left or right of the prior selected index. For example, if the selected index was\r\n * set to 1, and a new tab is created and selected at index 2, then the tab body would have an\r\n * origin of right because its index was greater than the prior selected index.\r\n */\r\nexport type MatTabBodyOriginState = 'left' | 'right';\r\n\r\n/**\r\n * The portal host directive for the contents of the tab.\r\n * @docs-private\r\n */\r\n@Directive({\r\n  selector: '[matTabBodyHost]'\r\n})\r\nexport class MatTabBodyPortal extends CdkPortalOutlet implements OnInit, OnDestroy {\r\n  /** A subscription to events for when the tab body begins centering. */\r\n  private _centeringSub: Subscription;\r\n  /** A subscription to events for when the tab body finishes leaving from center position. */\r\n  private _leavingSub: Subscription;\r\n\r\n  constructor(\r\n    _componentFactoryResolver: ComponentFactoryResolver,\r\n    _viewContainerRef: ViewContainerRef,\r\n    @Inject(forwardRef(() => MatTabBody)) private _host: MatTabBody) {\r\n      super(_componentFactoryResolver, _viewContainerRef);\r\n  }\r\n\r\n  /** Set initial visibility or set up subscription for changing visibility. */\r\n  ngOnInit(): void {\r\n    if (this._host._isCenterPosition(this._host._position)) {\r\n      this.attach(this._host._content);\r\n    }\r\n    this._centeringSub = this._host._beforeCentering.subscribe((isCentering: boolean) => {\r\n      if (isCentering) {\r\n        if (!this.hasAttached()) {\r\n          this.attach(this._host._content);\r\n        }\r\n      }\r\n    });\r\n\r\n    this._leavingSub = this._host._afterLeavingCenter.subscribe(() => {\r\n      this.detach();\r\n    });\r\n  }\r\n\r\n  /** Clean up centering subscription. */\r\n  ngOnDestroy(): void {\r\n    if (this._centeringSub && !this._centeringSub.closed) {\r\n      this._centeringSub.unsubscribe();\r\n    }\r\n\r\n    if (this._leavingSub && !this._leavingSub.closed) {\r\n      this._leavingSub.unsubscribe();\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Wrapper for the contents of a tab.\r\n * @docs-private\r\n */\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'mat-tab-body',\r\n  templateUrl: 'tab-body.html',\r\n  styleUrls: ['tab-body.css'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  preserveWhitespaces: false,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  animations: [matTabsAnimations.translateTab],\r\n  host: {\r\n    'class': 'mat-tab-body',\r\n  },\r\n})\r\nexport class MatTabBody implements OnInit {\r\n  /** Event emitted when the tab begins to animate towards the center as the active tab. */\r\n  @Output() readonly _onCentering: EventEmitter<number> = new EventEmitter<number>();\r\n\r\n  /** Event emitted before the centering of the tab begins. */\r\n  @Output() readonly _beforeCentering: EventEmitter<boolean> = new EventEmitter<boolean>();\r\n\r\n  /** Event emitted before the centering of the tab begins. */\r\n  @Output() readonly _afterLeavingCenter: EventEmitter<boolean> = new EventEmitter<boolean>();\r\n\r\n  /** Event emitted when the tab completes its animation towards the center. */\r\n  @Output() readonly _onCentered: EventEmitter<void> = new EventEmitter<void>(true);\r\n\r\n  /** The tab body content to display. */\r\n  @Input('content') _content: TemplatePortal;\r\n\r\n  /** The shifted index position of the tab body, where zero represents the active center tab. */\r\n  @Input()\r\n  set position(position: number) {\r\n    if (position < 0) {\r\n      this._position = this._getLayoutDirection() == 'ltr' ? 'left' : 'right';\r\n    } else if (position > 0) {\r\n      this._position = this._getLayoutDirection() == 'ltr' ? 'right' : 'left';\r\n    } else {\r\n      this._position = 'center';\r\n    }\r\n  }\r\n  _position: MatTabBodyPositionState;\r\n\r\n  /** The origin position from which this tab should appear when it is centered into view. */\r\n  @Input()\r\n  set origin(origin: number) {\r\n    if (origin == null) { return; }\r\n\r\n    const dir = this._getLayoutDirection();\r\n    if ((dir == 'ltr' && origin <= 0) || (dir == 'rtl' && origin > 0)) {\r\n      this._origin = 'left';\r\n    } else {\r\n      this._origin = 'right';\r\n    }\r\n  }\r\n  _origin: MatTabBodyOriginState;\r\n\r\n  constructor(private _elementRef: ElementRef,\r\n              @Optional() private _dir: Directionality) { }\r\n\r\n  /**\r\n   * After initialized, check if the content is centered and has an origin. If so, set the\r\n   * special position states that transition the tab from the left or right before centering.\r\n   */\r\n  ngOnInit() {\r\n    if (this._position == 'center' && this._origin) {\r\n      this._position = this._origin == 'left' ? 'left-origin-center' : 'right-origin-center';\r\n    }\r\n  }\r\n\r\n  _onTranslateTabStarted(e: AnimationEvent): void {\r\n    const isCentering = this._isCenterPosition(e.toState);\r\n    this._beforeCentering.emit(isCentering);\r\n    if (isCentering) {\r\n      this._onCentering.emit(this._elementRef.nativeElement.clientHeight);\r\n    }\r\n  }\r\n\r\n  _onTranslateTabComplete(e: AnimationEvent): void {\r\n    // If the transition to the center is complete, emit an event.\r\n    if (this._isCenterPosition(e.toState) && this._isCenterPosition(this._position)) {\r\n      this._onCentered.emit();\r\n    }\r\n\r\n    if (this._isCenterPosition(e.fromState) && !this._isCenterPosition(this._position)) {\r\n      this._afterLeavingCenter.emit();\r\n    }\r\n  }\r\n\r\n  /** The text direction of the containing app. */\r\n  _getLayoutDirection(): Direction {\r\n    return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\r\n  }\r\n\r\n  /** Whether the provided position state is considered center, regardless of origin. */\r\n  _isCenterPosition(position: MatTabBodyPositionState|string): boolean {\r\n    return position == 'center' ||\r\n        position == 'left-origin-center' ||\r\n        position == 'right-origin-center';\r\n  }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\nimport {\r\n  animate,\r\n  state,\r\n  style,\r\n  transition,\r\n  trigger,\r\n  AnimationTriggerMetadata,\r\n} from '@angular/animations';\r\n\r\n/** Animations used by the Material tabs. */\r\nexport const matTabsAnimations: {\r\n  readonly translateTab: AnimationTriggerMetadata;\r\n} = {\r\n  /** Animation translates a tab along the X axis. */\r\n  translateTab: trigger('translateTab', [\r\n    // Note: transitions to `none` instead of 0, because some browsers might blur the content.\r\n    state('center, void, left-origin-center, right-origin-center', style({transform: 'none'})),\r\n    state('left', style({transform: 'translate3d(-100%, 0, 0)'})),\r\n    state('right', style({transform: 'translate3d(100%, 0, 0)'})),\r\n    transition('* => left, * => right, left => center, right => center',\r\n        animate('500ms cubic-bezier(0.35, 0, 0.25, 1)')),\r\n    transition('void => left-origin-center', [\r\n      style({transform: 'translate3d(-100%, 0, 0)'}),\r\n      animate('500ms cubic-bezier(0.35, 0, 0.25, 1)')\r\n    ]),\r\n    transition('void => right-origin-center', [\r\n      style({transform: 'translate3d(100%, 0, 0)'}),\r\n      animate('500ms cubic-bezier(0.35, 0, 0.25, 1)')\r\n    ])\r\n  ])\r\n};\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {TemplatePortal} from '@angular/cdk/portal';\r\nimport {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  ContentChild,\r\n  Input,\r\n  OnChanges,\r\n  OnDestroy,\r\n  OnInit,\r\n  SimpleChanges,\r\n  TemplateRef,\r\n  ViewChild,\r\n  ViewContainerRef,\r\n  ViewEncapsulation,\r\n} from '@angular/core';\r\nimport {CanDisable, mixinDisabled} from '@angular/material/core';\r\nimport {Subject} from 'rxjs/Subject';\r\nimport {MatTabLabel} from './tab-label';\r\n\r\n\r\n// Boilerplate for applying mixins to MatTab.\r\n/** @docs-private */\r\nexport class MatTabBase {}\r\nexport const _MatTabMixinBase = mixinDisabled(MatTabBase);\r\n\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'mat-tab',\r\n  templateUrl: 'tab.html',\r\n  inputs: ['disabled'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  encapsulation: ViewEncapsulation.None,\r\n  preserveWhitespaces: false,\r\n  exportAs: 'matTab',\r\n})\r\nexport class MatTab extends _MatTabMixinBase implements OnInit, CanDisable, OnChanges, OnDestroy {\r\n  /** Content for the tab label given by `<ng-template mat-tab-label>`. */\r\n  @ContentChild(MatTabLabel) templateLabel: MatTabLabel;\r\n\r\n  /** Template inside the MatTab view that contains an `<ng-content>`. */\r\n  @ViewChild(TemplateRef) _content: TemplateRef<any>;\r\n\r\n  /** The plain text label for the tab, used when there is no template label. */\r\n  @Input('label') textLabel: string = '';\r\n\r\n  /** The portal that will be the hosted content of the tab */\r\n  private _contentPortal: TemplatePortal | null = null;\r\n\r\n  /** @docs-private */\r\n  get content(): TemplatePortal | null {\r\n    return this._contentPortal;\r\n  }\r\n\r\n  /** Emits whenever the label changes. */\r\n  readonly _labelChange = new Subject<void>();\r\n\r\n  /** Emits whenever the disable changes */\r\n  readonly _disableChange = new Subject<void>();\r\n\r\n  /**\r\n   * The relatively indexed position where 0 represents the center, negative is left, and positive\r\n   * represents the right.\r\n   */\r\n  position: number | null = null;\r\n\r\n  /**\r\n   * The initial relatively index origin of the tab if it was created and selected after there\r\n   * was already a selected tab. Provides context of what position the tab should originate from.\r\n   */\r\n  origin: number | null = null;\r\n\r\n  /**\r\n   * Whether the tab is currently active.\r\n   */\r\n  isActive = false;\r\n\r\n  constructor(private _viewContainerRef: ViewContainerRef) {\r\n    super();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.hasOwnProperty('textLabel')) {\r\n      this._labelChange.next();\r\n    }\r\n\r\n    if (changes.hasOwnProperty('disabled')) {\r\n      this._disableChange.next();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this._disableChange.complete();\r\n    this._labelChange.complete();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this._contentPortal = new TemplatePortal(this._content, this._viewContainerRef);\r\n  }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {Directive, TemplateRef, ViewContainerRef} from '@angular/core';\r\nimport {CdkPortal} from '@angular/cdk/portal';\r\n\r\n/** Used to flag tab labels for use with the portal directive */\r\n@Directive({\r\n  selector: '[mat-tab-label], [matTabLabel]',\r\n})\r\nexport class MatTabLabel extends CdkPortal {\r\n  constructor(templateRef: TemplateRef<any>, viewContainerRef: ViewContainerRef) {\r\n    super(templateRef, viewContainerRef);\r\n  }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {Directive, ElementRef, NgZone} from '@angular/core';\r\n\r\n\r\n/**\r\n * The ink-bar is used to display and animate the line underneath the current active tab label.\r\n * @docs-private\r\n */\r\n@Directive({\r\n  selector: 'mat-ink-bar',\r\n  host: {\r\n    'class': 'mat-ink-bar',\r\n  },\r\n})\r\nexport class MatInkBar {\r\n  constructor(\r\n    private _elementRef: ElementRef,\r\n    private _ngZone: NgZone) {}\r\n\r\n  /**\r\n   * Calculates the styles from the provided element in order to align the ink-bar to that element.\r\n   * Shows the ink bar if previously set as hidden.\r\n   * @param element\r\n   */\r\n  alignToElement(element: HTMLElement) {\r\n    this.show();\r\n\r\n    if (typeof requestAnimationFrame !== 'undefined') {\r\n      this._ngZone.runOutsideAngular(() => {\r\n        requestAnimationFrame(() => this._setStyles(element));\r\n      });\r\n    } else {\r\n      this._setStyles(element);\r\n    }\r\n  }\r\n\r\n  /** Shows the ink bar. */\r\n  show(): void {\r\n    this._elementRef.nativeElement.style.visibility = 'visible';\r\n  }\r\n\r\n  /** Hides the ink bar. */\r\n  hide(): void {\r\n    this._elementRef.nativeElement.style.visibility = 'hidden';\r\n  }\r\n\r\n  /**\r\n   * Sets the proper styles to the ink bar element.\r\n   * @param element\r\n   */\r\n  private _setStyles(element: HTMLElement) {\r\n    const inkBar: HTMLElement = this._elementRef.nativeElement;\r\n\r\n    inkBar.style.left = element ? (element.offsetLeft || 0) + 'px' : '0';\r\n    inkBar.style.width = element ? (element.offsetWidth || 0) + 'px' : '0';\r\n  }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {DataSource} from '@angular/cdk/table';\r\nimport {BehaviorSubject} from 'rxjs/BehaviorSubject';\r\nimport {MatPaginator} from '@angular/material/paginator';\r\nimport {MatSort} from '@angular/material/sort';\r\nimport {Subscription} from 'rxjs/Subscription';\r\nimport {combineLatest} from 'rxjs/operators/combineLatest';\r\nimport {map} from 'rxjs/operators/map';\r\nimport {startWith} from 'rxjs/operators/startWith';\r\nimport {empty} from 'rxjs/observable/empty';\r\nimport {_isNumberValue} from '@angular/cdk/coercion';\r\n\r\n/**\r\n * Data source that accepts a client-side data array and includes native support of filtering,\r\n * sorting (using MatSort), and pagination (using MatPaginator).\r\n *\r\n * Allows for sort customization by overriding sortingDataAccessor, which defines how data\r\n * properties are accessed. Also allows for filter customization by overriding filterTermAccessor,\r\n * which defines how row data is converted to a string for filter matching.\r\n */\r\nexport class MatTableDataSource<T> extends DataSource<T> {\r\n  /** Stream that emits when a new data array is set on the data source. */\r\n  private readonly _data: BehaviorSubject<T[]>;\r\n\r\n  /** Stream emitting render data to the table (depends on ordered data changes). */\r\n  private readonly _renderData = new BehaviorSubject<T[]>([]);\r\n\r\n  /** Stream that emits when a new filter string is set on the data source. */\r\n  private readonly _filter = new BehaviorSubject<string>('');\r\n\r\n  /**\r\n   * Subscription to the changes that should trigger an update to the table's rendered rows, such\r\n   * as filtering, sorting, pagination, or base data changes.\r\n   */\r\n  _renderChangesSubscription: Subscription;\r\n\r\n  /**\r\n   * The filtered set of data that has been matched by the filter string, or all the data if there\r\n   * is no filter. Useful for knowing the set of data the table represents.\r\n   * For example, a 'selectAll()' function would likely want to select the set of filtered data\r\n   * shown to the user rather than all the data.\r\n   */\r\n  filteredData: T[];\r\n\r\n  /** Array of data that should be rendered by the table, where each object represents one row. */\r\n  get data() { return this._data.value; }\r\n  set data(data: T[]) { this._data.next(data); }\r\n\r\n  /**\r\n   * Filter term that should be used to filter out objects from the data array. To override how\r\n   * data objects match to this filter string, provide a custom function for filterPredicate.\r\n   */\r\n  get filter(): string { return this._filter.value; }\r\n  set filter(filter: string) { this._filter.next(filter); }\r\n\r\n  /**\r\n   * Instance of the MatSort directive used by the table to control its sorting. Sort changes\r\n   * emitted by the MatSort will trigger an update to the table's rendered data.\r\n   */\r\n  get sort(): MatSort | null { return this._sort; }\r\n  set sort(sort: MatSort|null) {\r\n    this._sort = sort;\r\n    this._updateChangeSubscription();\r\n  }\r\n  private _sort: MatSort|null;\r\n\r\n  /**\r\n   * Instance of the MatPaginator component used by the table to control what page of the data is\r\n   * displayed. Page changes emitted by the MatPaginator will trigger an update to the\r\n   * table's rendered data.\r\n   *\r\n   * Note that the data source uses the paginator's properties to calculate which page of data\r\n   * should be displayed. If the paginator receives its properties as template inputs,\r\n   * e.g. `[pageLength]=100` or `[pageIndex]=1`, then be sure that the paginator's view has been\r\n   * initialized before assigning it to this data source.\r\n   */\r\n  get paginator(): MatPaginator | null { return this._paginator; }\r\n  set paginator(paginator: MatPaginator|null) {\r\n    this._paginator = paginator;\r\n    this._updateChangeSubscription();\r\n  }\r\n  private _paginator: MatPaginator|null;\r\n\r\n  /**\r\n   * Data accessor function that is used for accessing data properties for sorting through\r\n   * the default sortData function.\r\n   * This default function assumes that the sort header IDs (which defaults to the column name)\r\n   * matches the data's properties (e.g. column Xyz represents data['Xyz']).\r\n   * May be set to a custom function for different behavior.\r\n   * @param data Data object that is being accessed.\r\n   * @param sortHeaderId The name of the column that represents the data.\r\n   */\r\n  sortingDataAccessor: ((data: T, sortHeaderId: string) => string|number) =\r\n      (data: T, sortHeaderId: string): string|number => {\r\n    const value: any = data[sortHeaderId];\r\n    return _isNumberValue(value) ? Number(value) : value;\r\n  }\r\n\r\n  /**\r\n   * Gets a sorted copy of the data array based on the state of the MatSort. Called\r\n   * after changes are made to the filtered data or when sort changes are emitted from MatSort.\r\n   * By default, the function retrieves the active sort and its direction and compares data\r\n   * by retrieving data using the sortingDataAccessor. May be overridden for a custom implementation\r\n   * of data ordering.\r\n   * @param data The array of data that should be sorted.\r\n   * @param sort The connected MatSort that holds the current sort state.\r\n   */\r\n  sortData: ((data: T[], sort: MatSort) => T[]) = (data: T[], sort: MatSort): T[] => {\r\n    const active = sort.active;\r\n    const direction = sort.direction;\r\n    if (!active || direction == '') { return data; }\r\n\r\n    return data.sort((a, b) => {\r\n      let valueA = this.sortingDataAccessor(a, active);\r\n      let valueB = this.sortingDataAccessor(b, active);\r\n\r\n      // If both valueA and valueB exist (truthy), then compare the two. Otherwise, check if\r\n      // one value exists while the other doesn't. In this case, existing value should come first.\r\n      // This avoids inconsistent results when comparing values to undefined/null.\r\n      // If neither value exists, return 0 (equal).\r\n      let comparatorResult = 0;\r\n      if (valueA && valueB) {\r\n        // Check if one value is greater than the other; if equal, comparatorResult should remain 0.\r\n        if (valueA > valueB) {\r\n          comparatorResult = 1;\r\n        } else if (valueA < valueB) {\r\n          comparatorResult = -1;\r\n        }\r\n      } else if (valueA) {\r\n        comparatorResult = 1;\r\n      } else if (valueB) {\r\n        comparatorResult = -1;\r\n      }\r\n\r\n      return comparatorResult * (direction == 'asc' ? 1 : -1);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Checks if a data object matches the data source's filter string. By default, each data object\r\n   * is converted to a string of its properties and returns true if the filter has\r\n   * at least one occurrence in that string. By default, the filter string has its whitespace\r\n   * trimmed and the match is case-insensitive. May be overridden for a custom implementation of\r\n   * filter matching.\r\n   * @param data Data object used to check against the filter.\r\n   * @param filter Filter string that has been set on the data source.\r\n   * @returns Whether the filter matches against the data\r\n   */\r\n  filterPredicate: ((data: T, filter: string) => boolean) = (data: T, filter: string): boolean => {\r\n    // Transform the data into a lowercase string of all property values.\r\n    const accumulator = (currentTerm, key) => currentTerm + data[key];\r\n    const dataStr = Object.keys(data).reduce(accumulator, '').toLowerCase();\r\n\r\n    // Transform the filter by converting it to lowercase and removing whitespace.\r\n    const transformedFilter = filter.trim().toLowerCase();\r\n\r\n    return dataStr.indexOf(transformedFilter) != -1;\r\n  }\r\n\r\n  constructor(initialData: T[] = []) {\r\n    super();\r\n    this._data = new BehaviorSubject<T[]>(initialData);\r\n    this._updateChangeSubscription();\r\n  }\r\n\r\n  /**\r\n   * Subscribe to changes that should trigger an update to the table's rendered rows. When the\r\n   * changes occur, process the current state of the filter, sort, and pagination along with\r\n   * the provided base data and send it to the table for rendering.\r\n   */\r\n  _updateChangeSubscription() {\r\n    // Sorting and/or pagination should be watched if MatSort and/or MatPaginator are provided.\r\n    // Otherwise, use an empty observable stream to take their place.\r\n    const sortChange = this._sort ? this._sort.sortChange : empty();\r\n    const pageChange = this._paginator ? this._paginator.page : empty();\r\n\r\n    if (this._renderChangesSubscription) {\r\n      this._renderChangesSubscription.unsubscribe();\r\n    }\r\n\r\n    // Watch for base data or filter changes to provide a filtered set of data.\r\n    this._renderChangesSubscription = this._data.pipe(\r\n      combineLatest(this._filter),\r\n      map(([data]) => this._filterData(data)),\r\n      // Watch for filtered data or sort changes to provide an ordered set of data.\r\n      combineLatest(sortChange.pipe(startWith(null!))),\r\n      map(([data]) => this._orderData(data)),\r\n      // Watch for ordered data or page changes to provide a paged set of data.\r\n      combineLatest(pageChange.pipe(startWith(null!))),\r\n      map(([data]) => this._pageData(data))\r\n    )\r\n    // Watched for paged data changes and send the result to the table to render.\r\n    .subscribe(data => this._renderData.next(data));\r\n  }\r\n\r\n  /**\r\n   * Returns a filtered data array where each filter object contains the filter string within\r\n   * the result of the filterTermAccessor function. If no filter is set, returns the data array\r\n   * as provided.\r\n   */\r\n  _filterData(data: T[]) {\r\n    // If there is a filter string, filter out data that does not contain it.\r\n    // Each data object is converted to a string using the function defined by filterTermAccessor.\r\n    // May be overridden for customization.\r\n    this.filteredData =\r\n        !this.filter ? data : data.filter(obj => this.filterPredicate(obj, this.filter));\r\n\r\n    if (this.paginator) { this._updatePaginator(this.filteredData.length); }\r\n\r\n    return this.filteredData;\r\n  }\r\n\r\n  /**\r\n   * Returns a sorted copy of the data if MatSort has a sort applied, otherwise just returns the\r\n   * data array as provided. Uses the default data accessor for data lookup, unless a\r\n   * sortDataAccessor function is defined.\r\n   */\r\n  _orderData(data: T[]): T[] {\r\n    // If there is no active sort or direction, return the data without trying to sort.\r\n    if (!this.sort) { return data; }\r\n\r\n    return this.sortData(data.slice(), this.sort);\r\n  }\r\n\r\n  /**\r\n   * Returns a paged splice of the provided data array according to the provided MatPaginator's page\r\n   * index and length. If there is no paginator provided, returns the data array as provided.\r\n   */\r\n  _pageData(data: T[]): T[] {\r\n    if (!this.paginator) { return data; }\r\n\r\n    const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\r\n    return data.slice().splice(startIndex, this.paginator.pageSize);\r\n  }\r\n\r\n  /**\r\n   * Updates the paginator to reflect the length of the filtered data, and makes sure that the page\r\n   * index does not exceed the paginator's last page. Values are changed in a resolved promise to\r\n   * guard against making property changes within a round of change detection.\r\n   */\r\n  _updatePaginator(filteredDataLength: number) {\r\n    Promise.resolve().then(() => {\r\n      if (!this.paginator) { return; }\r\n\r\n      this.paginator.length = filteredDataLength;\r\n\r\n      // If the page index is set beyond the page, reduce it to the last page.\r\n      if (this.paginator.pageIndex > 0) {\r\n        const lastPageIndex = Math.ceil(this.paginator.length / this.paginator.pageSize) - 1 || 0;\r\n        this.paginator.pageIndex = Math.min(this.paginator.pageIndex, lastPageIndex);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Used by the MatTable. Called when it connects to the data source.\r\n   * @docs-private\r\n   */\r\n  connect() { return this._renderData; }\r\n\r\n  /**\r\n   * Used by the MatTable. Called when it is destroyed. No-op.\r\n   * @docs-private\r\n   */\r\n  disconnect() { }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {NgModule} from '@angular/core';\r\nimport {MatTable} from './table';\r\nimport {CdkTableModule} from '@angular/cdk/table';\r\nimport {MatCell, MatCellDef, MatColumnDef, MatHeaderCell, MatHeaderCellDef} from './cell';\r\nimport {MatHeaderRow, MatHeaderRowDef, MatRow, MatRowDef} from './row';\r\nimport {CommonModule} from '@angular/common';\r\nimport {MatCommonModule} from '@angular/material/core';\r\n\r\n@NgModule({\r\n  imports: [CdkTableModule, CommonModule, MatCommonModule],\r\n  exports: [MatTable, MatCellDef, MatHeaderCellDef, MatColumnDef,\r\n    MatHeaderCell, MatCell, MatHeaderRow, MatRow,\r\n    MatHeaderRowDef, MatRowDef],\r\n  declarations: [MatTable, MatCellDef, MatHeaderCellDef, MatColumnDef,\r\n    MatHeaderCell, MatCell, MatHeaderRow, MatRow,\r\n    MatHeaderRowDef, MatRowDef],\r\n})\r\nexport class MatTableModule {}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {ChangeDetectionStrategy, Component, Directive, ViewEncapsulation} from '@angular/core';\r\nimport {\r\n  CDK_ROW_TEMPLATE,\r\n  CdkHeaderRow,\r\n  CdkHeaderRowDef,\r\n  CdkRow,\r\n  CdkRowDef,\r\n} from '@angular/cdk/table';\r\n\r\n/**\r\n * Header row definition for the mat-table.\r\n * Captures the header row's template and other header properties such as the columns to display.\r\n */\r\n@Directive({\r\n  selector: '[matHeaderRowDef]',\r\n  providers: [{provide: CdkHeaderRowDef, useExisting: MatHeaderRowDef}],\r\n  inputs: ['columns: matHeaderRowDef'],\r\n})\r\nexport class MatHeaderRowDef extends CdkHeaderRowDef { }\r\n\r\n/**\r\n * Data row definition for the mat-table.\r\n * Captures the header row's template and other row properties such as the columns to display and\r\n * a when predicate that describes when this row should be used.\r\n */\r\n@Directive({\r\n  selector: '[matRowDef]',\r\n  providers: [{provide: CdkRowDef, useExisting: MatRowDef}],\r\n  inputs: ['columns: matRowDefColumns', 'when: matRowDefWhen'],\r\n})\r\nexport class MatRowDef<T> extends CdkRowDef<T> {\r\n}\r\n\r\n/** Header template container that contains the cell outlet. Adds the right class and role. */\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'mat-header-row',\r\n  template: CDK_ROW_TEMPLATE,\r\n  host: {\r\n    'class': 'mat-header-row',\r\n    'role': 'row',\r\n  },\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  encapsulation: ViewEncapsulation.None,\r\n  exportAs: 'matHeaderRow',\r\n  preserveWhitespaces: false,\r\n})\r\nexport class MatHeaderRow extends CdkHeaderRow { }\r\n\r\n/** Data row template container that contains the cell outlet. Adds the right class and role. */\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'mat-row',\r\n  template: CDK_ROW_TEMPLATE,\r\n  host: {\r\n    'class': 'mat-row',\r\n    'role': 'row',\r\n  },\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  encapsulation: ViewEncapsulation.None,\r\n  exportAs: 'matRow',\r\n  preserveWhitespaces: false,\r\n})\r\nexport class MatRow extends CdkRow { }\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {Directive, ElementRef, Input} from '@angular/core';\r\nimport {\r\n  CdkCell,\r\n  CdkCellDef,\r\n  CdkColumnDef,\r\n  CdkHeaderCell,\r\n  CdkHeaderCellDef,\r\n} from '@angular/cdk/table';\r\n\r\n/**\r\n * Cell definition for the mat-table.\r\n * Captures the template of a column's data row cell as well as cell-specific properties.\r\n */\r\n@Directive({\r\n  selector: '[matCellDef]',\r\n  providers: [{provide: CdkCellDef, useExisting: MatCellDef}]\r\n})\r\nexport class MatCellDef extends CdkCellDef { }\r\n\r\n/**\r\n * Header cell definition for the mat-table.\r\n * Captures the template of a column's header cell and as well as cell-specific properties.\r\n */\r\n@Directive({\r\n  selector: '[matHeaderCellDef]',\r\n  providers: [{provide: CdkHeaderCellDef, useExisting: MatHeaderCellDef}]\r\n})\r\nexport class MatHeaderCellDef extends CdkHeaderCellDef { }\r\n\r\n/**\r\n * Column definition for the mat-table.\r\n * Defines a set of cells available for a table column.\r\n */\r\n@Directive({\r\n  selector: '[matColumnDef]',\r\n  providers: [{provide: CdkColumnDef, useExisting: MatColumnDef}],\r\n})\r\nexport class MatColumnDef extends CdkColumnDef {\r\n  /** Unique name for this column. */\r\n  @Input('matColumnDef') name: string;\r\n}\r\n\r\n/** Header cell template container that adds the right classes and role. */\r\n@Directive({\r\n  selector: 'mat-header-cell',\r\n  host: {\r\n    'class': 'mat-header-cell',\r\n    'role': 'columnheader',\r\n  },\r\n})\r\nexport class MatHeaderCell extends CdkHeaderCell {\r\n  constructor(columnDef: CdkColumnDef,\r\n              elementRef: ElementRef) {\r\n    super(columnDef, elementRef);\r\n    elementRef.nativeElement.classList.add(`mat-column-${columnDef.cssClassFriendlyName}`);\r\n  }\r\n}\r\n\r\n/** Cell template container that adds the right classes and role. */\r\n@Directive({\r\n  selector: 'mat-cell',\r\n  host: {\r\n    'class': 'mat-cell',\r\n    'role': 'gridcell',\r\n  },\r\n})\r\nexport class MatCell extends CdkCell {\r\n  constructor(columnDef: CdkColumnDef,\r\n              elementRef: ElementRef) {\r\n    super(columnDef, elementRef);\r\n    elementRef.nativeElement.classList.add(`mat-column-${columnDef.cssClassFriendlyName}`);\r\n  }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {ChangeDetectionStrategy, Component, ViewEncapsulation} from '@angular/core';\r\nimport {CDK_TABLE_TEMPLATE, CdkTable} from '@angular/cdk/table';\r\n\r\n/**\r\n * Wrapper for the CdkTable with Material design styles.\r\n */\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'mat-table',\r\n  exportAs: 'matTable',\r\n  template: CDK_TABLE_TEMPLATE,\r\n  styleUrls: ['table.css'],\r\n  host: {\r\n    'class': 'mat-table',\r\n  },\r\n  encapsulation: ViewEncapsulation.None,\r\n  preserveWhitespaces: false,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class MatTable<T> extends CdkTable<T> { }\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {A11yModule} from '@angular/cdk/a11y';\r\nimport {PortalModule} from '@angular/cdk/portal';\r\nimport {CdkStepperModule} from '@angular/cdk/stepper';\r\nimport {CommonModule} from '@angular/common';\r\nimport {NgModule} from '@angular/core';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatCommonModule, MatRippleModule, ErrorStateMatcher} from '@angular/material/core';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatStepHeader} from './step-header';\r\nimport {MatStepLabel} from './step-label';\r\nimport {MatStepperNext, MatStepperPrevious} from './stepper-button';\r\nimport {MatStepperIntl} from './stepper-intl';\r\nimport {MatStepperIcon} from './stepper-icon';\r\nimport {MatHorizontalStepper, MatStep, MatStepper, MatVerticalStepper} from './stepper';\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    MatCommonModule,\r\n    CommonModule,\r\n    PortalModule,\r\n    MatButtonModule,\r\n    CdkStepperModule,\r\n    MatIconModule,\r\n    A11yModule,\r\n    MatRippleModule,\r\n  ],\r\n  exports: [\r\n    MatCommonModule,\r\n    MatHorizontalStepper,\r\n    MatVerticalStepper,\r\n    MatStep,\r\n    MatStepLabel,\r\n    MatStepper,\r\n    MatStepperNext,\r\n    MatStepperPrevious,\r\n    MatStepHeader,\r\n    MatStepperIcon,\r\n  ],\r\n  declarations: [\r\n    MatHorizontalStepper,\r\n    MatVerticalStepper,\r\n    MatStep,\r\n    MatStepLabel,\r\n    MatStepper,\r\n    MatStepperNext,\r\n    MatStepperPrevious,\r\n    MatStepHeader,\r\n    MatStepperIcon,\r\n  ],\r\n  providers: [MatStepperIntl, ErrorStateMatcher],\r\n})\r\nexport class MatStepperModule {}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {Directive} from '@angular/core';\r\nimport {CdkStepper, CdkStepperNext, CdkStepperPrevious} from '@angular/cdk/stepper';\r\nimport {MatStepper} from './stepper';\r\n\r\n/** Button that moves to the next step in a stepper workflow. */\r\n@Directive({\r\n  selector: 'button[matStepperNext]',\r\n  host: {\r\n    '(click)': '_stepper.next()',\r\n    '[type]': 'type',\r\n  },\r\n  inputs: ['type'],\r\n  providers: [{provide: CdkStepper, useExisting: MatStepper}]\r\n})\r\nexport class MatStepperNext extends CdkStepperNext {}\r\n\r\n/** Button that moves to the previous step in a stepper workflow. */\r\n@Directive({\r\n  selector: 'button[matStepperPrevious]',\r\n  host: {\r\n    '(click)': '_stepper.previous()',\r\n    '[type]': 'type',\r\n  },\r\n  inputs: ['type'],\r\n  providers: [{provide: CdkStepper, useExisting: MatStepper}]\r\n})\r\nexport class MatStepperPrevious extends CdkStepperPrevious {}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {CdkStep, CdkStepper} from '@angular/cdk/stepper';\r\nimport {Directionality} from '@angular/cdk/bidi';\r\nimport {\r\n  AfterContentInit,\r\n  Component,\r\n  ContentChild,\r\n  ContentChildren,\r\n  Directive,\r\n  ElementRef,\r\n  forwardRef,\r\n  Inject,\r\n  QueryList,\r\n  SkipSelf,\r\n  ViewChildren,\r\n  ViewEncapsulation,\r\n  ChangeDetectorRef,\r\n  ChangeDetectionStrategy,\r\n  Optional,\r\n  TemplateRef,\r\n} from '@angular/core';\r\nimport {FormControl, FormGroupDirective, NgForm} from '@angular/forms';\r\nimport {ErrorStateMatcher} from '@angular/material/core';\r\nimport {MatStepHeader} from './step-header';\r\nimport {MatStepLabel} from './step-label';\r\nimport {takeUntil} from 'rxjs/operators/takeUntil';\r\nimport {matStepperAnimations} from './stepper-animations';\r\nimport {MatStepperIcon} from './stepper-icon';\r\n\r\n/** Workaround for https://github.com/angular/angular/issues/17849 */\r\nexport const _MatStep = CdkStep;\r\nexport const _MatStepper = CdkStepper;\r\n\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'mat-step',\r\n  templateUrl: 'step.html',\r\n  providers: [{provide: ErrorStateMatcher, useExisting: MatStep}],\r\n  encapsulation: ViewEncapsulation.None,\r\n  exportAs: 'matStep',\r\n  preserveWhitespaces: false,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class MatStep extends CdkStep implements ErrorStateMatcher {\r\n  /** Content for step label given by `<ng-template matStepLabel>`. */\r\n  @ContentChild(MatStepLabel) stepLabel: MatStepLabel;\r\n\r\n  constructor(@Inject(forwardRef(() => MatStepper)) stepper: MatStepper,\r\n              @SkipSelf() private _errorStateMatcher: ErrorStateMatcher) {\r\n    super(stepper);\r\n  }\r\n\r\n  /** Custom error state matcher that additionally checks for validity of interacted form. */\r\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\r\n    const originalErrorState = this._errorStateMatcher.isErrorState(control, form);\r\n\r\n    // Custom error state checks for the validity of form that is not submitted or touched\r\n    // since user can trigger a form change by calling for another step without directly\r\n    // interacting with the current form.\r\n    const customErrorState = !!(control && control.invalid && this.interacted);\r\n\r\n    return originalErrorState || customErrorState;\r\n  }\r\n}\r\n\r\n\r\n@Directive({\r\n  selector: '[matStepper]'\r\n})\r\nexport class MatStepper extends CdkStepper implements AfterContentInit {\r\n  /** The list of step headers of the steps in the stepper. */\r\n  @ViewChildren(MatStepHeader, {read: ElementRef}) _stepHeader: QueryList<ElementRef>;\r\n\r\n  /** Steps that the stepper holds. */\r\n  @ContentChildren(MatStep) _steps: QueryList<MatStep>;\r\n\r\n  /** Custom icon overrides passed in by the consumer. */\r\n  @ContentChildren(MatStepperIcon) _icons: QueryList<MatStepperIcon>;\r\n\r\n  /** Consumer-specified template-refs to be used to override the header icons. */\r\n  _iconOverrides: {[key: string]: TemplateRef<any>} = {};\r\n\r\n  ngAfterContentInit() {\r\n    const icons = this._icons.toArray();\r\n    const editOverride = icons.find(icon => icon.name === 'edit');\r\n    const doneOverride = icons.find(icon => icon.name === 'done');\r\n\r\n    if (editOverride) {\r\n      this._iconOverrides.edit = editOverride.templateRef;\r\n    }\r\n\r\n    if (doneOverride) {\r\n      this._iconOverrides.done = doneOverride.templateRef;\r\n    }\r\n\r\n    // Mark the component for change detection whenever the content children query changes\r\n    this._steps.changes.pipe(takeUntil(this._destroyed)).subscribe(() => this._stateChanged());\r\n  }\r\n}\r\n\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'mat-horizontal-stepper',\r\n  exportAs: 'matHorizontalStepper',\r\n  templateUrl: 'stepper-horizontal.html',\r\n  styleUrls: ['stepper.css'],\r\n  inputs: ['selectedIndex'],\r\n  host: {\r\n    'class': 'mat-stepper-horizontal',\r\n    'aria-orientation': 'horizontal',\r\n    'role': 'tablist',\r\n  },\r\n  animations: [matStepperAnimations.horizontalStepTransition],\r\n  providers: [{provide: MatStepper, useExisting: MatHorizontalStepper}],\r\n  encapsulation: ViewEncapsulation.None,\r\n  preserveWhitespaces: false,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class MatHorizontalStepper extends MatStepper { }\r\n\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'mat-vertical-stepper',\r\n  exportAs: 'matVerticalStepper',\r\n  templateUrl: 'stepper-vertical.html',\r\n  styleUrls: ['stepper.css'],\r\n  inputs: ['selectedIndex'],\r\n  host: {\r\n    'class': 'mat-stepper-vertical',\r\n    'aria-orientation': 'vertical',\r\n    'role': 'tablist',\r\n  },\r\n  animations: [matStepperAnimations.verticalStepTransition],\r\n  providers: [{provide: MatStepper, useExisting: MatVerticalStepper}],\r\n  encapsulation: ViewEncapsulation.None,\r\n  preserveWhitespaces: false,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class MatVerticalStepper extends MatStepper {\r\n  constructor(@Optional() dir: Directionality, changeDetectorRef: ChangeDetectorRef) {\r\n    super(dir, changeDetectorRef);\r\n    this._orientation = 'vertical';\r\n  }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {Directive, Input, TemplateRef} from '@angular/core';\r\n\r\n/**\r\n * Template to be used to override the icons inside the step header.\r\n */\r\n@Directive({\r\n  selector: 'ng-template[matStepperIcon]',\r\n})\r\nexport class MatStepperIcon {\r\n  /** Name of the icon to be overridden. */\r\n  @Input('matStepperIcon') name: 'edit' | 'done';\r\n\r\n  constructor(public templateRef: TemplateRef<any>) { }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\nimport {\r\n  animate,\r\n  state,\r\n  style,\r\n  transition,\r\n  trigger,\r\n  AnimationTriggerMetadata,\r\n} from '@angular/animations';\r\n\r\n/** Animations used by the Material steppers. */\r\nexport const matStepperAnimations: {\r\n  readonly horizontalStepTransition: AnimationTriggerMetadata;\r\n  readonly verticalStepTransition: AnimationTriggerMetadata;\r\n} = {\r\n  /** Animation that transitions the step along the X axis in a horizontal stepper. */\r\n  horizontalStepTransition: trigger('stepTransition', [\r\n    state('previous', style({transform: 'translate3d(-100%, 0, 0)', visibility: 'hidden'})),\r\n    state('current', style({transform: 'none', visibility: 'visible'})),\r\n    state('next', style({transform: 'translate3d(100%, 0, 0)', visibility: 'hidden'})),\r\n    transition('* => *', animate('500ms cubic-bezier(0.35, 0, 0.25, 1)'))\r\n  ]),\r\n\r\n  /** Animation that transitions the step along the Y axis in a vertical stepper. */\r\n  verticalStepTransition: trigger('stepTransition', [\r\n    state('previous', style({height: '0px', visibility: 'hidden'})),\r\n    state('next', style({height: '0px', visibility: 'hidden'})),\r\n    state('current', style({height: '*', visibility: 'visible'})),\r\n    transition('* <=> current', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)'))\r\n  ])\r\n};\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {FocusMonitor} from '@angular/cdk/a11y';\r\nimport {coerceBooleanProperty, coerceNumberProperty} from '@angular/cdk/coercion';\r\nimport {\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ElementRef,\r\n  Input,\r\n  OnDestroy,\r\n  ViewEncapsulation,\r\n  TemplateRef,\r\n} from '@angular/core';\r\nimport {Subscription} from 'rxjs/Subscription';\r\nimport {MatStepLabel} from './step-label';\r\nimport {MatStepperIntl} from './stepper-intl';\r\n\r\n\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'mat-step-header',\r\n  templateUrl: 'step-header.html',\r\n  styleUrls: ['step-header.css'],\r\n  host: {\r\n    'class': 'mat-step-header',\r\n    'role': 'tab',\r\n  },\r\n  encapsulation: ViewEncapsulation.None,\r\n  preserveWhitespaces: false,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class MatStepHeader implements OnDestroy {\r\n  private _intlSubscription: Subscription;\r\n\r\n  /** State of the given step. */\r\n  @Input() state: string;\r\n\r\n  /** Label of the given step. */\r\n  @Input() label: MatStepLabel | string;\r\n\r\n  /** Overrides for the header icons, passed in via the stepper. */\r\n  @Input() iconOverrides: {[key: string]: TemplateRef<any>};\r\n\r\n  /** Index of the given step. */\r\n  @Input()\r\n  get index(): number { return this._index; }\r\n  set index(value: number) { this._index = coerceNumberProperty(value); }\r\n  private _index: number;\r\n\r\n  /** Whether the given step is selected. */\r\n  @Input()\r\n  get selected(): boolean { return this._selected; }\r\n  set selected(value: boolean) { this._selected = coerceBooleanProperty(value); }\r\n  private _selected: boolean;\r\n\r\n  /** Whether the given step label is active. */\r\n  @Input()\r\n  get active(): boolean { return this._active; }\r\n  set active(value: boolean) { this._active = coerceBooleanProperty(value); }\r\n  private _active: boolean;\r\n\r\n  /** Whether the given step is optional. */\r\n  @Input()\r\n  get optional(): boolean { return this._optional; }\r\n  set optional(value: boolean) { this._optional = coerceBooleanProperty(value); }\r\n  private _optional: boolean;\r\n\r\n  constructor(\r\n    public _intl: MatStepperIntl,\r\n    private _focusMonitor: FocusMonitor,\r\n    private _element: ElementRef,\r\n    changeDetectorRef: ChangeDetectorRef) {\r\n    _focusMonitor.monitor(_element.nativeElement, true);\r\n    this._intlSubscription = _intl.changes.subscribe(() => changeDetectorRef.markForCheck());\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this._intlSubscription.unsubscribe();\r\n    this._focusMonitor.stopMonitoring(this._element.nativeElement);\r\n  }\r\n\r\n  /** Returns string label of given step if it is a text label. */\r\n  _stringLabel(): string | null {\r\n    return this.label instanceof MatStepLabel ? null : this.label;\r\n  }\r\n\r\n  /** Returns MatStepLabel if the label of given step is a template label. */\r\n  _templateLabel(): MatStepLabel | null {\r\n    return this.label instanceof MatStepLabel ? this.label : null;\r\n  }\r\n\r\n  /** Returns the host HTML element. */\r\n  _getHostElement() {\r\n    return this._element.nativeElement;\r\n  }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {Injectable} from '@angular/core';\r\nimport {Subject} from 'rxjs/Subject';\r\n\r\n\r\n/** Stepper data that is required for internationalization. */\r\n@Injectable()\r\nexport class MatStepperIntl {\r\n  /**\r\n   * Stream that emits whenever the labels here are changed. Use this to notify\r\n   * components if the labels have changed after initialization.\r\n   */\r\n  readonly changes: Subject<void> = new Subject<void>();\r\n\r\n  /** Label that is rendered below optional steps. */\r\n  optionalLabel: string = 'Optional';\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {Directive, TemplateRef} from '@angular/core';\r\nimport {CdkStepLabel} from '@angular/cdk/stepper';\r\n\r\n@Directive({\r\n  selector: '[matStepLabel]',\r\n})\r\nexport class MatStepLabel extends CdkStepLabel {\r\n  constructor(template: TemplateRef<any>) {\r\n    super(template);\r\n  }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {NgModule} from '@angular/core';\r\nimport {MatSortHeader} from './sort-header';\r\nimport {MatSort} from './sort';\r\nimport {MAT_SORT_HEADER_INTL_PROVIDER} from './sort-header-intl';\r\nimport {CommonModule} from '@angular/common';\r\n\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  exports: [MatSort, MatSortHeader],\r\n  declarations: [MatSort, MatSortHeader],\r\n  providers: [MAT_SORT_HEADER_INTL_PROVIDER]\r\n})\r\nexport class MatSortModule {}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  Input,\r\n  Optional,\r\n  ViewEncapsulation\r\n} from '@angular/core';\r\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\r\nimport {CdkColumnDef} from '@angular/cdk/table';\r\nimport {Subscription} from 'rxjs/Subscription';\r\nimport {merge} from 'rxjs/observable/merge';\r\nimport {MatSort, MatSortable} from './sort';\r\nimport {SortDirection} from './sort-direction';\r\nimport {MatSortHeaderIntl} from './sort-header-intl';\r\nimport {getSortHeaderNotContainedWithinSortError} from './sort-errors';\r\nimport {CanDisable, mixinDisabled} from '@angular/material/core';\r\nimport {matSortAnimations} from './sort-animations';\r\n\r\n// Boilerplate for applying mixins to the sort header.\r\n/** @docs-private */\r\nexport class MatSortHeaderBase {}\r\nexport const _MatSortHeaderMixinBase = mixinDisabled(MatSortHeaderBase);\r\n\r\n/**\r\n * Valid positions for the arrow to be in for its opacity and translation. If the state is a\r\n * sort direction, the position of the arrow will be above/below and opacity 0. If the state is\r\n * hint, the arrow will be in the center with a slight opacity. Active state means the arrow will\r\n * be fully opaque in the center.\r\n *\r\n * @docs-private\r\n */\r\nexport type ArrowViewState = SortDirection | 'hint' | 'active';\r\n\r\n/**\r\n * States describing the arrow's animated position (animating fromState to toState).\r\n * If the fromState is not defined, there will be no animated transition to the toState.\r\n * @docs-private\r\n */\r\nexport interface ArrowViewStateTransition {\r\n  fromState?: ArrowViewState;\r\n  toState: ArrowViewState;\r\n}\r\n\r\n/**\r\n * Applies sorting behavior (click to change sort) and styles to an element, including an\r\n * arrow to display the current sort direction.\r\n *\r\n * Must be provided with an id and contained within a parent MatSort directive.\r\n *\r\n * If used on header cells in a CdkTable, it will automatically default its id from its containing\r\n * column definition.\r\n */\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: '[mat-sort-header]',\r\n  exportAs: 'matSortHeader',\r\n  templateUrl: 'sort-header.html',\r\n  styleUrls: ['sort-header.css'],\r\n  host: {\r\n    '(click)': '_handleClick()',\r\n    '(mouseenter)': '_setIndicatorHintVisible(true)',\r\n    '(longpress)': '_setIndicatorHintVisible(true)',\r\n    '(mouseleave)': '_setIndicatorHintVisible(false)',\r\n    '[class.mat-sort-header-disabled]': '_isDisabled()',\r\n  },\r\n  encapsulation: ViewEncapsulation.None,\r\n  preserveWhitespaces: false,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  inputs: ['disabled'],\r\n  animations: [\r\n    matSortAnimations.indicator,\r\n    matSortAnimations.leftPointer,\r\n    matSortAnimations.rightPointer,\r\n    matSortAnimations.arrowOpacity,\r\n    matSortAnimations.arrowPosition,\r\n    matSortAnimations.allowChildren,\r\n  ]\r\n})\r\nexport class MatSortHeader extends _MatSortHeaderMixinBase implements MatSortable, CanDisable {\r\n  private _rerenderSubscription: Subscription;\r\n\r\n  /**\r\n   * Flag set to true when the indicator should be displayed while the sort is not active. Used to\r\n   * provide an affordance that the header is sortable by showing on focus and hover.\r\n   */\r\n  _showIndicatorHint: boolean = false;\r\n\r\n  /**\r\n   * The view transition state of the arrow (translation/ opacity) - indicates its `from` and `to`\r\n   * position through the animation. If animations are currently disabled, the fromState is removed\r\n   * so that there is no animation displayed.\r\n   */\r\n  _viewState: ArrowViewStateTransition;\r\n\r\n  /** The direction the arrow should be facing according to the current state. */\r\n  _arrowDirection: SortDirection = '';\r\n\r\n  /**\r\n   * Whether the view state animation should show the transition between the `from` and `to` states.\r\n   */\r\n  _disableViewStateAnimation = false;\r\n\r\n  /**\r\n   * ID of this sort header. If used within the context of a CdkColumnDef, this will default to\r\n   * the column's name.\r\n   */\r\n  @Input('mat-sort-header') id: string;\r\n\r\n  /** Sets the position of the arrow that displays when sorted. */\r\n  @Input() arrowPosition: 'before' | 'after' = 'after';\r\n\r\n  /** Overrides the sort start value of the containing MatSort for this MatSortable. */\r\n  @Input() start: 'asc' | 'desc';\r\n\r\n  /** Overrides the disable clear value of the containing MatSort for this MatSortable. */\r\n  @Input()\r\n  get disableClear(): boolean { return this._disableClear; }\r\n  set disableClear(v) { this._disableClear = coerceBooleanProperty(v); }\r\n  private _disableClear: boolean;\r\n\r\n  constructor(public _intl: MatSortHeaderIntl,\r\n              changeDetectorRef: ChangeDetectorRef,\r\n              @Optional() public _sort: MatSort,\r\n              @Optional() public _cdkColumnDef: CdkColumnDef) {\r\n\r\n    super();\r\n\r\n    if (!_sort) {\r\n      throw getSortHeaderNotContainedWithinSortError();\r\n    }\r\n\r\n    this._rerenderSubscription = merge(_sort.sortChange, _sort._stateChanges, _intl.changes)\r\n        .subscribe(() => {\r\n          if (this._isSorted()) {\r\n            this._updateArrowDirection();\r\n          }\r\n\r\n          // If this header was recently active and now no longer sorted, animate away the arrow.\r\n          if (!this._isSorted() && this._viewState && this._viewState.toState === 'active') {\r\n            this._disableViewStateAnimation = false;\r\n            this._setAnimationTransitionState({fromState: 'active', toState: this._arrowDirection});\r\n          }\r\n\r\n          changeDetectorRef.markForCheck();\r\n        });\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (!this.id && this._cdkColumnDef) {\r\n      this.id = this._cdkColumnDef.name;\r\n    }\r\n\r\n    // Initialize the direction of the arrow and set the view state to be immediately that state.\r\n    this._updateArrowDirection();\r\n    this._setAnimationTransitionState(\r\n        {toState: this._isSorted() ? 'active' : this._arrowDirection});\r\n\r\n    this._sort.register(this);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this._sort.deregister(this);\r\n    this._rerenderSubscription.unsubscribe();\r\n  }\r\n\r\n  /**\r\n   * Sets the \"hint\" state such that the arrow will be semi-transparently displayed as a hint to the\r\n   * user showing what the active sort will become. If set to false, the arrow will fade away.\r\n   */\r\n  _setIndicatorHintVisible(visible: boolean) {\r\n    // No-op if the sort header is disabled - should not make the hint visible.\r\n    if (this._isDisabled() && visible) { return; }\r\n\r\n    this._showIndicatorHint = visible;\r\n\r\n    if (!this._isSorted()) {\r\n      this._updateArrowDirection();\r\n      if (this._showIndicatorHint) {\r\n        this._setAnimationTransitionState({fromState: this._arrowDirection, toState: 'hint'});\r\n      } else {\r\n        this._setAnimationTransitionState({fromState: 'hint', toState: this._arrowDirection});\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Sets the animation transition view state for the arrow's position and opacity. If the\r\n   * `disableViewStateAnimation` flag is set to true, the `fromState` will be ignored so that\r\n   * no animation appears.\r\n   */\r\n  _setAnimationTransitionState(viewState: ArrowViewStateTransition) {\r\n    this._viewState = viewState;\r\n\r\n    // If the animation for arrow position state (opacity/translation) should be disabled,\r\n    // remove the fromState so that it jumps right to the toState.\r\n    if (this._disableViewStateAnimation) {\r\n      this._viewState = {toState: viewState.toState};\r\n    }\r\n  }\r\n\r\n  /** Triggers the sort on this sort header and removes the indicator hint. */\r\n  _handleClick() {\r\n    if (this._isDisabled()) { return; }\r\n\r\n    this._sort.sort(this);\r\n\r\n    // Do not show the animation if the header was already shown in the right position.\r\n    if (this._viewState.toState === 'hint' || this._viewState.toState === 'active') {\r\n      this._disableViewStateAnimation = true;\r\n    }\r\n\r\n    // If the arrow is now sorted, animate the arrow into place. Otherwise, animate it away into\r\n    // the direction it is facing.\r\n    const viewState: ArrowViewStateTransition = this._isSorted() ?\r\n        {fromState: this._arrowDirection, toState: 'active'} :\r\n        {fromState: 'active', toState: this._arrowDirection};\r\n    this._setAnimationTransitionState(viewState);\r\n\r\n    this._showIndicatorHint = false;\r\n  }\r\n\r\n  /** Whether this MatSortHeader is currently sorted in either ascending or descending order. */\r\n  _isSorted() {\r\n    return this._sort.active == this.id &&\r\n        (this._sort.direction === 'asc' || this._sort.direction === 'desc');\r\n  }\r\n\r\n  /** Returns the animation state for the arrow direction (indicator and pointers). */\r\n  _getArrowDirectionState() {\r\n    return `${this._isSorted() ? 'active-' : ''}${this._arrowDirection}`;\r\n  }\r\n\r\n  /** Returns the arrow position state (opacity, translation). */\r\n  _getArrowViewState() {\r\n    const fromState = this._viewState.fromState;\r\n    return (fromState ? `${fromState}-to-` : '') + this._viewState.toState;\r\n  }\r\n\r\n  /**\r\n   * Updates the direction the arrow should be pointing. If it is not sorted, the arrow should be\r\n   * facing the start direction. Otherwise if it is sorted, the arrow should point in the currently\r\n   * active sorted direction. The reason this is updated through a function is because the direction\r\n   * should only be changed at specific times - when deactivated but the hint is displayed and when\r\n   * the sort is active and the direction changes. Otherwise the arrow's direction should linger\r\n   * in cases such as the sort becoming deactivated but we want to animate the arrow away while\r\n   * preserving its direction, even though the next sort direction is actually different and should\r\n   * only be changed once the arrow displays again (hint or activation).\r\n   */\r\n  _updateArrowDirection() {\r\n    this._arrowDirection = this._isSorted() ?\r\n        this._sort.direction :\r\n        (this.start || this._sort.start);\r\n  }\r\n\r\n  _isDisabled() {\r\n    return this._sort.disabled || this.disabled;\r\n  }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\nimport {\r\n  animate,\r\n  state,\r\n  style,\r\n  transition,\r\n  trigger,\r\n  keyframes,\r\n  AnimationTriggerMetadata, query, animateChild,\r\n} from '@angular/animations';\r\nimport {AnimationCurves, AnimationDurations} from '@angular/material/core';\r\n\r\nconst SORT_ANIMATION_TRANSITION = AnimationDurations.ENTERING + ' ' +\r\n                                  AnimationCurves.STANDARD_CURVE;\r\n\r\n/** Animations used by MatSort. */\r\nexport const matSortAnimations: {\r\n  readonly indicator: AnimationTriggerMetadata;\r\n  readonly leftPointer: AnimationTriggerMetadata;\r\n  readonly rightPointer: AnimationTriggerMetadata;\r\n  readonly arrowOpacity: AnimationTriggerMetadata;\r\n  readonly arrowPosition: AnimationTriggerMetadata;\r\n  readonly allowChildren: AnimationTriggerMetadata;\r\n} = {\r\n  /** Animation that moves the sort indicator. */\r\n  indicator: trigger('indicator', [\r\n    state('active-asc, asc', style({transform: 'translateY(0px)'})),\r\n    // 10px is the height of the sort indicator, minus the width of the pointers\r\n    state('active-desc, desc', style({transform: 'translateY(10px)'})),\r\n    transition('active-asc <=> active-desc', animate(SORT_ANIMATION_TRANSITION))\r\n  ]),\r\n\r\n  /** Animation that rotates the left pointer of the indicator based on the sorting direction. */\r\n  leftPointer: trigger('leftPointer', [\r\n    state('active-asc, asc', style({transform: 'rotate(-45deg)'})),\r\n    state('active-desc, desc', style({transform: 'rotate(45deg)'})),\r\n    transition('active-asc <=> active-desc', animate(SORT_ANIMATION_TRANSITION))\r\n  ]),\r\n\r\n  /** Animation that rotates the right pointer of the indicator based on the sorting direction. */\r\n  rightPointer: trigger('rightPointer', [\r\n    state('active-asc, asc', style({transform: 'rotate(45deg)'})),\r\n    state('active-desc, desc', style({transform: 'rotate(-45deg)'})),\r\n    transition('active-asc <=> active-desc', animate(SORT_ANIMATION_TRANSITION))\r\n  ]),\r\n\r\n  /** Animation that controls the arrow opacity. */\r\n  arrowOpacity: trigger('arrowOpacity', [\r\n    state('desc-to-active, asc-to-active, active', style({opacity: 1})),\r\n    state('desc-to-hint, asc-to-hint, hint', style({opacity: .54})),\r\n    state('hint-to-desc, active-to-desc, desc, hint-to-asc, active-to-asc, asc',\r\n        style({opacity: 0})),\r\n    // Transition between all states except for immediate transitions\r\n    transition('* => asc, * => desc, * => active, * => hint', animate('0ms')),\r\n    transition('* <=> *', animate(SORT_ANIMATION_TRANSITION))\r\n  ]),\r\n\r\n  /**\r\n   * Animation for the translation of the arrow as a whole. States are separated into two\r\n   * groups: ones with animations and others that are immediate. Immediate states are asc, desc,\r\n   * peek, and active. The other states define a specific animation (source-to-destination)\r\n   * and are determined as a function of their prev user-perceived state and what the next state\r\n   * should be.\r\n   */\r\n  arrowPosition: trigger('arrowPosition', [\r\n    // Hidden Above => Hint Center\r\n    transition('* => desc-to-hint, * => desc-to-active',\r\n        animate(SORT_ANIMATION_TRANSITION, keyframes([\r\n          style({transform: 'translateY(-25%)'}),\r\n          style({transform: 'translateY(0)'})\r\n        ]))),\r\n    // Hint Center => Hidden Below\r\n    transition('* => hint-to-desc, * => active-to-desc',\r\n        animate(SORT_ANIMATION_TRANSITION, keyframes([\r\n          style({transform: 'translateY(0)'}),\r\n          style({transform: 'translateY(25%)'})\r\n        ]))),\r\n    // Hidden Below => Hint Center\r\n    transition('* => asc-to-hint, * => asc-to-active',\r\n        animate(SORT_ANIMATION_TRANSITION, keyframes([\r\n          style({transform: 'translateY(25%)'}),\r\n          style({transform: 'translateY(0)'})\r\n        ]))),\r\n    // Hint Center => Hidden Above\r\n    transition('* => hint-to-asc, * => active-to-asc',\r\n        animate(SORT_ANIMATION_TRANSITION, keyframes([\r\n          style({transform: 'translateY(0)'}),\r\n          style({transform: 'translateY(-25%)'})\r\n        ]))),\r\n    state('desc-to-hint, asc-to-hint, hint, desc-to-active, asc-to-active, active',\r\n        style({transform: 'translateY(0)'})),\r\n    state('hint-to-desc, active-to-desc, desc',\r\n        style({transform: 'translateY(-25%)'})),\r\n    state('hint-to-asc, active-to-asc, asc',\r\n        style({transform: 'translateY(25%)'})),\r\n  ]),\r\n\r\n  /** Necessary trigger that calls animate on children animations. */\r\n  allowChildren: trigger('allowChildren', [\r\n    transition('* <=> *', [\r\n      query('@*', animateChild(), {optional: true})\r\n    ])\r\n  ]),\r\n};\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {Injectable, SkipSelf, Optional} from '@angular/core';\r\nimport {Subject} from 'rxjs/Subject';\r\nimport {SortDirection} from './sort-direction';\r\n\r\n/**\r\n * To modify the labels and text displayed, create a new instance of MatSortHeaderIntl and\r\n * include it in a custom provider.\r\n */\r\n@Injectable()\r\nexport class MatSortHeaderIntl {\r\n  /**\r\n   * Stream that emits whenever the labels here are changed. Use this to notify\r\n   * components if the labels have changed after initialization.\r\n   */\r\n  readonly changes: Subject<void> = new Subject<void>();\r\n\r\n  /** ARIA label for the sorting button. */\r\n  sortButtonLabel = (id: string) => {\r\n    return `Change sorting for ${id}`;\r\n  }\r\n\r\n  /** A label to describe the current sort (visible only to screenreaders). */\r\n  sortDescriptionLabel = (id: string, direction: SortDirection) => {\r\n    return `Sorted by ${id} ${direction == 'asc' ? 'ascending' : 'descending'}`;\r\n  }\r\n}\r\n/** @docs-private */\r\nexport function MAT_SORT_HEADER_INTL_PROVIDER_FACTORY(parentIntl: MatSortHeaderIntl) {\r\n  return parentIntl || new MatSortHeaderIntl();\r\n}\r\n\r\n/** @docs-private */\r\nexport const MAT_SORT_HEADER_INTL_PROVIDER = {\r\n  // If there is already an MatSortHeaderIntl available, use that. Otherwise, provide a new one.\r\n  provide: MatSortHeaderIntl,\r\n  deps: [[new Optional(), new SkipSelf(), MatSortHeaderIntl]],\r\n  useFactory: MAT_SORT_HEADER_INTL_PROVIDER_FACTORY\r\n};\r\n\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {\r\n  Directive,\r\n  EventEmitter,\r\n  Input,\r\n  isDevMode,\r\n  Output,\r\n  OnChanges,\r\n  OnDestroy,\r\n} from '@angular/core';\r\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\r\nimport {CanDisable, mixinDisabled} from '@angular/material/core';\r\nimport {SortDirection} from './sort-direction';\r\nimport {\r\n  getSortInvalidDirectionError,\r\n  getSortDuplicateSortableIdError,\r\n  getSortHeaderMissingIdError\r\n} from './sort-errors';\r\nimport {Subject} from 'rxjs/Subject';\r\n\r\n/** Interface for a directive that holds sorting state consumed by `MatSortHeader`. */\r\nexport interface MatSortable {\r\n  /** The id of the column being sorted. */\r\n  id: string;\r\n\r\n  /** Starting sort direction. */\r\n  start: 'asc' | 'desc';\r\n\r\n  /** Whether to disable clearing the sorting state. */\r\n  disableClear: boolean;\r\n}\r\n\r\n/** The current sort state. */\r\nexport interface Sort {\r\n  /** The id of the column being sorted. */\r\n  active: string;\r\n\r\n  /** The sort direction. */\r\n  direction: SortDirection;\r\n}\r\n\r\n// Boilerplate for applying mixins to MatSort.\r\n/** @docs-private */\r\nexport class MatSortBase {}\r\nexport const _MatSortMixinBase = mixinDisabled(MatSortBase);\r\n\r\n/** Container for MatSortables to manage the sort state and provide default sort parameters. */\r\n@Directive({\r\n  selector: '[matSort]',\r\n  exportAs: 'matSort',\r\n  inputs: ['disabled: matSortDisabled']\r\n})\r\nexport class MatSort extends _MatSortMixinBase implements CanDisable, OnChanges, OnDestroy {\r\n  /** Collection of all registered sortables that this directive manages. */\r\n  sortables = new Map<string, MatSortable>();\r\n\r\n  /** Used to notify any child components listening to state changes. */\r\n  readonly _stateChanges = new Subject<void>();\r\n\r\n  /** The id of the most recently sorted MatSortable. */\r\n  @Input('matSortActive') active: string;\r\n\r\n  /**\r\n   * The direction to set when an MatSortable is initially sorted.\r\n   * May be overriden by the MatSortable's sort start.\r\n   */\r\n  @Input('matSortStart') start: 'asc' | 'desc' = 'asc';\r\n\r\n  /** The sort direction of the currently active MatSortable. */\r\n  @Input('matSortDirection')\r\n  get direction(): SortDirection { return this._direction; }\r\n  set direction(direction: SortDirection) {\r\n    if (isDevMode() && direction && direction !== 'asc' && direction !== 'desc') {\r\n      throw getSortInvalidDirectionError(direction);\r\n    }\r\n    this._direction = direction;\r\n  }\r\n  private _direction: SortDirection = '';\r\n\r\n  /**\r\n   * Whether to disable the user from clearing the sort by finishing the sort direction cycle.\r\n   * May be overriden by the MatSortable's disable clear input.\r\n   */\r\n  @Input('matSortDisableClear')\r\n  get disableClear(): boolean { return this._disableClear; }\r\n  set disableClear(v: boolean) { this._disableClear = coerceBooleanProperty(v); }\r\n  private _disableClear: boolean;\r\n\r\n  /** Event emitted when the user changes either the active sort or sort direction. */\r\n  @Output('matSortChange') readonly sortChange: EventEmitter<Sort> = new EventEmitter<Sort>();\r\n\r\n  /**\r\n   * Register function to be used by the contained MatSortables. Adds the MatSortable to the\r\n   * collection of MatSortables.\r\n   */\r\n  register(sortable: MatSortable): void {\r\n    if (!sortable.id) {\r\n      throw getSortHeaderMissingIdError();\r\n    }\r\n\r\n    if (this.sortables.has(sortable.id)) {\r\n      throw getSortDuplicateSortableIdError(sortable.id);\r\n    }\r\n    this.sortables.set(sortable.id, sortable);\r\n  }\r\n\r\n  /**\r\n   * Unregister function to be used by the contained MatSortables. Removes the MatSortable from the\r\n   * collection of contained MatSortables.\r\n   */\r\n  deregister(sortable: MatSortable): void {\r\n    this.sortables.delete(sortable.id);\r\n  }\r\n\r\n  /** Sets the active sort id and determines the new sort direction. */\r\n  sort(sortable: MatSortable): void {\r\n    if (this.active != sortable.id) {\r\n      this.active = sortable.id;\r\n      this.direction = sortable.start ? sortable.start : this.start;\r\n    } else {\r\n      this.direction = this.getNextSortDirection(sortable);\r\n    }\r\n\r\n    this.sortChange.emit({active: this.active, direction: this.direction});\r\n  }\r\n\r\n  /** Returns the next sort direction of the active sortable, checking for potential overrides. */\r\n  getNextSortDirection(sortable: MatSortable): SortDirection {\r\n    if (!sortable) { return ''; }\r\n\r\n    // Get the sort direction cycle with the potential sortable overrides.\r\n    const disableClear = sortable.disableClear != null ? sortable.disableClear : this.disableClear;\r\n    let sortDirectionCycle = getSortDirectionCycle(sortable.start || this.start, disableClear);\r\n\r\n    // Get and return the next direction in the cycle\r\n    let nextDirectionIndex = sortDirectionCycle.indexOf(this.direction) + 1;\r\n    if (nextDirectionIndex >= sortDirectionCycle.length) { nextDirectionIndex = 0; }\r\n    return sortDirectionCycle[nextDirectionIndex];\r\n  }\r\n\r\n  ngOnChanges() {\r\n    this._stateChanges.next();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this._stateChanges.complete();\r\n  }\r\n}\r\n\r\n/** Returns the sort direction cycle to use given the provided parameters of order and clear. */\r\nfunction getSortDirectionCycle(start: 'asc' | 'desc',\r\n                               disableClear: boolean): SortDirection[] {\r\n  let sortOrder: SortDirection[] = ['asc', 'desc'];\r\n  if (start == 'desc') { sortOrder.reverse(); }\r\n  if (!disableClear) { sortOrder.push(''); }\r\n\r\n  return sortOrder;\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\n/** @docs-private */\r\nexport function getSortDuplicateSortableIdError(id: string): Error {\r\n  return Error(`Cannot have two MatSortables with the same id (${id}).`);\r\n}\r\n\r\n/** @docs-private */\r\nexport function getSortHeaderNotContainedWithinSortError(): Error {\r\n  return Error(`MatSortHeader must be placed within a parent element with the MatSort directive.`);\r\n}\r\n\r\n/** @docs-private */\r\nexport function getSortHeaderMissingIdError(): Error {\r\n  return Error(`MatSortHeader must be provided with a unique id.`);\r\n}\r\n\r\n/** @docs-private */\r\nexport function getSortInvalidDirectionError(direction: string): Error {\r\n  return Error(`${direction} is not a valid sort direction ('asc' or 'desc').`);\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {OverlayModule} from '@angular/cdk/overlay';\r\nimport {PortalModule} from '@angular/cdk/portal';\r\nimport {LIVE_ANNOUNCER_PROVIDER} from '@angular/cdk/a11y';\r\nimport {LayoutModule} from '@angular/cdk/layout';\r\nimport {MatCommonModule} from '@angular/material/core';\r\nimport {MatSnackBar} from './snack-bar';\r\nimport {MatSnackBarContainer} from './snack-bar-container';\r\nimport {SimpleSnackBar} from './simple-snack-bar';\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    OverlayModule,\r\n    PortalModule,\r\n    CommonModule,\r\n    MatCommonModule,\r\n    LayoutModule,\r\n  ],\r\n  exports: [MatSnackBarContainer, MatCommonModule],\r\n  declarations: [MatSnackBarContainer, SimpleSnackBar],\r\n  entryComponents: [MatSnackBarContainer, SimpleSnackBar],\r\n  providers: [MatSnackBar, LIVE_ANNOUNCER_PROVIDER]\r\n})\r\nexport class MatSnackBarModule {}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {LiveAnnouncer} from '@angular/cdk/a11y';\r\nimport {BreakpointObserver, Breakpoints} from '@angular/cdk/layout';\r\nimport {Overlay, OverlayConfig, OverlayRef} from '@angular/cdk/overlay';\r\nimport {ComponentPortal, ComponentType, PortalInjector} from '@angular/cdk/portal';\r\nimport {ComponentRef, Injectable, Injector, Optional, SkipSelf} from '@angular/core';\r\nimport {take} from 'rxjs/operators/take';\r\nimport {takeUntil} from 'rxjs/operators/takeUntil';\r\nimport {SimpleSnackBar} from './simple-snack-bar';\r\nimport {MAT_SNACK_BAR_DATA, MatSnackBarConfig} from './snack-bar-config';\r\nimport {MatSnackBarContainer} from './snack-bar-container';\r\nimport {MatSnackBarRef} from './snack-bar-ref';\r\n\r\n\r\n/**\r\n * Service to dispatch Material Design snack bar messages.\r\n */\r\n@Injectable()\r\nexport class MatSnackBar {\r\n  /**\r\n   * Reference to the current snack bar in the view *at this level* (in the Angular injector tree).\r\n   * If there is a parent snack-bar service, all operations should delegate to that parent\r\n   * via `_openedSnackBarRef`.\r\n   */\r\n  private _snackBarRefAtThisLevel: MatSnackBarRef<any> | null = null;\r\n\r\n  /** Reference to the currently opened snackbar at *any* level. */\r\n  get _openedSnackBarRef(): MatSnackBarRef<any> | null {\r\n    const parent = this._parentSnackBar;\r\n    return parent ? parent._openedSnackBarRef : this._snackBarRefAtThisLevel;\r\n  }\r\n\r\n  set _openedSnackBarRef(value: MatSnackBarRef<any> | null) {\r\n    if (this._parentSnackBar) {\r\n      this._parentSnackBar._openedSnackBarRef = value;\r\n    } else {\r\n      this._snackBarRefAtThisLevel = value;\r\n    }\r\n  }\r\n\r\n  constructor(\r\n      private _overlay: Overlay,\r\n      private _live: LiveAnnouncer,\r\n      private _injector: Injector,\r\n      private _breakpointObserver: BreakpointObserver,\r\n      @Optional() @SkipSelf() private _parentSnackBar: MatSnackBar) {}\r\n\r\n  /**\r\n   * Creates and dispatches a snack bar with a custom component for the content, removing any\r\n   * currently opened snack bars.\r\n   *\r\n   * @param component Component to be instantiated.\r\n   * @param config Extra configuration for the snack bar.\r\n   */\r\n  openFromComponent<T>(component: ComponentType<T>, config?: MatSnackBarConfig): MatSnackBarRef<T> {\r\n    const _config = _applyConfigDefaults(config);\r\n    const snackBarRef = this._attach(component, _config);\r\n\r\n    // When the snackbar is dismissed, clear the reference to it.\r\n    snackBarRef.afterDismissed().subscribe(() => {\r\n      // Clear the snackbar ref if it hasn't already been replaced by a newer snackbar.\r\n      if (this._openedSnackBarRef == snackBarRef) {\r\n        this._openedSnackBarRef = null;\r\n      }\r\n    });\r\n\r\n    if (this._openedSnackBarRef) {\r\n      // If a snack bar is already in view, dismiss it and enter the\r\n      // new snack bar after exit animation is complete.\r\n      this._openedSnackBarRef.afterDismissed().subscribe(() => {\r\n        snackBarRef.containerInstance.enter();\r\n      });\r\n      this._openedSnackBarRef.dismiss();\r\n    } else {\r\n      // If no snack bar is in view, enter the new snack bar.\r\n      snackBarRef.containerInstance.enter();\r\n    }\r\n\r\n    // If a dismiss timeout is provided, set up dismiss based on after the snackbar is opened.\r\n    if (_config.duration && _config.duration > 0) {\r\n      snackBarRef.afterOpened().subscribe(() => snackBarRef._dismissAfter(_config!.duration!));\r\n    }\r\n\r\n    if (_config.announcementMessage) {\r\n      this._live.announce(_config.announcementMessage, _config.politeness);\r\n    }\r\n\r\n    this._openedSnackBarRef = snackBarRef;\r\n    return this._openedSnackBarRef;\r\n  }\r\n\r\n  /**\r\n   * Opens a snackbar with a message and an optional action.\r\n   * @param message The message to show in the snackbar.\r\n   * @param action The label for the snackbar action.\r\n   * @param config Additional configuration options for the snackbar.\r\n   */\r\n  open(message: string, action: string = '', config?: MatSnackBarConfig):\r\n      MatSnackBarRef<SimpleSnackBar> {\r\n    const _config = _applyConfigDefaults(config);\r\n\r\n    // Since the user doesn't have access to the component, we can\r\n    // override the data to pass in our own message and action.\r\n    _config.data = {message, action};\r\n    _config.announcementMessage = message;\r\n\r\n    return this.openFromComponent(SimpleSnackBar, _config);\r\n  }\r\n\r\n  /**\r\n   * Dismisses the currently-visible snack bar.\r\n   */\r\n  dismiss(): void {\r\n    if (this._openedSnackBarRef) {\r\n      this._openedSnackBarRef.dismiss();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Attaches the snack bar container component to the overlay.\r\n   */\r\n  private _attachSnackBarContainer(overlayRef: OverlayRef,\r\n                                   config: MatSnackBarConfig): MatSnackBarContainer {\r\n    const containerPortal = new ComponentPortal(MatSnackBarContainer, config.viewContainerRef);\r\n    const containerRef: ComponentRef<MatSnackBarContainer> = overlayRef.attach(containerPortal);\r\n    containerRef.instance.snackBarConfig = config;\r\n    return containerRef.instance;\r\n  }\r\n\r\n  /**\r\n   * Places a new component as the content of the snack bar container.\r\n   */\r\n  private _attach<T>(component: ComponentType<T>, config: MatSnackBarConfig): MatSnackBarRef<T> {\r\n    const overlayRef = this._createOverlay(config);\r\n    const container = this._attachSnackBarContainer(overlayRef, config);\r\n    const snackBarRef = new MatSnackBarRef<T>(container, overlayRef);\r\n    const injector = this._createInjector(config, snackBarRef);\r\n    const portal = new ComponentPortal(component, undefined, injector);\r\n    const contentRef = container.attachComponentPortal(portal);\r\n\r\n    // We can't pass this via the injector, because the injector is created earlier.\r\n    snackBarRef.instance = contentRef.instance;\r\n\r\n    // Subscribe to the breakpoint observer and attach the mat-snack-bar-handset class as\r\n    // appropriate. This class is applied to the overlay element because the overlay must expand to\r\n    // fill the width of the screen for full width snackbars.\r\n    this._breakpointObserver.observe(Breakpoints.Handset).pipe(\r\n      takeUntil(overlayRef.detachments().pipe(take(1)))\r\n    ).subscribe(state => {\r\n      if (state.matches) {\r\n        overlayRef.overlayElement.classList.add('mat-snack-bar-handset');\r\n      } else {\r\n        overlayRef.overlayElement.classList.remove('mat-snack-bar-handset');\r\n      }\r\n    });\r\n\r\n    return snackBarRef;\r\n  }\r\n\r\n  /**\r\n   * Creates a new overlay and places it in the correct location.\r\n   * @param config The user-specified snack bar config.\r\n   */\r\n  private _createOverlay(config: MatSnackBarConfig): OverlayRef {\r\n    const overlayConfig = new OverlayConfig();\r\n    overlayConfig.direction = config.direction;\r\n\r\n    let positionStrategy = this._overlay.position().global();\r\n    // Set horizontal position.\r\n    const isRtl = config.direction === 'rtl';\r\n    const isLeft = (\r\n      config.horizontalPosition === 'left' ||\r\n      (config.horizontalPosition === 'start' && !isRtl) ||\r\n      (config.horizontalPosition === 'end' && isRtl));\r\n    const isRight = !isLeft && config.horizontalPosition !== 'center';\r\n    if (isLeft) {\r\n      positionStrategy.left('0');\r\n    } else if (isRight) {\r\n      positionStrategy.right('0');\r\n    } else {\r\n      positionStrategy.centerHorizontally();\r\n    }\r\n    // Set horizontal position.\r\n    if (config.verticalPosition === 'top') {\r\n      positionStrategy.top('0');\r\n    } else {\r\n      positionStrategy.bottom('0');\r\n    }\r\n\r\n    overlayConfig.positionStrategy = positionStrategy;\r\n    return this._overlay.create(overlayConfig);\r\n  }\r\n\r\n  /**\r\n   * Creates an injector to be used inside of a snack bar component.\r\n   * @param config Config that was used to create the snack bar.\r\n   * @param snackBarRef Reference to the snack bar.\r\n   */\r\n  private _createInjector<T>(\r\n      config: MatSnackBarConfig,\r\n      snackBarRef: MatSnackBarRef<T>): PortalInjector {\r\n\r\n    const userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\r\n    const injectionTokens = new WeakMap();\r\n\r\n    injectionTokens.set(MatSnackBarRef, snackBarRef);\r\n    injectionTokens.set(MAT_SNACK_BAR_DATA, config.data);\r\n\r\n    return new PortalInjector(userInjector || this._injector, injectionTokens);\r\n  }\r\n}\r\n\r\n/**\r\n * Applies default options to the snackbar config.\r\n * @param config The configuration to which the defaults will be applied.\r\n * @returns The new configuration object with defaults applied.\r\n */\r\nfunction _applyConfigDefaults(config?: MatSnackBarConfig): MatSnackBarConfig {\r\n  return {...new MatSnackBarConfig(), ...config};\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {\r\n  Component,\r\n  ComponentRef,\r\n  EmbeddedViewRef,\r\n  ViewChild,\r\n  NgZone,\r\n  OnDestroy,\r\n  ElementRef,\r\n  ChangeDetectionStrategy,\r\n  ViewEncapsulation,\r\n  ChangeDetectorRef,\r\n} from '@angular/core';\r\nimport {AnimationEvent} from '@angular/animations';\r\nimport {\r\n  BasePortalOutlet,\r\n  ComponentPortal,\r\n  CdkPortalOutlet,\r\n} from '@angular/cdk/portal';\r\nimport {take} from 'rxjs/operators/take';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport {Subject} from 'rxjs/Subject';\r\nimport {MatSnackBarConfig} from './snack-bar-config';\r\nimport {matSnackBarAnimations} from './snack-bar-animations';\r\n\r\n/**\r\n * Internal component that wraps user-provided snack bar content.\r\n * @docs-private\r\n */\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'snack-bar-container',\r\n  templateUrl: 'snack-bar-container.html',\r\n  styleUrls: ['snack-bar-container.css'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  encapsulation: ViewEncapsulation.None,\r\n  preserveWhitespaces: false,\r\n  animations: [matSnackBarAnimations.snackBarState],\r\n  host: {\r\n    'role': 'alert',\r\n    'class': 'mat-snack-bar-container',\r\n    '[@state]': '_animationState',\r\n    '(@state.done)': 'onAnimationEnd($event)'\r\n  },\r\n})\r\nexport class MatSnackBarContainer extends BasePortalOutlet implements OnDestroy {\r\n  /** Whether the component has been destroyed. */\r\n  private _destroyed = false;\r\n\r\n  /** The portal outlet inside of this container into which the snack bar content will be loaded. */\r\n  @ViewChild(CdkPortalOutlet) _portalOutlet: CdkPortalOutlet;\r\n\r\n  /** Subject for notifying that the snack bar has exited from view. */\r\n  readonly _onExit: Subject<any> = new Subject();\r\n\r\n  /** Subject for notifying that the snack bar has finished entering the view. */\r\n  readonly _onEnter: Subject<any> = new Subject();\r\n\r\n  /** The state of the snack bar animations. */\r\n  _animationState = 'void';\r\n\r\n  /** The snack bar configuration. */\r\n  snackBarConfig: MatSnackBarConfig;\r\n\r\n  constructor(\r\n    private _ngZone: NgZone,\r\n    private _elementRef: ElementRef,\r\n    private _changeDetectorRef: ChangeDetectorRef) {\r\n    super();\r\n  }\r\n\r\n  /** Attach a component portal as content to this snack bar container. */\r\n  attachComponentPortal<T>(portal: ComponentPortal<T>): ComponentRef<T> {\r\n    if (this._portalOutlet.hasAttached()) {\r\n      throw Error('Attempting to attach snack bar content after content is already attached');\r\n    }\r\n\r\n    const element: HTMLElement = this._elementRef.nativeElement;\r\n\r\n    if (this.snackBarConfig.panelClass || this.snackBarConfig.extraClasses) {\r\n      this._setCssClasses(this.snackBarConfig.panelClass);\r\n      this._setCssClasses(this.snackBarConfig.extraClasses);\r\n    }\r\n\r\n    if (this.snackBarConfig.horizontalPosition === 'center') {\r\n      element.classList.add('mat-snack-bar-center');\r\n    }\r\n\r\n    if (this.snackBarConfig.verticalPosition === 'top') {\r\n      element.classList.add('mat-snack-bar-top');\r\n    }\r\n\r\n    return this._portalOutlet.attachComponentPortal(portal);\r\n  }\r\n\r\n  /** Attach a template portal as content to this snack bar container. */\r\n  attachTemplatePortal(): EmbeddedViewRef<any> {\r\n    throw Error('Not yet implemented');\r\n  }\r\n\r\n  /** Handle end of animations, updating the state of the snackbar. */\r\n  onAnimationEnd(event: AnimationEvent) {\r\n    const {fromState, toState} = event;\r\n\r\n    if ((toState === 'void' && fromState !== 'void') || toState.startsWith('hidden')) {\r\n      this._completeExit();\r\n    }\r\n\r\n    if (toState.startsWith('visible')) {\r\n      // Note: we shouldn't use `this` inside the zone callback,\r\n      // because it can cause a memory leak.\r\n      const onEnter = this._onEnter;\r\n\r\n      this._ngZone.run(() => {\r\n        onEnter.next();\r\n        onEnter.complete();\r\n      });\r\n    }\r\n  }\r\n\r\n  /** Begin animation of snack bar entrance into view. */\r\n  enter(): void {\r\n    if (!this._destroyed) {\r\n      this._animationState = `visible-${this.snackBarConfig.verticalPosition}`;\r\n      this._changeDetectorRef.detectChanges();\r\n    }\r\n  }\r\n\r\n  /** Begin animation of the snack bar exiting from view. */\r\n  exit(): Observable<void> {\r\n    this._animationState = `hidden-${this.snackBarConfig.verticalPosition}`;\r\n    return this._onExit;\r\n  }\r\n\r\n  /** Makes sure the exit callbacks have been invoked when the element is destroyed. */\r\n  ngOnDestroy() {\r\n    this._destroyed = true;\r\n    this._completeExit();\r\n  }\r\n\r\n  /**\r\n   * Waits for the zone to settle before removing the element. Helps prevent\r\n   * errors where we end up removing an element which is in the middle of an animation.\r\n   */\r\n  private _completeExit() {\r\n    this._ngZone.onMicrotaskEmpty.asObservable().pipe(take(1)).subscribe(() => {\r\n      this._onExit.next();\r\n      this._onExit.complete();\r\n    });\r\n  }\r\n\r\n  /** Applies the user-specified list of CSS classes to the element. */\r\n  private _setCssClasses(classList: undefined|string|string[]) {\r\n    if (!classList) {\r\n      return;\r\n    }\r\n\r\n    const element = this._elementRef.nativeElement;\r\n\r\n    if (Array.isArray(classList)) {\r\n      // Note that we can't use a spread here, because IE doesn't support multiple arguments.\r\n      classList.forEach(cssClass => element.classList.add(cssClass));\r\n    } else {\r\n      element.classList.add(classList);\r\n    }\r\n  }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {Component, ViewEncapsulation, Inject, ChangeDetectionStrategy} from '@angular/core';\r\nimport {MatSnackBarRef} from './snack-bar-ref';\r\nimport {MAT_SNACK_BAR_DATA} from './snack-bar-config';\r\nimport {matSnackBarAnimations} from './snack-bar-animations';\r\n\r\n\r\n/**\r\n * A component used to open as the default snack bar, matching material spec.\r\n * This should only be used internally by the snack bar service.\r\n */\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'simple-snack-bar',\r\n  templateUrl: 'simple-snack-bar.html',\r\n  styleUrls: ['simple-snack-bar.css'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  preserveWhitespaces: false,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  animations: [matSnackBarAnimations.contentFade],\r\n  host: {\r\n    '[@contentFade]': '',\r\n    'class': 'mat-simple-snackbar',\r\n  }\r\n})\r\nexport class SimpleSnackBar {\r\n  /** Data that was injected into the snack bar. */\r\n  data: { message: string, action: string };\r\n\r\n  constructor(\r\n    public snackBarRef: MatSnackBarRef<SimpleSnackBar>,\r\n    @Inject(MAT_SNACK_BAR_DATA) data: any) {\r\n    this.data = data;\r\n  }\r\n\r\n  /** Performs the action on the snack bar. */\r\n  action(): void {\r\n    this.snackBarRef.dismissWithAction();\r\n  }\r\n\r\n  /** If the action button should be shown. */\r\n  get hasAction(): boolean {\r\n    return !!this.data.action;\r\n  }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\nimport {\r\n  animate,\r\n  state,\r\n  style,\r\n  transition,\r\n  trigger,\r\n  AnimationTriggerMetadata,\r\n} from '@angular/animations';\r\nimport {AnimationCurves, AnimationDurations} from '@angular/material/core';\r\n\r\n/** @docs-private */\r\nexport const SHOW_ANIMATION =\r\n  `${AnimationDurations.ENTERING} ${AnimationCurves.DECELERATION_CURVE}`;\r\n\r\n/** @docs-private */\r\nexport const HIDE_ANIMATION =\r\n  `${AnimationDurations.EXITING} ${AnimationCurves.ACCELERATION_CURVE}`;\r\n\r\n/** Animations used by the Material snack bar. */\r\nexport const matSnackBarAnimations: {\r\n  readonly contentFade: AnimationTriggerMetadata;\r\n  readonly snackBarState: AnimationTriggerMetadata;\r\n} = {\r\n  /** Animation that slides the dialog in and out of view and fades the opacity. */\r\n  contentFade: trigger('contentFade', [\r\n    transition(':enter', [\r\n      style({opacity: '0'}),\r\n      animate(`${AnimationDurations.COMPLEX} ${AnimationCurves.STANDARD_CURVE}`)\r\n    ])\r\n  ]),\r\n\r\n  /** Animation that shows and hides a snack bar. */\r\n  snackBarState: trigger('state', [\r\n    state('visible-top, visible-bottom', style({transform: 'translateY(0%)'})),\r\n    transition('visible-top => hidden-top, visible-bottom => hidden-bottom',\r\n      animate(HIDE_ANIMATION)),\r\n    transition('void => visible-top, void => visible-bottom', animate(SHOW_ANIMATION)),\r\n  ])\r\n};\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {ViewContainerRef, InjectionToken} from '@angular/core';\r\nimport {AriaLivePoliteness} from '@angular/cdk/a11y';\r\nimport {Direction} from '@angular/cdk/bidi';\r\n\r\n/** Injection token that can be used to access the data that was passed in to a snack bar. */\r\nexport const MAT_SNACK_BAR_DATA = new InjectionToken<any>('MatSnackBarData');\r\n\r\n/** Possible values for horizontalPosition on MatSnackBarConfig. */\r\nexport type MatSnackBarHorizontalPosition = 'start' | 'center' | 'end' | 'left' | 'right';\r\n\r\n/** Possible values for verticalPosition on MatSnackBarConfig. */\r\nexport type MatSnackBarVerticalPosition = 'top' | 'bottom';\r\n\r\n/**\r\n * Configuration used when opening a snack-bar.\r\n */\r\nexport class MatSnackBarConfig<D = any> {\r\n  /** The politeness level for the MatAriaLiveAnnouncer announcement. */\r\n  politeness?: AriaLivePoliteness = 'assertive';\r\n\r\n  /** Message to be announced by the MatAriaLiveAnnouncer */\r\n  announcementMessage?: string = '';\r\n\r\n  /** The view container to place the overlay for the snack bar into. */\r\n  viewContainerRef?: ViewContainerRef;\r\n\r\n  /** The length of time in milliseconds to wait before automatically dismissing the snack bar. */\r\n  duration?: number = 0;\r\n\r\n  /** Extra CSS classes to be added to the snack bar container. */\r\n  panelClass?: string | string[];\r\n\r\n  /**\r\n   * Extra CSS classes to be added to the snack bar container.\r\n   * @deprecated Use `panelClass` instead.\r\n   * @deletion-target 6.0.0\r\n   */\r\n  extraClasses?: string | string[];\r\n\r\n  /** Text layout direction for the snack bar. */\r\n  direction?: Direction = 'ltr';\r\n\r\n  /** Data being injected into the child component. */\r\n  data?: D | null = null;\r\n\r\n  /** The horizontal position to place the snack bar. */\r\n  horizontalPosition?: MatSnackBarHorizontalPosition = 'center';\r\n\r\n  /** The vertical position to place the snack bar. */\r\n  verticalPosition?: MatSnackBarVerticalPosition = 'bottom';\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {OverlayRef} from '@angular/cdk/overlay';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport {Subject} from 'rxjs/Subject';\r\nimport {MatSnackBarContainer} from './snack-bar-container';\r\n\r\n/** Event that is emitted when a snack bar is dismissed. */\r\nexport interface MatSnackBarDismiss {\r\n  /** Whether the snack bar was dismissed using the action button. */\r\n  dismissedByAction: boolean;\r\n}\r\n\r\n/**\r\n * Reference to a snack bar dispatched from the snack bar service.\r\n */\r\nexport class MatSnackBarRef<T> {\r\n  /** The instance of the component making up the content of the snack bar. */\r\n  instance: T;\r\n\r\n  /**\r\n   * The instance of the component making up the content of the snack bar.\r\n   * @docs-private\r\n   */\r\n  containerInstance: MatSnackBarContainer;\r\n\r\n  /** Subject for notifying the user that the snack bar has been dismissed. */\r\n  private readonly _afterDismissed = new Subject<MatSnackBarDismiss>();\r\n\r\n  /** Subject for notifying the user that the snack bar has opened and appeared. */\r\n  private readonly _afterOpened = new Subject<void>();\r\n\r\n  /** Subject for notifying the user that the snack bar action was called. */\r\n  private readonly _onAction = new Subject<void>();\r\n\r\n  /**\r\n   * Timeout ID for the duration setTimeout call. Used to clear the timeout if the snackbar is\r\n   * dismissed before the duration passes.\r\n   */\r\n  private _durationTimeoutId: number;\r\n\r\n  /** Whether the snack bar was dismissed using the action button. */\r\n  private _dismissedByAction = false;\r\n\r\n  constructor(containerInstance: MatSnackBarContainer,\r\n              private _overlayRef: OverlayRef) {\r\n    this.containerInstance = containerInstance;\r\n    // Dismiss snackbar on action.\r\n    this.onAction().subscribe(() => this.dismiss());\r\n    containerInstance._onExit.subscribe(() => this._finishDismiss());\r\n  }\r\n\r\n  /** Dismisses the snack bar. */\r\n  dismiss(): void {\r\n    if (!this._afterDismissed.closed) {\r\n      this.containerInstance.exit();\r\n    }\r\n    clearTimeout(this._durationTimeoutId);\r\n  }\r\n\r\n  /** Marks the snackbar action clicked. */\r\n  dismissWithAction(): void {\r\n    if (!this._onAction.closed) {\r\n      this._dismissedByAction = true;\r\n      this._onAction.next();\r\n      this._onAction.complete();\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * Marks the snackbar action clicked.\r\n   * @deprecated Use `dismissWithAction` instead.\r\n   * @deletion-target 7.0.0\r\n   */\r\n  closeWithAction(): void {\r\n    this.dismissWithAction();\r\n  }\r\n\r\n  /** Dismisses the snack bar after some duration */\r\n  _dismissAfter(duration: number): void {\r\n    this._durationTimeoutId = setTimeout(() => this.dismiss(), duration);\r\n  }\r\n\r\n  /** Marks the snackbar as opened */\r\n  _open(): void {\r\n    if (!this._afterOpened.closed) {\r\n      this._afterOpened.next();\r\n      this._afterOpened.complete();\r\n    }\r\n  }\r\n\r\n  /** Cleans up the DOM after closing. */\r\n  private _finishDismiss(): void {\r\n    this._overlayRef.dispose();\r\n\r\n    if (!this._onAction.closed) {\r\n      this._onAction.complete();\r\n    }\r\n\r\n    this._afterDismissed.next({dismissedByAction: this._dismissedByAction});\r\n    this._afterDismissed.complete();\r\n    this._dismissedByAction = false;\r\n  }\r\n\r\n  /** Gets an observable that is notified when the snack bar is finished closing. */\r\n  afterDismissed(): Observable<MatSnackBarDismiss> {\r\n    return this._afterDismissed.asObservable();\r\n  }\r\n\r\n  /** Gets an observable that is notified when the snack bar has opened and appeared. */\r\n  afterOpened(): Observable<void> {\r\n    return this.containerInstance._onEnter;\r\n  }\r\n\r\n  /** Gets an observable that is notified when the snack bar action is called. */\r\n  onAction(): Observable<void> {\r\n    return this._onAction.asObservable();\r\n  }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {A11yModule} from '@angular/cdk/a11y';\r\nimport {BidiModule} from '@angular/cdk/bidi';\r\nimport {CommonModule} from '@angular/common';\r\nimport {NgModule} from '@angular/core';\r\nimport {GestureConfig, MatCommonModule} from '@angular/material/core';\r\nimport {HAMMER_GESTURE_CONFIG} from '@angular/platform-browser';\r\nimport {MatSlider} from './slider';\r\n\r\n\r\n@NgModule({\r\n  imports: [CommonModule, MatCommonModule, BidiModule, A11yModule],\r\n  exports: [MatSlider, MatCommonModule],\r\n  declarations: [MatSlider],\r\n  providers: [{provide: HAMMER_GESTURE_CONFIG, useClass: GestureConfig}]\r\n})\r\nexport class MatSliderModule {}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {FocusMonitor, FocusOrigin} from '@angular/cdk/a11y';\r\nimport {Directionality} from '@angular/cdk/bidi';\r\nimport {coerceBooleanProperty, coerceNumberProperty} from '@angular/cdk/coercion';\r\nimport {\r\n  DOWN_ARROW,\r\n  END,\r\n  HOME,\r\n  LEFT_ARROW,\r\n  PAGE_DOWN,\r\n  PAGE_UP,\r\n  RIGHT_ARROW,\r\n  UP_ARROW,\r\n} from '@angular/cdk/keycodes';\r\nimport {\r\n  Attribute,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ElementRef,\r\n  EventEmitter,\r\n  forwardRef,\r\n  Input,\r\n  OnDestroy,\r\n  OnInit,\r\n  Optional,\r\n  Output,\r\n  ViewChild,\r\n  ViewEncapsulation,\r\n} from '@angular/core';\r\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\r\nimport {\r\n  CanColor,\r\n  CanDisable,\r\n  HammerInput,\r\n  HasTabIndex,\r\n  mixinColor,\r\n  mixinDisabled,\r\n  mixinTabIndex,\r\n} from '@angular/material/core';\r\nimport {Subscription} from 'rxjs/Subscription';\r\n\r\n/**\r\n * Visually, a 30px separation between tick marks looks best. This is very subjective but it is\r\n * the default separation we chose.\r\n */\r\nconst MIN_AUTO_TICK_SEPARATION = 30;\r\n\r\n/** The thumb gap size for a disabled slider. */\r\nconst DISABLED_THUMB_GAP = 7;\r\n\r\n/** The thumb gap size for a non-active slider at its minimum value. */\r\nconst MIN_VALUE_NONACTIVE_THUMB_GAP = 7;\r\n\r\n/** The thumb gap size for an active slider at its minimum value. */\r\nconst MIN_VALUE_ACTIVE_THUMB_GAP = 10;\r\n\r\n/**\r\n * Provider Expression that allows mat-slider to register as a ControlValueAccessor.\r\n * This allows it to support [(ngModel)] and [formControl].\r\n */\r\nexport const MAT_SLIDER_VALUE_ACCESSOR: any = {\r\n  provide: NG_VALUE_ACCESSOR,\r\n  useExisting: forwardRef(() => MatSlider),\r\n  multi: true\r\n};\r\n\r\n/** A simple change event emitted by the MatSlider component. */\r\nexport class MatSliderChange {\r\n  /** The MatSlider that changed. */\r\n  source: MatSlider;\r\n\r\n  /** The new value of the source slider. */\r\n  value: number | null;\r\n}\r\n\r\n\r\n// Boilerplate for applying mixins to MatSlider.\r\n/** @docs-private */\r\nexport class MatSliderBase {\r\n  constructor(public _elementRef: ElementRef) {}\r\n}\r\nexport const _MatSliderMixinBase =\r\n  mixinTabIndex(mixinColor(mixinDisabled(MatSliderBase), 'accent'));\r\n\r\n/**\r\n * Allows users to select from a range of values by moving the slider thumb. It is similar in\r\n * behavior to the native `<input type=\"range\">` element.\r\n */\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'mat-slider',\r\n  exportAs: 'matSlider',\r\n  providers: [MAT_SLIDER_VALUE_ACCESSOR],\r\n  host: {\r\n    '(focus)': '_onFocus()',\r\n    '(blur)': '_onBlur()',\r\n    '(click)': '_onClick($event)',\r\n    '(keydown)': '_onKeydown($event)',\r\n    '(keyup)': '_onKeyup()',\r\n    '(mouseenter)': '_onMouseenter()',\r\n    '(slide)': '_onSlide($event)',\r\n    '(slideend)': '_onSlideEnd()',\r\n    '(slidestart)': '_onSlideStart($event)',\r\n    'class': 'mat-slider',\r\n    'role': 'slider',\r\n    '[tabIndex]': 'tabIndex',\r\n    '[attr.aria-disabled]': 'disabled',\r\n    '[attr.aria-valuemax]': 'max',\r\n    '[attr.aria-valuemin]': 'min',\r\n    '[attr.aria-valuenow]': 'value',\r\n    '[attr.aria-orientation]': 'vertical ? \"vertical\" : \"horizontal\"',\r\n    '[class.mat-slider-disabled]': 'disabled',\r\n    '[class.mat-slider-has-ticks]': 'tickInterval',\r\n    '[class.mat-slider-horizontal]': '!vertical',\r\n    '[class.mat-slider-axis-inverted]': '_invertAxis',\r\n    '[class.mat-slider-sliding]': '_isSliding',\r\n    '[class.mat-slider-thumb-label-showing]': 'thumbLabel',\r\n    '[class.mat-slider-vertical]': 'vertical',\r\n    '[class.mat-slider-min-value]': '_isMinValue',\r\n    '[class.mat-slider-hide-last-tick]': 'disabled || _isMinValue && _thumbGap && _invertAxis',\r\n  },\r\n  templateUrl: 'slider.html',\r\n  styleUrls: ['slider.css'],\r\n  inputs: ['disabled', 'color', 'tabIndex'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  preserveWhitespaces: false,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class MatSlider extends _MatSliderMixinBase\r\n    implements ControlValueAccessor, OnDestroy, CanDisable, CanColor, OnInit, HasTabIndex {\r\n  /** Whether the slider is inverted. */\r\n  @Input()\r\n  get invert(): boolean { return this._invert; }\r\n  set invert(value: boolean) {\r\n    this._invert = coerceBooleanProperty(value);\r\n  }\r\n  private _invert = false;\r\n\r\n  /** The maximum value that the slider can have. */\r\n  @Input()\r\n  get max(): number { return this._max; }\r\n  set max(v: number) {\r\n    this._max = coerceNumberProperty(v, this._max);\r\n    this._percent = this._calculatePercentage(this._value);\r\n\r\n    // Since this also modifies the percentage, we need to let the change detection know.\r\n    this._changeDetectorRef.markForCheck();\r\n  }\r\n  private _max: number = 100;\r\n\r\n  /** The minimum value that the slider can have. */\r\n  @Input()\r\n  get min(): number { return this._min; }\r\n  set min(v: number) {\r\n    this._min = coerceNumberProperty(v, this._min);\r\n\r\n    // If the value wasn't explicitly set by the user, set it to the min.\r\n    if (this._value === null) {\r\n      this.value = this._min;\r\n    }\r\n    this._percent = this._calculatePercentage(this._value);\r\n\r\n    // Since this also modifies the percentage, we need to let the change detection know.\r\n    this._changeDetectorRef.markForCheck();\r\n  }\r\n  private _min: number = 0;\r\n\r\n  /** The values at which the thumb will snap. */\r\n  @Input()\r\n  get step(): number { return this._step; }\r\n  set step(v: number) {\r\n    this._step = coerceNumberProperty(v, this._step);\r\n\r\n    if (this._step % 1 !== 0) {\r\n      this._roundLabelTo = this._step.toString().split('.').pop()!.length;\r\n    }\r\n\r\n    // Since this could modify the label, we need to notify the change detection.\r\n    this._changeDetectorRef.markForCheck();\r\n  }\r\n  private _step: number = 1;\r\n\r\n  /** Whether or not to show the thumb label. */\r\n  @Input()\r\n  get thumbLabel(): boolean { return this._thumbLabel; }\r\n  set thumbLabel(value: boolean) { this._thumbLabel = coerceBooleanProperty(value); }\r\n  private _thumbLabel: boolean = false;\r\n\r\n  /**\r\n   * @deprecated\r\n   * @deletion-target 6.0.0\r\n   */\r\n  @Input('thumb-label')\r\n  get _thumbLabelDeprecated(): boolean { return this._thumbLabel; }\r\n  set _thumbLabelDeprecated(value) { this._thumbLabel = value; }\r\n\r\n  /**\r\n   * How often to show ticks. Relative to the step so that a tick always appears on a step.\r\n   * Ex: Tick interval of 4 with a step of 3 will draw a tick every 4 steps (every 12 values).\r\n   */\r\n  @Input()\r\n  get tickInterval() { return this._tickInterval; }\r\n  set tickInterval(value: 'auto' | number) {\r\n    if (value === 'auto') {\r\n      this._tickInterval = 'auto';\r\n    } else if (typeof value === 'number' || typeof value === 'string') {\r\n      this._tickInterval = coerceNumberProperty(value, this._tickInterval as number);\r\n    } else {\r\n      this._tickInterval = 0;\r\n    }\r\n  }\r\n  private _tickInterval: 'auto' | number = 0;\r\n\r\n  /**\r\n   * @deprecated\r\n   * @deletion-target 6.0.0\r\n   */\r\n  @Input('tick-interval')\r\n  get _tickIntervalDeprecated() { return this.tickInterval; }\r\n  set _tickIntervalDeprecated(v) { this.tickInterval = v; }\r\n\r\n  /** Value of the slider. */\r\n  @Input()\r\n  get value(): number | null {\r\n    // If the value needs to be read and it is still uninitialized, initialize it to the min.\r\n    if (this._value === null) {\r\n      this.value = this._min;\r\n    }\r\n    return this._value;\r\n  }\r\n  set value(v: number | null) {\r\n    if (v !== this._value) {\r\n      this._value = coerceNumberProperty(v);\r\n      this._percent = this._calculatePercentage(this._value);\r\n\r\n      // Since this also modifies the percentage, we need to let the change detection know.\r\n      this._changeDetectorRef.markForCheck();\r\n    }\r\n  }\r\n  private _value: number | null = null;\r\n\r\n  /** Whether the slider is vertical. */\r\n  @Input()\r\n  get vertical(): boolean { return this._vertical; }\r\n  set vertical(value: boolean) {\r\n    this._vertical = coerceBooleanProperty(value);\r\n  }\r\n  private _vertical = false;\r\n\r\n  /** Event emitted when the slider value has changed. */\r\n  @Output() readonly change: EventEmitter<MatSliderChange> = new EventEmitter<MatSliderChange>();\r\n\r\n  /** Event emitted when the slider thumb moves. */\r\n  @Output() readonly input: EventEmitter<MatSliderChange> = new EventEmitter<MatSliderChange>();\r\n\r\n  /** The value to be used for display purposes. */\r\n  get displayValue(): string | number {\r\n    // Note that this could be improved further by rounding something like 0.999 to 1 or\r\n    // 0.899 to 0.9, however it is very performance sensitive, because it gets called on\r\n    // every change detection cycle.\r\n    if (this._roundLabelTo && this.value && this.value % 1 !== 0) {\r\n      return this.value.toFixed(this._roundLabelTo);\r\n    }\r\n\r\n    return this.value || 0;\r\n  }\r\n\r\n  /** set focus to the host element */\r\n  focus() {\r\n    this._focusHostElement();\r\n  }\r\n\r\n  /** blur the host element */\r\n  blur() {\r\n    this._blurHostElement();\r\n  }\r\n\r\n  /** onTouch function registered via registerOnTouch (ControlValueAccessor). */\r\n  onTouched: () => any = () => {};\r\n\r\n  /** The percentage of the slider that coincides with the value. */\r\n  get percent(): number { return this._clamp(this._percent); }\r\n  private _percent: number = 0;\r\n\r\n  /**\r\n   * Whether or not the thumb is sliding.\r\n   * Used to determine if there should be a transition for the thumb and fill track.\r\n   */\r\n  _isSliding: boolean = false;\r\n\r\n  /**\r\n   * Whether or not the slider is active (clicked or sliding).\r\n   * Used to shrink and grow the thumb as according to the Material Design spec.\r\n   */\r\n  _isActive: boolean = false;\r\n\r\n  /**\r\n   * Whether the axis of the slider is inverted.\r\n   * (i.e. whether moving the thumb in the positive x or y direction decreases the slider's value).\r\n   */\r\n  get _invertAxis() {\r\n    // Standard non-inverted mode for a vertical slider should be dragging the thumb from bottom to\r\n    // top. However from a y-axis standpoint this is inverted.\r\n    return this.vertical ? !this.invert : this.invert;\r\n  }\r\n\r\n\r\n  /** Whether the slider is at its minimum value. */\r\n  get _isMinValue() {\r\n    return this.percent === 0;\r\n  }\r\n\r\n  /**\r\n   * The amount of space to leave between the slider thumb and the track fill & track background\r\n   * elements.\r\n   */\r\n  get _thumbGap() {\r\n    if (this.disabled) {\r\n      return DISABLED_THUMB_GAP;\r\n    }\r\n    if (this._isMinValue && !this.thumbLabel) {\r\n      return this._isActive ? MIN_VALUE_ACTIVE_THUMB_GAP : MIN_VALUE_NONACTIVE_THUMB_GAP;\r\n    }\r\n    return 0;\r\n  }\r\n\r\n  /** CSS styles for the track background element. */\r\n  get _trackBackgroundStyles(): { [key: string]: string } {\r\n    let axis = this.vertical ? 'Y' : 'X';\r\n    let sign = this._invertMouseCoords ? '-' : '';\r\n    return {\r\n      'transform': `translate${axis}(${sign}${this._thumbGap}px) scale${axis}(${1 - this.percent})`\r\n    };\r\n  }\r\n\r\n  /** CSS styles for the track fill element. */\r\n  get _trackFillStyles(): { [key: string]: string } {\r\n    let axis = this.vertical ? 'Y' : 'X';\r\n    let sign = this._invertMouseCoords ? '' : '-';\r\n    return {\r\n      'transform': `translate${axis}(${sign}${this._thumbGap}px) scale${axis}(${this.percent})`\r\n    };\r\n  }\r\n\r\n  /** CSS styles for the ticks container element. */\r\n  get _ticksContainerStyles(): { [key: string]: string } {\r\n    let axis = this.vertical ? 'Y' : 'X';\r\n    // For a horizontal slider in RTL languages we push the ticks container off the left edge\r\n    // instead of the right edge to avoid causing a horizontal scrollbar to appear.\r\n    let sign = !this.vertical && this._direction == 'rtl' ? '' : '-';\r\n    let offset = this._tickIntervalPercent / 2 * 100;\r\n    return {\r\n      'transform': `translate${axis}(${sign}${offset}%)`\r\n    };\r\n  }\r\n\r\n  /** CSS styles for the ticks element. */\r\n  get _ticksStyles(): { [key: string]: string } {\r\n    let tickSize = this._tickIntervalPercent * 100;\r\n    let backgroundSize = this.vertical ? `2px ${tickSize}%` : `${tickSize}% 2px`;\r\n    let axis = this.vertical ? 'Y' : 'X';\r\n    // Depending on the direction we pushed the ticks container, push the ticks the opposite\r\n    // direction to re-center them but clip off the end edge. In RTL languages we need to flip the\r\n    // ticks 180 degrees so we're really cutting off the end edge abd not the start.\r\n    let sign = !this.vertical && this._direction == 'rtl' ? '-' : '';\r\n    let rotate = !this.vertical && this._direction == 'rtl' ? ' rotate(180deg)' : '';\r\n    let styles: { [key: string]: string } = {\r\n      'backgroundSize': backgroundSize,\r\n      // Without translateZ ticks sometimes jitter as the slider moves on Chrome & Firefox.\r\n      'transform': `translateZ(0) translate${axis}(${sign}${tickSize / 2}%)${rotate}`\r\n    };\r\n\r\n    if (this._isMinValue && this._thumbGap) {\r\n      let side = this.vertical ?\r\n          (this._invertAxis ? 'Bottom' : 'Top') :\r\n          (this._invertAxis ? 'Right' : 'Left');\r\n      styles[`padding${side}`] = `${this._thumbGap}px`;\r\n    }\r\n\r\n    return styles;\r\n  }\r\n\r\n  get _thumbContainerStyles(): { [key: string]: string } {\r\n    let axis = this.vertical ? 'Y' : 'X';\r\n    // For a horizontal slider in RTL languages we push the thumb container off the left edge\r\n    // instead of the right edge to avoid causing a horizontal scrollbar to appear.\r\n    let invertOffset =\r\n        (this._direction == 'rtl' && !this.vertical) ? !this._invertAxis : this._invertAxis;\r\n    let offset = (invertOffset ? this.percent : 1 - this.percent) * 100;\r\n    return {\r\n      'transform': `translate${axis}(-${offset}%)`\r\n    };\r\n  }\r\n\r\n  /** The size of a tick interval as a percentage of the size of the track. */\r\n  private _tickIntervalPercent: number = 0;\r\n\r\n  /** The dimensions of the slider. */\r\n  private _sliderDimensions: ClientRect | null = null;\r\n\r\n  private _controlValueAccessorChangeFn: (value: any) => void = () => {};\r\n\r\n  /** Decimal places to round to, based on the step amount. */\r\n  private _roundLabelTo: number;\r\n\r\n  /** Subscription to the Directionality change EventEmitter. */\r\n  private _dirChangeSubscription = Subscription.EMPTY;\r\n\r\n  /** The value of the slider when the slide start event fires. */\r\n  private _valueOnSlideStart: number | null;\r\n\r\n  /** Reference to the inner slider wrapper element. */\r\n  @ViewChild('sliderWrapper') private _sliderWrapper: ElementRef;\r\n\r\n  /**\r\n   * Whether mouse events should be converted to a slider position by calculating their distance\r\n   * from the right or bottom edge of the slider as opposed to the top or left.\r\n   */\r\n  private get _invertMouseCoords() {\r\n    return (this._direction == 'rtl' && !this.vertical) ? !this._invertAxis : this._invertAxis;\r\n  }\r\n\r\n  /** The language direction for this slider element. */\r\n  private get _direction() {\r\n    return (this._dir && this._dir.value == 'rtl') ? 'rtl' : 'ltr';\r\n  }\r\n\r\n  constructor(elementRef: ElementRef,\r\n              private _focusMonitor: FocusMonitor,\r\n              private _changeDetectorRef: ChangeDetectorRef,\r\n              @Optional() private _dir: Directionality,\r\n              @Attribute('tabindex') tabIndex: string) {\r\n    super(elementRef);\r\n\r\n    this.tabIndex = parseInt(tabIndex) || 0;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this._focusMonitor\r\n        .monitor(this._elementRef.nativeElement, true)\r\n        .subscribe((origin: FocusOrigin) => {\r\n          this._isActive = !!origin && origin !== 'keyboard';\r\n          this._changeDetectorRef.detectChanges();\r\n        });\r\n    if (this._dir) {\r\n      this._dirChangeSubscription = this._dir.change.subscribe(() => {\r\n        this._changeDetectorRef.markForCheck();\r\n      });\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this._focusMonitor.stopMonitoring(this._elementRef.nativeElement);\r\n    this._dirChangeSubscription.unsubscribe();\r\n  }\r\n\r\n  _onMouseenter() {\r\n    if (this.disabled) {\r\n      return;\r\n    }\r\n\r\n    // We save the dimensions of the slider here so we can use them to update the spacing of the\r\n    // ticks and determine where on the slider click and slide events happen.\r\n    this._sliderDimensions = this._getSliderDimensions();\r\n    this._updateTickIntervalPercent();\r\n  }\r\n\r\n  _onClick(event: MouseEvent) {\r\n    if (this.disabled) {\r\n      return;\r\n    }\r\n\r\n    let oldValue = this.value;\r\n    this._isSliding = false;\r\n    this._focusHostElement();\r\n    this._updateValueFromPosition({x: event.clientX, y: event.clientY});\r\n\r\n    // Emit a change and input event if the value changed.\r\n    if (oldValue != this.value) {\r\n      this._emitInputEvent();\r\n      this._emitChangeEvent();\r\n    }\r\n  }\r\n\r\n  _onSlide(event: HammerInput) {\r\n    if (this.disabled) {\r\n      return;\r\n    }\r\n\r\n    // The slide start event sometimes fails to fire on iOS, so if we're not already in the sliding\r\n    // state, call the slide start handler manually.\r\n    if (!this._isSliding) {\r\n      this._onSlideStart(null);\r\n    }\r\n\r\n    // Prevent the slide from selecting anything else.\r\n    event.preventDefault();\r\n\r\n    let oldValue = this.value;\r\n    this._updateValueFromPosition({x: event.center.x, y: event.center.y});\r\n\r\n    // Native range elements always emit `input` events when the value changed while sliding.\r\n    if (oldValue != this.value) {\r\n      this._emitInputEvent();\r\n    }\r\n  }\r\n\r\n  _onSlideStart(event: HammerInput | null) {\r\n    if (this.disabled || this._isSliding) {\r\n      return;\r\n    }\r\n\r\n    // Simulate mouseenter in case this is a mobile device.\r\n    this._onMouseenter();\r\n\r\n    this._isSliding = true;\r\n    this._focusHostElement();\r\n    this._valueOnSlideStart = this.value;\r\n\r\n    if (event) {\r\n      this._updateValueFromPosition({x: event.center.x, y: event.center.y});\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  _onSlideEnd() {\r\n    this._isSliding = false;\r\n\r\n    if (this._valueOnSlideStart != this.value && !this.disabled) {\r\n      this._emitChangeEvent();\r\n    }\r\n    this._valueOnSlideStart = null;\r\n  }\r\n\r\n  _onFocus() {\r\n    // We save the dimensions of the slider here so we can use them to update the spacing of the\r\n    // ticks and determine where on the slider click and slide events happen.\r\n    this._sliderDimensions = this._getSliderDimensions();\r\n    this._updateTickIntervalPercent();\r\n  }\r\n\r\n  _onBlur() {\r\n    this.onTouched();\r\n  }\r\n\r\n  _onKeydown(event: KeyboardEvent) {\r\n    if (this.disabled) { return; }\r\n\r\n    let oldValue = this.value;\r\n\r\n    switch (event.keyCode) {\r\n      case PAGE_UP:\r\n        this._increment(10);\r\n        break;\r\n      case PAGE_DOWN:\r\n        this._increment(-10);\r\n        break;\r\n      case END:\r\n        this.value = this.max;\r\n        break;\r\n      case HOME:\r\n        this.value = this.min;\r\n        break;\r\n      case LEFT_ARROW:\r\n        // NOTE: For a sighted user it would make more sense that when they press an arrow key on an\r\n        // inverted slider the thumb moves in that direction. However for a blind user, nothing\r\n        // about the slider indicates that it is inverted. They will expect left to be decrement,\r\n        // regardless of how it appears on the screen. For speakers ofRTL languages, they probably\r\n        // expect left to mean increment. Therefore we flip the meaning of the side arrow keys for\r\n        // RTL. For inverted sliders we prefer a good a11y experience to having it \"look right\" for\r\n        // sighted users, therefore we do not swap the meaning.\r\n        this._increment(this._direction == 'rtl' ? 1 : -1);\r\n        break;\r\n      case UP_ARROW:\r\n        this._increment(1);\r\n        break;\r\n      case RIGHT_ARROW:\r\n        // See comment on LEFT_ARROW about the conditions under which we flip the meaning.\r\n        this._increment(this._direction == 'rtl' ? -1 : 1);\r\n        break;\r\n      case DOWN_ARROW:\r\n        this._increment(-1);\r\n        break;\r\n      default:\r\n        // Return if the key is not one that we explicitly handle to avoid calling preventDefault on\r\n        // it.\r\n        return;\r\n    }\r\n\r\n    if (oldValue != this.value) {\r\n      this._emitInputEvent();\r\n      this._emitChangeEvent();\r\n    }\r\n\r\n    this._isSliding = true;\r\n    event.preventDefault();\r\n  }\r\n\r\n  _onKeyup() {\r\n    this._isSliding = false;\r\n  }\r\n\r\n  /** Increments the slider by the given number of steps (negative number decrements). */\r\n  private _increment(numSteps: number) {\r\n    this.value = this._clamp((this.value || 0) + this.step * numSteps, this.min, this.max);\r\n  }\r\n\r\n  /** Calculate the new value from the new physical location. The value will always be snapped. */\r\n  private _updateValueFromPosition(pos: {x: number, y: number}) {\r\n    if (!this._sliderDimensions) {\r\n      return;\r\n    }\r\n\r\n    let offset = this.vertical ? this._sliderDimensions.top : this._sliderDimensions.left;\r\n    let size = this.vertical ? this._sliderDimensions.height : this._sliderDimensions.width;\r\n    let posComponent = this.vertical ? pos.y : pos.x;\r\n\r\n    // The exact value is calculated from the event and used to find the closest snap value.\r\n    let percent = this._clamp((posComponent - offset) / size);\r\n    if (this._invertMouseCoords) {\r\n      percent = 1 - percent;\r\n    }\r\n    let exactValue = this._calculateValue(percent);\r\n\r\n    // This calculation finds the closest step by finding the closest whole number divisible by the\r\n    // step relative to the min.\r\n    let closestValue = Math.round((exactValue - this.min) / this.step) * this.step + this.min;\r\n    // The value needs to snap to the min and max.\r\n    this.value = this._clamp(closestValue, this.min, this.max);\r\n  }\r\n\r\n  /** Emits a change event if the current value is different from the last emitted value. */\r\n  private _emitChangeEvent() {\r\n    this._controlValueAccessorChangeFn(this.value);\r\n    this.change.emit(this._createChangeEvent());\r\n  }\r\n\r\n  /** Emits an input event when the current value is different from the last emitted value. */\r\n  private _emitInputEvent() {\r\n    this.input.emit(this._createChangeEvent());\r\n  }\r\n\r\n  /** Updates the amount of space between ticks as a percentage of the width of the slider. */\r\n  private _updateTickIntervalPercent() {\r\n    if (!this.tickInterval || !this._sliderDimensions) {\r\n      return;\r\n    }\r\n\r\n    if (this.tickInterval == 'auto') {\r\n      let trackSize = this.vertical ? this._sliderDimensions.height : this._sliderDimensions.width;\r\n      let pixelsPerStep = trackSize * this.step / (this.max - this.min);\r\n      let stepsPerTick = Math.ceil(MIN_AUTO_TICK_SEPARATION / pixelsPerStep);\r\n      let pixelsPerTick = stepsPerTick * this.step;\r\n      this._tickIntervalPercent = pixelsPerTick / trackSize;\r\n    } else {\r\n      this._tickIntervalPercent = this.tickInterval * this.step / (this.max - this.min);\r\n    }\r\n  }\r\n\r\n  /** Creates a slider change object from the specified value. */\r\n  private _createChangeEvent(value = this.value): MatSliderChange {\r\n    let event = new MatSliderChange();\r\n\r\n    event.source = this;\r\n    event.value = value;\r\n\r\n    return event;\r\n  }\r\n\r\n  /** Calculates the percentage of the slider that a value is. */\r\n  private _calculatePercentage(value: number | null) {\r\n    return ((value || 0) - this.min) / (this.max - this.min);\r\n  }\r\n\r\n  /** Calculates the value a percentage of the slider corresponds to. */\r\n  private _calculateValue(percentage: number) {\r\n    return this.min + percentage * (this.max - this.min);\r\n  }\r\n\r\n  /** Return a number between two numbers. */\r\n  private _clamp(value: number, min = 0, max = 1) {\r\n    return Math.max(min, Math.min(value, max));\r\n  }\r\n\r\n  /**\r\n   * Get the bounding client rect of the slider track element.\r\n   * The track is used rather than the native element to ignore the extra space that the thumb can\r\n   * take up.\r\n   */\r\n  private _getSliderDimensions() {\r\n    return this._sliderWrapper ? this._sliderWrapper.nativeElement.getBoundingClientRect() : null;\r\n  }\r\n\r\n  /**\r\n   * Focuses the native element.\r\n   * Currently only used to allow a blur event to fire but will be used with keyboard input later.\r\n   */\r\n  private _focusHostElement() {\r\n    this._elementRef.nativeElement.focus();\r\n  }\r\n\r\n  /** Blurs the native element. */\r\n  private _blurHostElement() {\r\n    this._elementRef.nativeElement.blur();\r\n  }\r\n\r\n  /**\r\n   * Sets the model value. Implemented as part of ControlValueAccessor.\r\n   * @param value\r\n   */\r\n  writeValue(value: any) {\r\n    this.value = value;\r\n  }\r\n\r\n  /**\r\n   * Registers a callback to eb triggered when the value has changed.\r\n   * Implemented as part of ControlValueAccessor.\r\n   * @param fn Callback to be registered.\r\n   */\r\n  registerOnChange(fn: (value: any) => void) {\r\n    this._controlValueAccessorChangeFn = fn;\r\n  }\r\n\r\n  /**\r\n   * Registers a callback to be triggered when the component is touched.\r\n   * Implemented as part of ControlValueAccessor.\r\n   * @param fn Callback to be registered.\r\n   */\r\n  registerOnTouched(fn: any) {\r\n    this.onTouched = fn;\r\n  }\r\n\r\n  /**\r\n   * Sets whether the component should be disabled.\r\n   * Implemented as part of ControlValueAccessor.\r\n   * @param isDisabled\r\n   */\r\n  setDisabledState(isDisabled: boolean) {\r\n    this.disabled = isDisabled;\r\n  }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {ObserversModule} from '@angular/cdk/observers';\r\nimport {PlatformModule} from '@angular/cdk/platform';\r\nimport {NgModule} from '@angular/core';\r\nimport {\r\n  GestureConfig,\r\n  MatCommonModule,\r\n  MatRippleModule,\r\n} from '@angular/material/core';\r\nimport {HAMMER_GESTURE_CONFIG} from '@angular/platform-browser';\r\nimport {A11yModule} from '@angular/cdk/a11y';\r\nimport {MatSlideToggle} from './slide-toggle';\r\n\r\n\r\n@NgModule({\r\n  imports: [MatRippleModule, MatCommonModule, PlatformModule, ObserversModule, A11yModule],\r\n  exports: [MatSlideToggle, MatCommonModule],\r\n  declarations: [MatSlideToggle],\r\n  providers: [\r\n    {provide: HAMMER_GESTURE_CONFIG, useClass: GestureConfig}\r\n  ],\r\n})\r\nexport class MatSlideToggleModule {}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {FocusMonitor, FocusOrigin} from '@angular/cdk/a11y';\r\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\r\nimport {Platform} from '@angular/cdk/platform';\r\nimport {\r\n  AfterContentInit,\r\n  Attribute,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ElementRef,\r\n  EventEmitter,\r\n  forwardRef,\r\n  Input,\r\n  OnDestroy,\r\n  Output,\r\n  ViewChild,\r\n  ViewEncapsulation\r\n} from '@angular/core';\r\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\r\nimport {\r\n  CanColor,\r\n  CanDisable,\r\n  CanDisableRipple,\r\n  HammerInput,\r\n  HasTabIndex,\r\n  MatRipple,\r\n  mixinColor,\r\n  mixinDisabled,\r\n  mixinDisableRipple,\r\n  mixinTabIndex,\r\n  RippleRef,\r\n} from '@angular/material/core';\r\n\r\n// Increasing integer for generating unique ids for slide-toggle components.\r\nlet nextUniqueId = 0;\r\n\r\nexport const MAT_SLIDE_TOGGLE_VALUE_ACCESSOR: any = {\r\n  provide: NG_VALUE_ACCESSOR,\r\n  useExisting: forwardRef(() => MatSlideToggle),\r\n  multi: true\r\n};\r\n\r\n/** Change event object emitted by a MatSlideToggle. */\r\nexport class MatSlideToggleChange {\r\n  constructor(\r\n    /** The source MatSlideToggle of the event. */\r\n    public source: MatSlideToggle,\r\n    /** The new `checked` value of the MatSlideToggle. */\r\n    public checked: boolean) { }\r\n}\r\n\r\n// Boilerplate for applying mixins to MatSlideToggle.\r\n/** @docs-private */\r\nexport class MatSlideToggleBase {\r\n  constructor(public _elementRef: ElementRef) {}\r\n}\r\nexport const _MatSlideToggleMixinBase =\r\n  mixinTabIndex(mixinColor(mixinDisableRipple(mixinDisabled(MatSlideToggleBase)), 'accent'));\r\n\r\n/** Represents a slidable \"switch\" toggle that can be moved between on and off. */\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'mat-slide-toggle',\r\n  exportAs: 'matSlideToggle',\r\n  host: {\r\n    'class': 'mat-slide-toggle',\r\n    '[id]': 'id',\r\n    '[class.mat-checked]': 'checked',\r\n    '[class.mat-disabled]': 'disabled',\r\n    '[class.mat-slide-toggle-label-before]': 'labelPosition == \"before\"',\r\n  },\r\n  templateUrl: 'slide-toggle.html',\r\n  styleUrls: ['slide-toggle.css'],\r\n  providers: [MAT_SLIDE_TOGGLE_VALUE_ACCESSOR],\r\n  inputs: ['disabled', 'disableRipple', 'color', 'tabIndex'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  preserveWhitespaces: false,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class MatSlideToggle extends _MatSlideToggleMixinBase implements OnDestroy, AfterContentInit,\r\n    ControlValueAccessor, CanDisable, CanColor, HasTabIndex, CanDisableRipple {\r\n\r\n  private onChange = (_: any) => {};\r\n  private onTouched = () => {};\r\n\r\n  private _uniqueId: string = `mat-slide-toggle-${++nextUniqueId}`;\r\n  private _slideRenderer: SlideToggleRenderer;\r\n  private _required: boolean = false;\r\n  private _checked: boolean = false;\r\n\r\n  /** Reference to the focus state ripple. */\r\n  private _focusRipple: RippleRef | null;\r\n\r\n  /** Name value will be applied to the input element if present */\r\n  @Input() name: string | null = null;\r\n\r\n  /** A unique id for the slide-toggle input. If none is supplied, it will be auto-generated. */\r\n  @Input() id: string = this._uniqueId;\r\n\r\n  /** Whether the label should appear after or before the slide-toggle. Defaults to 'after' */\r\n  @Input() labelPosition: 'before' | 'after' = 'after';\r\n\r\n  /** Whether the slide-toggle element is checked or not */\r\n\r\n  /** Used to set the aria-label attribute on the underlying input element. */\r\n  @Input('aria-label') ariaLabel: string | null = null;\r\n\r\n  /** Used to set the aria-labelledby attribute on the underlying input element. */\r\n  @Input('aria-labelledby') ariaLabelledby: string | null = null;\r\n\r\n  /** Whether the slide-toggle is required. */\r\n  @Input()\r\n  get required(): boolean { return this._required; }\r\n  set required(value) { this._required = coerceBooleanProperty(value); }\r\n\r\n  /** Whether the slide-toggle element is checked or not */\r\n  @Input()\r\n  get checked(): boolean { return this._checked; }\r\n  set checked(value) {\r\n    this._checked = coerceBooleanProperty(value);\r\n    this._changeDetectorRef.markForCheck();\r\n  }\r\n  /** An event will be dispatched each time the slide-toggle changes its value. */\r\n  @Output() readonly change: EventEmitter<MatSlideToggleChange> =\r\n      new EventEmitter<MatSlideToggleChange>();\r\n\r\n  /** Returns the unique id for the visual hidden input. */\r\n  get inputId(): string { return `${this.id || this._uniqueId}-input`; }\r\n\r\n  /** Reference to the underlying input element. */\r\n  @ViewChild('input') _inputElement: ElementRef;\r\n\r\n  /** Reference to the ripple directive on the thumb container. */\r\n  @ViewChild(MatRipple) _ripple: MatRipple;\r\n\r\n  constructor(elementRef: ElementRef,\r\n              private _platform: Platform,\r\n              private _focusMonitor: FocusMonitor,\r\n              private _changeDetectorRef: ChangeDetectorRef,\r\n              @Attribute('tabindex') tabIndex: string) {\r\n\r\n    super(elementRef);\r\n    this.tabIndex = parseInt(tabIndex) || 0;\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    this._slideRenderer = new SlideToggleRenderer(this._elementRef, this._platform);\r\n\r\n    this._focusMonitor\r\n      .monitor(this._inputElement.nativeElement)\r\n      .subscribe(focusOrigin => this._onInputFocusChange(focusOrigin));\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this._focusMonitor.stopMonitoring(this._inputElement.nativeElement);\r\n  }\r\n\r\n  /** Method being called whenever the underlying input emits a change event. */\r\n  _onChangeEvent(event: Event) {\r\n    // We always have to stop propagation on the change event.\r\n    // Otherwise the change event, from the input element, will bubble up and\r\n    // emit its event object to the component's `change` output.\r\n    event.stopPropagation();\r\n\r\n    // Releasing the pointer over the `<label>` element while dragging triggers another\r\n    // click event on the `<label>` element. This means that the checked state of the underlying\r\n    // input changed unintentionally and needs to be changed back.\r\n    if (this._slideRenderer.dragging) {\r\n      this._inputElement.nativeElement.checked = this.checked;\r\n      return;\r\n    }\r\n\r\n    // Sync the value from the underlying input element with the component instance.\r\n    this.checked = this._inputElement.nativeElement.checked;\r\n\r\n    // Emit our custom change event only if the underlying input emitted one. This ensures that\r\n    // there is no change event, when the checked state changes programmatically.\r\n    this._emitChangeEvent();\r\n  }\r\n\r\n  /** Method being called whenever the slide-toggle has been clicked. */\r\n  _onInputClick(event: Event) {\r\n    // We have to stop propagation for click events on the visual hidden input element.\r\n    // By default, when a user clicks on a label element, a generated click event will be\r\n    // dispatched on the associated input element. Since we are using a label element as our\r\n    // root container, the click event on the `slide-toggle` will be executed twice.\r\n    // The real click event will bubble up, and the generated click event also tries to bubble up.\r\n    // This will lead to multiple click events.\r\n    // Preventing bubbling for the second event will solve that issue.\r\n    event.stopPropagation();\r\n  }\r\n\r\n  /** Implemented as part of ControlValueAccessor. */\r\n  writeValue(value: any): void {\r\n    this.checked = !!value;\r\n  }\r\n\r\n  /** Implemented as part of ControlValueAccessor. */\r\n  registerOnChange(fn: any): void {\r\n    this.onChange = fn;\r\n  }\r\n\r\n  /** Implemented as part of ControlValueAccessor. */\r\n  registerOnTouched(fn: any): void {\r\n    this.onTouched = fn;\r\n  }\r\n\r\n  /** Implemented as a part of ControlValueAccessor. */\r\n  setDisabledState(isDisabled: boolean): void {\r\n    this.disabled = isDisabled;\r\n    this._changeDetectorRef.markForCheck();\r\n  }\r\n\r\n  /** Focuses the slide-toggle. */\r\n  focus(): void {\r\n    this._focusMonitor.focusVia(this._inputElement.nativeElement, 'keyboard');\r\n  }\r\n\r\n  /** Toggles the checked state of the slide-toggle. */\r\n  toggle(): void {\r\n    this.checked = !this.checked;\r\n  }\r\n\r\n  /** Function is called whenever the focus changes for the input element. */\r\n  private _onInputFocusChange(focusOrigin: FocusOrigin) {\r\n    if (!this._focusRipple && focusOrigin === 'keyboard') {\r\n      // For keyboard focus show a persistent ripple as focus indicator.\r\n      this._focusRipple = this._ripple.launch(0, 0, {persistent: true});\r\n    } else if (!focusOrigin) {\r\n      this.onTouched();\r\n\r\n      // Fade out and clear the focus ripple if one is currently present.\r\n      if (this._focusRipple) {\r\n        this._focusRipple.fadeOut();\r\n        this._focusRipple = null;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Emits a change event on the `change` output. Also notifies the FormControl about the change.\r\n   */\r\n  private _emitChangeEvent() {\r\n    this.onChange(this.checked);\r\n    this.change.emit(new MatSlideToggleChange(this, this.checked));\r\n  }\r\n\r\n  _onDragStart() {\r\n    if (!this.disabled) {\r\n      this._slideRenderer.startThumbDrag(this.checked);\r\n    }\r\n  }\r\n\r\n  _onDrag(event: HammerInput) {\r\n    if (this._slideRenderer.dragging) {\r\n      this._slideRenderer.updateThumbPosition(event.deltaX);\r\n    }\r\n  }\r\n\r\n  _onDragEnd() {\r\n    if (this._slideRenderer.dragging) {\r\n      const newCheckedValue = this._slideRenderer.dragPercentage > 50;\r\n\r\n      if (newCheckedValue !== this.checked) {\r\n        this.checked = newCheckedValue;\r\n        this._emitChangeEvent();\r\n      }\r\n\r\n      // The drag should be stopped outside of the current event handler, because otherwise the\r\n      // click event will be fired before and will revert the drag change.\r\n      setTimeout(() => this._slideRenderer.stopThumbDrag());\r\n    }\r\n  }\r\n\r\n  /** Method being called whenever the label text changes. */\r\n  _onLabelTextChange() {\r\n    // This method is getting called whenever the label of the slide-toggle changes.\r\n    // Since the slide-toggle uses the OnPush strategy we need to notify it about the change\r\n    // that has been recognized by the cdkObserveContent directive.\r\n    this._changeDetectorRef.markForCheck();\r\n  }\r\n}\r\n\r\n/**\r\n * Renderer for the Slide Toggle component, which separates DOM modification in its own class\r\n */\r\nclass SlideToggleRenderer {\r\n\r\n  /** Reference to the thumb HTMLElement. */\r\n  private _thumbEl: HTMLElement;\r\n\r\n  /** Reference to the thumb bar HTMLElement. */\r\n  private _thumbBarEl: HTMLElement;\r\n\r\n  /** Width of the thumb bar of the slide-toggle. */\r\n  private _thumbBarWidth: number;\r\n\r\n  /** Previous checked state before drag started. */\r\n  private _previousChecked: boolean;\r\n\r\n  /** Percentage of the thumb while dragging. Percentage as fraction of 100. */\r\n  dragPercentage: number;\r\n\r\n  /** Whether the thumb is currently being dragged. */\r\n  dragging: boolean = false;\r\n\r\n  constructor(elementRef: ElementRef, platform: Platform) {\r\n    // We only need to interact with these elements when we're on the browser, so only grab\r\n    // the reference in that case.\r\n    if (platform.isBrowser) {\r\n      this._thumbEl = elementRef.nativeElement.querySelector('.mat-slide-toggle-thumb-container');\r\n      this._thumbBarEl = elementRef.nativeElement.querySelector('.mat-slide-toggle-bar');\r\n    }\r\n  }\r\n\r\n  /** Initializes the drag of the slide-toggle. */\r\n  startThumbDrag(checked: boolean): void {\r\n    if (this.dragging) { return; }\r\n\r\n    this._thumbBarWidth = this._thumbBarEl.clientWidth - this._thumbEl.clientWidth;\r\n    this._thumbEl.classList.add('mat-dragging');\r\n\r\n    this._previousChecked = checked;\r\n    this.dragging = true;\r\n  }\r\n\r\n  /** Resets the current drag and returns the new checked value. */\r\n  stopThumbDrag(): boolean {\r\n    if (!this.dragging) { return false; }\r\n\r\n    this.dragging = false;\r\n    this._thumbEl.classList.remove('mat-dragging');\r\n\r\n    // Reset the transform because the component will take care of the thumb position after drag.\r\n    this._thumbEl.style.transform = '';\r\n\r\n    return this.dragPercentage > 50;\r\n  }\r\n\r\n  /** Updates the thumb containers position from the specified distance. */\r\n  updateThumbPosition(distance: number): void {\r\n    this.dragPercentage = this._getDragPercentage(distance);\r\n    // Calculate the moved distance based on the thumb bar width.\r\n    const dragX = (this.dragPercentage / 100) * this._thumbBarWidth;\r\n    this._thumbEl.style.transform = `translate3d(${dragX}px, 0, 0)`;\r\n  }\r\n\r\n  /** Retrieves the percentage of thumb from the moved distance. Percentage as fraction of 100. */\r\n  private _getDragPercentage(distance: number) {\r\n    let percentage = (distance / this._thumbBarWidth) * 100;\r\n\r\n    // When the toggle was initially checked, then we have to start the drag at the end.\r\n    if (this._previousChecked) {\r\n      percentage += 100;\r\n    }\r\n\r\n    return Math.max(0, Math.min(percentage, 100));\r\n  }\r\n\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {A11yModule} from '@angular/cdk/a11y';\r\nimport {OverlayModule} from '@angular/cdk/overlay';\r\nimport {CommonModule} from '@angular/common';\r\nimport {NgModule} from '@angular/core';\r\nimport {MatCommonModule} from '@angular/material/core';\r\nimport {ScrollDispatchModule} from '@angular/cdk/scrolling';\r\nimport {PlatformModule} from '@angular/cdk/platform';\r\nimport {MatSidenav, MatSidenavContainer, MatSidenavContent} from './sidenav';\r\nimport {\r\n  MatDrawer,\r\n  MatDrawerContainer,\r\n  MatDrawerContent,\r\n  MAT_DRAWER_DEFAULT_AUTOSIZE,\r\n} from './drawer';\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    MatCommonModule,\r\n    A11yModule,\r\n    OverlayModule,\r\n    ScrollDispatchModule,\r\n    PlatformModule,\r\n  ],\r\n  exports: [\r\n    MatCommonModule,\r\n    MatDrawer,\r\n    MatDrawerContainer,\r\n    MatDrawerContent,\r\n    MatSidenav,\r\n    MatSidenavContainer,\r\n    MatSidenavContent,\r\n  ],\r\n  declarations: [\r\n    MatDrawer,\r\n    MatDrawerContainer,\r\n    MatDrawerContent,\r\n    MatSidenav,\r\n    MatSidenavContainer,\r\n    MatSidenavContent,\r\n  ],\r\n  providers: [\r\n    {provide: MAT_DRAWER_DEFAULT_AUTOSIZE, useValue: false}\r\n  ]\r\n})\r\nexport class MatSidenavModule {}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ContentChild,\r\n  ContentChildren,\r\n  forwardRef,\r\n  Inject,\r\n  Input,\r\n  ViewEncapsulation,\r\n  QueryList,\r\n} from '@angular/core';\r\nimport {MatDrawer, MatDrawerContainer, MatDrawerContent} from './drawer';\r\nimport {matDrawerAnimations} from './drawer-animations';\r\nimport {coerceBooleanProperty, coerceNumberProperty} from '@angular/cdk/coercion';\r\n\r\n\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'mat-sidenav-content',\r\n  template: '<ng-content></ng-content>',\r\n  host: {\r\n    'class': 'mat-drawer-content mat-sidenav-content',\r\n    '[style.margin-left.px]': '_margins.left',\r\n    '[style.margin-right.px]': '_margins.right',\r\n  },\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  encapsulation: ViewEncapsulation.None,\r\n  preserveWhitespaces: false,\r\n})\r\nexport class MatSidenavContent extends MatDrawerContent {\r\n  constructor(\r\n      changeDetectorRef: ChangeDetectorRef,\r\n      @Inject(forwardRef(() => MatSidenavContainer)) container: MatSidenavContainer) {\r\n    super(changeDetectorRef, container);\r\n  }\r\n}\r\n\r\n\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'mat-sidenav',\r\n  exportAs: 'matSidenav',\r\n  template: '<ng-content></ng-content>',\r\n  animations: [matDrawerAnimations.transformDrawer],\r\n  host: {\r\n    'class': 'mat-drawer mat-sidenav',\r\n    'tabIndex': '-1',\r\n    '[@transform]': '_animationState',\r\n    '(@transform.start)': '_onAnimationStart($event)',\r\n    '(@transform.done)': '_onAnimationEnd($event)',\r\n    // must prevent the browser from aligning text based on value\r\n    '[attr.align]': 'null',\r\n    '[class.mat-drawer-end]': 'position === \"end\"',\r\n    '[class.mat-drawer-over]': 'mode === \"over\"',\r\n    '[class.mat-drawer-push]': 'mode === \"push\"',\r\n    '[class.mat-drawer-side]': 'mode === \"side\"',\r\n    '[class.mat-sidenav-fixed]': 'fixedInViewport',\r\n    '[style.top.px]': 'fixedInViewport ? fixedTopGap : null',\r\n    '[style.bottom.px]': 'fixedInViewport ? fixedBottomGap : null',\r\n  },\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  encapsulation: ViewEncapsulation.None,\r\n  preserveWhitespaces: false,\r\n})\r\nexport class MatSidenav extends MatDrawer {\r\n  /** Whether the sidenav is fixed in the viewport. */\r\n  @Input()\r\n  get fixedInViewport(): boolean { return this._fixedInViewport; }\r\n  set fixedInViewport(value) { this._fixedInViewport = coerceBooleanProperty(value); }\r\n  private _fixedInViewport = false;\r\n\r\n  /**\r\n   * The gap between the top of the sidenav and the top of the viewport when the sidenav is in fixed\r\n   * mode.\r\n   */\r\n  @Input()\r\n  get fixedTopGap(): number { return this._fixedTopGap; }\r\n  set fixedTopGap(value) { this._fixedTopGap = coerceNumberProperty(value); }\r\n  private _fixedTopGap = 0;\r\n\r\n  /**\r\n   * The gap between the bottom of the sidenav and the bottom of the viewport when the sidenav is in\r\n   * fixed mode.\r\n   */\r\n  @Input()\r\n  get fixedBottomGap(): number { return this._fixedBottomGap; }\r\n  set fixedBottomGap(value) { this._fixedBottomGap = coerceNumberProperty(value); }\r\n  private _fixedBottomGap = 0;\r\n}\r\n\r\n\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'mat-sidenav-container',\r\n  exportAs: 'matSidenavContainer',\r\n  templateUrl: 'sidenav-container.html',\r\n  styleUrls: ['drawer.css'],\r\n  host: {\r\n    'class': 'mat-drawer-container mat-sidenav-container',\r\n  },\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  encapsulation: ViewEncapsulation.None,\r\n  preserveWhitespaces: false,\r\n})\r\nexport class MatSidenavContainer extends MatDrawerContainer {\r\n  @ContentChildren(MatSidenav) _drawers: QueryList<MatSidenav>;\r\n  @ContentChild(MatSidenavContent) _content: MatSidenavContent;\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\nimport {AnimationEvent} from '@angular/animations';\r\nimport {FocusTrap, FocusTrapFactory, FocusMonitor, FocusOrigin} from '@angular/cdk/a11y';\r\nimport {Directionality} from '@angular/cdk/bidi';\r\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\r\nimport {ESCAPE} from '@angular/cdk/keycodes';\r\nimport {Platform} from '@angular/cdk/platform';\r\nimport {\r\n  AfterContentChecked,\r\n  AfterContentInit,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ContentChild,\r\n  ContentChildren,\r\n  ElementRef,\r\n  EventEmitter,\r\n  forwardRef,\r\n  Inject,\r\n  Input,\r\n  NgZone,\r\n  OnDestroy,\r\n  Optional,\r\n  Output,\r\n  QueryList,\r\n  ViewEncapsulation,\r\n  InjectionToken,\r\n  ViewChild,\r\n} from '@angular/core';\r\nimport {DOCUMENT} from '@angular/common';\r\nimport {merge} from 'rxjs/observable/merge';\r\nimport {filter} from 'rxjs/operators/filter';\r\nimport {take} from 'rxjs/operators/take';\r\nimport {startWith} from 'rxjs/operators/startWith';\r\nimport {takeUntil} from 'rxjs/operators/takeUntil';\r\nimport {debounceTime} from 'rxjs/operators/debounceTime';\r\nimport {map} from 'rxjs/operators/map';\r\nimport {fromEvent} from 'rxjs/observable/fromEvent';\r\nimport {Subject} from 'rxjs/Subject';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport {matDrawerAnimations} from './drawer-animations';\r\nimport {CdkScrollable} from '@angular/cdk/scrolling';\r\n\r\n\r\n/** Throws an exception when two MatDrawer are matching the same position. */\r\nexport function throwMatDuplicatedDrawerError(position: string) {\r\n  throw Error(`A drawer was already declared for 'position=\"${position}\"'`);\r\n}\r\n\r\n\r\n/**\r\n * Drawer toggle promise result.\r\n * @deprecated\r\n * @deletion-target 6.0.0\r\n */\r\nexport class MatDrawerToggleResult {\r\n  constructor(\r\n    /** Whether the drawer is opened or closed. */\r\n    public type: 'open' | 'close',\r\n    /** Whether the drawer animation is finished. */\r\n    public animationFinished: boolean) {}\r\n}\r\n\r\n/** Configures whether drawers should use auto sizing by default. */\r\nexport const MAT_DRAWER_DEFAULT_AUTOSIZE =\r\n    new InjectionToken<boolean>('MAT_DRAWER_DEFAULT_AUTOSIZE');\r\n\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'mat-drawer-content',\r\n  template: '<ng-content></ng-content>',\r\n  host: {\r\n    'class': 'mat-drawer-content',\r\n    '[style.margin-left.px]': '_margins.left',\r\n    '[style.margin-right.px]': '_margins.right',\r\n  },\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  encapsulation: ViewEncapsulation.None,\r\n  preserveWhitespaces: false,\r\n})\r\nexport class MatDrawerContent implements AfterContentInit {\r\n  /**\r\n   * Margins to be applied to the content. These are used to push / shrink the drawer content when a\r\n   * drawer is open. We use margin rather than transform even for push mode because transform breaks\r\n   * fixed position elements inside of the transformed element.\r\n   */\r\n  _margins: {left: number|null, right: number|null} = {left: null, right: null};\r\n\r\n  constructor(\r\n      private _changeDetectorRef: ChangeDetectorRef,\r\n      @Inject(forwardRef(() => MatDrawerContainer)) private _container: MatDrawerContainer) {\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    this._container._contentMargins.subscribe(margins => {\r\n      this._margins = margins;\r\n      this._changeDetectorRef.markForCheck();\r\n    });\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * This component corresponds to a drawer that can be opened on the drawer container.\r\n */\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'mat-drawer',\r\n  exportAs: 'matDrawer',\r\n  template: '<ng-content></ng-content>',\r\n  animations: [matDrawerAnimations.transformDrawer],\r\n  host: {\r\n    'class': 'mat-drawer',\r\n    '[@transform]': '_animationState',\r\n    '(@transform.start)': '_onAnimationStart($event)',\r\n    '(@transform.done)': '_onAnimationEnd($event)',\r\n    // must prevent the browser from aligning text based on value\r\n    '[attr.align]': 'null',\r\n    '[class.mat-drawer-end]': 'position === \"end\"',\r\n    '[class.mat-drawer-over]': 'mode === \"over\"',\r\n    '[class.mat-drawer-push]': 'mode === \"push\"',\r\n    '[class.mat-drawer-side]': 'mode === \"side\"',\r\n    'tabIndex': '-1',\r\n  },\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  encapsulation: ViewEncapsulation.None,\r\n  preserveWhitespaces: false,\r\n})\r\nexport class MatDrawer implements AfterContentInit, AfterContentChecked, OnDestroy {\r\n  private _focusTrap: FocusTrap;\r\n  private _elementFocusedBeforeDrawerWasOpened: HTMLElement | null = null;\r\n\r\n  /** Whether the drawer is initialized. Used for disabling the initial animation. */\r\n  private _enableAnimations = false;\r\n\r\n  /** The side that the drawer is attached to. */\r\n  @Input()\r\n  get position(): 'start' | 'end' { return this._position; }\r\n  set position(value: 'start' | 'end') {\r\n    // Make sure we have a valid value.\r\n    value = value === 'end' ? 'end' : 'start';\r\n    if (value != this._position) {\r\n      this._position = value;\r\n      this.onAlignChanged.emit();\r\n      this.onPositionChanged.emit();\r\n    }\r\n  }\r\n  private _position: 'start' | 'end' = 'start';\r\n\r\n  /**\r\n   * @deprecated\r\n   * @deletion-target 6.0.0\r\n   */\r\n  @Input()\r\n  get align(): 'start' | 'end' { return this.position; }\r\n  set align(value: 'start' | 'end') { this.position = value; }\r\n\r\n  /** Mode of the drawer; one of 'over', 'push' or 'side'. */\r\n  @Input()\r\n  get mode(): 'over' | 'push' | 'side' { return this._mode; }\r\n  set mode(value: 'over' | 'push' | 'side') {\r\n    this._mode = value;\r\n    this._modeChanged.next();\r\n  }\r\n  private _mode: 'over' | 'push' | 'side' = 'over';\r\n\r\n  /** Whether the drawer can be closed with the escape key or by clicking on the backdrop. */\r\n  @Input()\r\n  get disableClose(): boolean { return this._disableClose; }\r\n  set disableClose(value: boolean) { this._disableClose = coerceBooleanProperty(value); }\r\n  private _disableClose: boolean = false;\r\n\r\n  /** How the sidenav was opened (keypress, mouse click etc.) */\r\n  private _openedVia: FocusOrigin | null;\r\n\r\n  /** Emits whenever the drawer has started animating. */\r\n  _animationStarted = new EventEmitter<AnimationEvent>();\r\n\r\n  /** Current state of the sidenav animation. */\r\n  _animationState: 'open-instant' | 'open' | 'void' = 'void';\r\n\r\n  /** Event emitted when the drawer open state is changed. */\r\n  @Output() readonly openedChange: EventEmitter<boolean> =\r\n      // Note this has to be async in order to avoid some issues with two-bindings (see #8872).\r\n      new EventEmitter<boolean>(/* isAsync */true);\r\n\r\n  /** Event emitted when the drawer has been opened. */\r\n  @Output('opened')\r\n  get _openedStream(): Observable<void> {\r\n    return this.openedChange.pipe(filter(o => o), map(() => {}));\r\n  }\r\n\r\n  /** Event emitted when the drawer has started opening. */\r\n  @Output()\r\n  get openedStart(): Observable<void> {\r\n    return this._animationStarted.pipe(\r\n      filter(e => e.fromState !== e.toState && e.toState.indexOf('open') === 0),\r\n      map(() => {})\r\n    );\r\n  }\r\n\r\n  /** Event emitted when the drawer has been closed. */\r\n  @Output('closed')\r\n  get _closedStream(): Observable<void> {\r\n    return this.openedChange.pipe(filter(o => !o), map(() => {}));\r\n  }\r\n\r\n  /** Event emitted when the drawer has started closing. */\r\n  @Output()\r\n  get closedStart(): Observable<void> {\r\n    return this._animationStarted.pipe(\r\n      filter(e => e.fromState !== e.toState && e.toState === 'void'),\r\n      map(() => {})\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Event emitted when the drawer is fully opened.\r\n   * @deprecated Use `opened` instead.\r\n   * @deletion-target 6.0.0\r\n   */\r\n  @Output('open') readonly onOpen: Observable<void> = this._openedStream;\r\n\r\n  /**\r\n   * Event emitted when the drawer is fully closed.\r\n   * @deprecated Use `closed` instead.\r\n   * @deletion-target 6.0.0\r\n   */\r\n  @Output('close') readonly onClose: Observable<void> = this._closedStream;\r\n\r\n  /** Event emitted when the drawer's position changes. */\r\n  @Output('positionChanged') onPositionChanged: EventEmitter<void> = new EventEmitter<void>();\r\n\r\n  /**\r\n   * @deprecated\r\n   * @deletion-target 6.0.0\r\n   */\r\n  @Output('align-changed') onAlignChanged: EventEmitter<void> = new EventEmitter<void>();\r\n\r\n  /**\r\n   * An observable that emits when the drawer mode changes. This is used by the drawer container to\r\n   * to know when to when the mode changes so it can adapt the margins on the content.\r\n   */\r\n  readonly _modeChanged = new Subject();\r\n\r\n  get _isFocusTrapEnabled(): boolean {\r\n    // The focus trap is only enabled when the drawer is open in any mode other than side.\r\n    return this.opened && this.mode !== 'side';\r\n  }\r\n\r\n  constructor(private _elementRef: ElementRef,\r\n              private _focusTrapFactory: FocusTrapFactory,\r\n              private _focusMonitor: FocusMonitor,\r\n              private _platform: Platform,\r\n              private _ngZone: NgZone,\r\n              @Optional() @Inject(DOCUMENT) private _doc: any) {\r\n\r\n    this.openedChange.subscribe((opened: boolean) => {\r\n      if (opened) {\r\n        if (this._doc) {\r\n          this._elementFocusedBeforeDrawerWasOpened = this._doc.activeElement as HTMLElement;\r\n        }\r\n\r\n        if (this._isFocusTrapEnabled && this._focusTrap) {\r\n          this._trapFocus();\r\n        }\r\n      } else {\r\n        this._restoreFocus();\r\n      }\r\n    });\r\n\r\n    /**\r\n     * Listen to `keydown` events outside the zone so that change detection is not run every\r\n     * time a key is pressed. Instead we re-enter the zone only if the `ESC` key is pressed\r\n     * and we don't have close disabled.\r\n     */\r\n    this._ngZone.runOutsideAngular(() => {\r\n        fromEvent(this._elementRef.nativeElement, 'keydown').pipe(\r\n            filter((event: KeyboardEvent) => event.keyCode === ESCAPE && !this.disableClose)\r\n        ).subscribe((event) => this._ngZone.run(() => {\r\n            this.close();\r\n            event.stopPropagation();\r\n        }));\r\n    });\r\n  }\r\n\r\n  /** Traps focus inside the drawer. */\r\n  private _trapFocus() {\r\n    this._focusTrap.focusInitialElementWhenReady().then(hasMovedFocus => {\r\n      // If there were no focusable elements, focus the sidenav itself so the keyboard navigation\r\n      // still works. We need to check that `focus` is a function due to Universal.\r\n      if (!hasMovedFocus && typeof this._elementRef.nativeElement.focus === 'function') {\r\n        this._elementRef.nativeElement.focus();\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * If focus is currently inside the drawer, restores it to where it was before the drawer\r\n   * opened.\r\n   */\r\n  private _restoreFocus() {\r\n    const activeEl = this._doc && this._doc.activeElement;\r\n\r\n    if (activeEl && this._elementRef.nativeElement.contains(activeEl)) {\r\n      if (this._elementFocusedBeforeDrawerWasOpened instanceof HTMLElement) {\r\n        this._focusMonitor.focusVia(this._elementFocusedBeforeDrawerWasOpened, this._openedVia);\r\n      } else {\r\n        this._elementRef.nativeElement.blur();\r\n      }\r\n    }\r\n\r\n    this._elementFocusedBeforeDrawerWasOpened = null;\r\n    this._openedVia = null;\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    this._focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement);\r\n    this._focusTrap.enabled = this._isFocusTrapEnabled;\r\n  }\r\n\r\n  ngAfterContentChecked() {\r\n    // Enable the animations after the lifecycle hooks have run, in order to avoid animating\r\n    // drawers that are open by default. When we're on the server, we shouldn't enable the\r\n    // animations, because we don't want the drawer to animate the first time the user sees\r\n    // the page.\r\n    if (this._platform.isBrowser) {\r\n      this._enableAnimations = true;\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this._focusTrap) {\r\n      this._focusTrap.destroy();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Whether the drawer is opened. We overload this because we trigger an event when it\r\n   * starts or end.\r\n   */\r\n  @Input()\r\n  get opened(): boolean { return this._opened; }\r\n  set opened(value: boolean) { this.toggle(coerceBooleanProperty(value)); }\r\n  private _opened: boolean = false;\r\n\r\n  /**\r\n   * Open the drawer.\r\n   * @param openedVia Whether the drawer was opened by a key press, mouse click or programmatically.\r\n   * Used for focus management after the sidenav is closed.\r\n   */\r\n  open(openedVia?: FocusOrigin): Promise<void> {\r\n    return this.toggle(true, openedVia);\r\n  }\r\n\r\n  /** Close the drawer. */\r\n  close(): Promise<void> {\r\n    return this.toggle(false);\r\n  }\r\n\r\n  /**\r\n   * Toggle this drawer.\r\n   * @param isOpen Whether the drawer should be open.\r\n   * @param openedVia Whether the drawer was opened by a key press, mouse click or programmatically.\r\n   * Used for focus management after the sidenav is closed.\r\n   */\r\n  toggle(isOpen: boolean = !this.opened, openedVia: FocusOrigin = 'program'):\r\n    Promise<void> {\r\n\r\n    this._opened = isOpen;\r\n\r\n    if (isOpen) {\r\n      this._animationState = this._enableAnimations ? 'open' : 'open-instant';\r\n      this._openedVia = openedVia;\r\n    } else {\r\n      this._animationState = 'void';\r\n      this._restoreFocus();\r\n    }\r\n\r\n    if (this._focusTrap) {\r\n      this._focusTrap.enabled = this._isFocusTrapEnabled;\r\n    }\r\n\r\n    // TODO(crisbeto): This promise is here for backwards-compatibility.\r\n    // It should be removed next time we do breaking changes in the drawer.\r\n    // @deletion-target 6.0.0\r\n    return new Promise<any>(resolve => {\r\n      this.openedChange.pipe(take(1)).subscribe(open => {\r\n        resolve(new MatDrawerToggleResult(open ? 'open' : 'close', true));\r\n      });\r\n    });\r\n  }\r\n\r\n  _onAnimationStart(event: AnimationEvent) {\r\n    this._animationStarted.emit(event);\r\n  }\r\n\r\n  _onAnimationEnd(event: AnimationEvent) {\r\n    const {fromState, toState} = event;\r\n\r\n    if ((toState.indexOf('open') === 0 && fromState === 'void') ||\r\n        (toState === 'void' && fromState.indexOf('open') === 0)) {\r\n      this.openedChange.emit(this._opened);\r\n    }\r\n  }\r\n\r\n  get _width(): number {\r\n    return this._elementRef.nativeElement ? (this._elementRef.nativeElement.offsetWidth || 0) : 0;\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * `<mat-drawer-container>` component.\r\n *\r\n * This is the parent component to one or two `<mat-drawer>`s that validates the state internally\r\n * and coordinates the backdrop and content styling.\r\n */\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'mat-drawer-container',\r\n  exportAs: 'matDrawerContainer',\r\n  templateUrl: 'drawer-container.html',\r\n  styleUrls: ['drawer.css'],\r\n  host: {\r\n    'class': 'mat-drawer-container',\r\n  },\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  encapsulation: ViewEncapsulation.None,\r\n  preserveWhitespaces: false,\r\n})\r\nexport class MatDrawerContainer implements AfterContentInit, OnDestroy {\r\n  @ContentChildren(MatDrawer) _drawers: QueryList<MatDrawer>;\r\n  @ContentChild(MatDrawerContent) _content: MatDrawerContent;\r\n\r\n  /** The drawer child with the `start` position. */\r\n  get start(): MatDrawer | null { return this._start; }\r\n\r\n  /** The drawer child with the `end` position. */\r\n  get end(): MatDrawer | null { return this._end; }\r\n\r\n  /**\r\n   * Whether to automatically resize the container whenever\r\n   * the size of any of its drawers changes.\r\n   *\r\n   * **Use at your own risk!** Enabling this option can cause layout thrashing by measuring\r\n   * the drawers on every change detection cycle. Can be configured globally via the\r\n   * `MAT_DRAWER_DEFAULT_AUTOSIZE` token.\r\n   */\r\n  @Input()\r\n  get autosize(): boolean { return this._autosize; }\r\n  set autosize(value: boolean) { this._autosize = coerceBooleanProperty(value); }\r\n  private _autosize: boolean;\r\n\r\n  /** Event emitted when the drawer backdrop is clicked. */\r\n  @Output() readonly backdropClick: EventEmitter<void> = new EventEmitter<void>();\r\n\r\n  /** The drawer at the start/end position, independent of direction. */\r\n  private _start: MatDrawer | null;\r\n  private _end: MatDrawer | null;\r\n\r\n  /**\r\n   * The drawer at the left/right. When direction changes, these will change as well.\r\n   * They're used as aliases for the above to set the left/right style properly.\r\n   * In LTR, _left == _start and _right == _end.\r\n   * In RTL, _left == _end and _right == _start.\r\n   */\r\n  private _left: MatDrawer | null;\r\n  private _right: MatDrawer | null;\r\n\r\n  /** Emits when the component is destroyed. */\r\n  private readonly _destroyed = new Subject<void>();\r\n\r\n  /** Emits on every ngDoCheck. Used for debouncing reflows. */\r\n  private readonly _doCheckSubject = new Subject<void>();\r\n\r\n  readonly _contentMargins = new Subject<{left: number|null, right: number|null}>();\r\n\r\n  /** Reference to the CdkScrollable instance that wraps the scrollable content. */\r\n  @ViewChild(CdkScrollable) scrollable: CdkScrollable;\r\n\r\n  constructor(@Optional() private _dir: Directionality,\r\n              private _element: ElementRef,\r\n              private _ngZone: NgZone,\r\n              private _changeDetectorRef: ChangeDetectorRef,\r\n              @Inject(MAT_DRAWER_DEFAULT_AUTOSIZE) defaultAutosize = false) {\r\n\r\n    // If a `Dir` directive exists up the tree, listen direction changes\r\n    // and update the left/right properties to point to the proper start/end.\r\n    if (_dir) {\r\n      _dir.change.pipe(takeUntil(this._destroyed)).subscribe(() => {\r\n        this._validateDrawers();\r\n        this._updateContentMargins();\r\n      });\r\n    }\r\n\r\n    this._autosize = defaultAutosize;\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    this._drawers.changes.pipe(startWith(null)).subscribe(() => {\r\n      this._validateDrawers();\r\n\r\n      this._drawers.forEach((drawer: MatDrawer) => {\r\n        this._watchDrawerToggle(drawer);\r\n        this._watchDrawerPosition(drawer);\r\n        this._watchDrawerMode(drawer);\r\n      });\r\n\r\n      if (!this._drawers.length ||\r\n          this._isDrawerOpen(this._start) ||\r\n          this._isDrawerOpen(this._end)) {\r\n        this._updateContentMargins();\r\n      }\r\n\r\n      this._changeDetectorRef.markForCheck();\r\n    });\r\n\r\n    this._doCheckSubject.pipe(\r\n      debounceTime(10), // Arbitrary debounce time, less than a frame at 60fps\r\n      takeUntil(this._destroyed)\r\n    ).subscribe(() => this._updateContentMargins());\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this._doCheckSubject.complete();\r\n    this._destroyed.next();\r\n    this._destroyed.complete();\r\n  }\r\n\r\n  /** Calls `open` of both start and end drawers */\r\n  open(): void {\r\n    this._drawers.forEach(drawer => drawer.open());\r\n  }\r\n\r\n  /** Calls `close` of both start and end drawers */\r\n  close(): void {\r\n    this._drawers.forEach(drawer => drawer.close());\r\n  }\r\n\r\n  ngDoCheck() {\r\n    // If users opted into autosizing, do a check every change detection cycle.\r\n    if (this._autosize && this._isPushed()) {\r\n      // Run outside the NgZone, otherwise the debouncer will throw us into an infinite loop.\r\n      this._ngZone.runOutsideAngular(() => this._doCheckSubject.next());\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Subscribes to drawer events in order to set a class on the main container element when the\r\n   * drawer is open and the backdrop is visible. This ensures any overflow on the container element\r\n   * is properly hidden.\r\n   */\r\n  private _watchDrawerToggle(drawer: MatDrawer): void {\r\n    drawer._animationStarted.pipe(\r\n      takeUntil(this._drawers.changes),\r\n      filter((event: AnimationEvent) => event.fromState !== event.toState)\r\n    )\r\n    .subscribe((event: AnimationEvent) => {\r\n      // Set the transition class on the container so that the animations occur. This should not\r\n      // be set initially because animations should only be triggered via a change in state.\r\n      if (event.toState !== 'open-instant') {\r\n        this._element.nativeElement.classList.add('mat-drawer-transition');\r\n      }\r\n\r\n      this._updateContentMargins();\r\n      this._changeDetectorRef.markForCheck();\r\n    });\r\n\r\n    if (drawer.mode !== 'side') {\r\n      drawer.openedChange.pipe(takeUntil(this._drawers.changes)).subscribe(() =>\r\n          this._setContainerClass(drawer.opened));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Subscribes to drawer onPositionChanged event in order to\r\n   * re-validate drawers when the position changes.\r\n   */\r\n  private _watchDrawerPosition(drawer: MatDrawer): void {\r\n    if (!drawer) {\r\n      return;\r\n    }\r\n    // NOTE: We need to wait for the microtask queue to be empty before validating,\r\n    // since both drawers may be swapping positions at the same time.\r\n    drawer.onPositionChanged.pipe(takeUntil(this._drawers.changes)).subscribe(() => {\r\n      this._ngZone.onMicrotaskEmpty.asObservable().pipe(take(1)).subscribe(() => {\r\n        this._validateDrawers();\r\n      });\r\n    });\r\n  }\r\n\r\n  /** Subscribes to changes in drawer mode so we can run change detection. */\r\n  private _watchDrawerMode(drawer: MatDrawer): void {\r\n    if (drawer) {\r\n      drawer._modeChanged.pipe(takeUntil(merge(this._drawers.changes, this._destroyed)))\r\n        .subscribe(() => {\r\n          this._updateContentMargins();\r\n          this._changeDetectorRef.markForCheck();\r\n        });\r\n    }\r\n  }\r\n\r\n  /** Toggles the 'mat-drawer-opened' class on the main 'mat-drawer-container' element. */\r\n  private _setContainerClass(isAdd: boolean): void {\r\n    if (isAdd) {\r\n      this._element.nativeElement.classList.add('mat-drawer-opened');\r\n    } else {\r\n      this._element.nativeElement.classList.remove('mat-drawer-opened');\r\n    }\r\n  }\r\n\r\n  /** Validate the state of the drawer children components. */\r\n  private _validateDrawers() {\r\n    this._start = this._end = null;\r\n\r\n    // Ensure that we have at most one start and one end drawer.\r\n    this._drawers.forEach(drawer => {\r\n      if (drawer.position == 'end') {\r\n        if (this._end != null) {\r\n          throwMatDuplicatedDrawerError('end');\r\n        }\r\n        this._end = drawer;\r\n      } else {\r\n        if (this._start != null) {\r\n          throwMatDuplicatedDrawerError('start');\r\n        }\r\n        this._start = drawer;\r\n      }\r\n    });\r\n\r\n    this._right = this._left = null;\r\n\r\n    // Detect if we're LTR or RTL.\r\n    if (!this._dir || this._dir.value == 'ltr') {\r\n      this._left = this._start;\r\n      this._right = this._end;\r\n    } else {\r\n      this._left = this._end;\r\n      this._right = this._start;\r\n    }\r\n  }\r\n\r\n  /** Whether the container is being pushed to the side by one of the drawers. */\r\n  private _isPushed() {\r\n    return (this._isDrawerOpen(this._start) && this._start!.mode != 'over') ||\r\n           (this._isDrawerOpen(this._end) && this._end!.mode != 'over');\r\n  }\r\n\r\n  _onBackdropClicked() {\r\n    this.backdropClick.emit();\r\n    this._closeModalDrawer();\r\n  }\r\n\r\n  _closeModalDrawer() {\r\n    // Close all open drawers where closing is not disabled and the mode is not `side`.\r\n    [this._start, this._end]\r\n      .filter(drawer => drawer && !drawer.disableClose && drawer.mode !== 'side')\r\n      .forEach(drawer => drawer!.close());\r\n  }\r\n\r\n  _isShowingBackdrop(): boolean {\r\n    return (this._isDrawerOpen(this._start) && this._start!.mode != 'side')\r\n        || (this._isDrawerOpen(this._end) && this._end!.mode != 'side');\r\n  }\r\n\r\n  private _isDrawerOpen(drawer: MatDrawer | null): boolean {\r\n    return drawer != null && drawer.opened;\r\n  }\r\n\r\n  /**\r\n   * Recalculates and updates the inline styles for the content. Note that this should be used\r\n   * sparingly, because it causes a reflow.\r\n   */\r\n  private _updateContentMargins() {\r\n    // 1. For drawers in `over` mode, they don't affect the content.\r\n    // 2. For drawers in `side` mode they should shrink the content. We do this by adding to the\r\n    //    left margin (for left drawer) or right margin (for right the drawer).\r\n    // 3. For drawers in `push` mode the should shift the content without resizing it. We do this by\r\n    //    adding to the left or right margin and simultaneously subtracting the same amount of\r\n    //    margin from the other side.\r\n\r\n    let left = 0;\r\n    let right = 0;\r\n\r\n    if (this._left && this._left.opened) {\r\n      if (this._left.mode == 'side') {\r\n        left += this._left._width;\r\n      } else if (this._left.mode == 'push') {\r\n        let width = this._left._width;\r\n        left += width;\r\n        right -= width;\r\n      }\r\n    }\r\n\r\n    if (this._right && this._right.opened) {\r\n      if (this._right.mode == 'side') {\r\n        right += this._right._width;\r\n      } else if (this._right.mode == 'push') {\r\n        let width = this._right._width;\r\n        right += width;\r\n        left -= width;\r\n      }\r\n    }\r\n\r\n    // Pull back into the NgZone since in some cases we could be outside.\r\n    this._ngZone.run(() => this._contentMargins.next({left, right}));\r\n  }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\nimport {\r\n  animate,\r\n  state,\r\n  style,\r\n  transition,\r\n  trigger,\r\n  AnimationTriggerMetadata,\r\n} from '@angular/animations';\r\n\r\n/** Animations used by the Material drawers. */\r\nexport const matDrawerAnimations: {\r\n  readonly transformDrawer: AnimationTriggerMetadata;\r\n} = {\r\n  /** Animation that slides a drawer in and out. */\r\n  transformDrawer: trigger('transform', [\r\n    state('open, open-instant', style({\r\n      transform: 'translate3d(0, 0, 0)',\r\n      visibility: 'visible',\r\n    })),\r\n    state('void', style({\r\n      visibility: 'hidden',\r\n    })),\r\n    transition('void => open-instant', animate('0ms')),\r\n    transition('void <=> open, open-instant => void',\r\n        animate('400ms cubic-bezier(0.25, 0.8, 0.25, 1)'))\r\n  ])\r\n};\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {A11yModule} from '@angular/cdk/a11y';\r\nimport {UNIQUE_SELECTION_DISPATCHER_PROVIDER} from '@angular/cdk/collections';\r\nimport {CommonModule} from '@angular/common';\r\nimport {NgModule} from '@angular/core';\r\nimport {MatCommonModule, MatRippleModule} from '@angular/material/core';\r\nimport {MatRadioButton, MatRadioGroup} from './radio';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, MatRippleModule, MatCommonModule, A11yModule],\r\n  exports: [MatRadioGroup, MatRadioButton, MatCommonModule],\r\n  providers: [UNIQUE_SELECTION_DISPATCHER_PROVIDER],\r\n  declarations: [MatRadioGroup, MatRadioButton],\r\n})\r\nexport class MatRadioModule {}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {FocusMonitor, FocusOrigin} from '@angular/cdk/a11y';\r\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\r\nimport {UniqueSelectionDispatcher} from '@angular/cdk/collections';\r\nimport {\r\n  AfterContentInit,\r\n  AfterViewInit,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ContentChildren,\r\n  Directive,\r\n  ElementRef,\r\n  EventEmitter,\r\n  forwardRef,\r\n  Input,\r\n  OnDestroy,\r\n  OnInit,\r\n  Optional,\r\n  Output,\r\n  QueryList,\r\n  ViewChild,\r\n  ViewEncapsulation,\r\n} from '@angular/core';\r\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\r\nimport {\r\n  CanColor,\r\n  CanDisable,\r\n  CanDisableRipple,\r\n  HasTabIndex,\r\n  MatRipple,\r\n  mixinColor,\r\n  mixinDisabled,\r\n  mixinDisableRipple,\r\n  mixinTabIndex,\r\n  RippleRef,\r\n} from '@angular/material/core';\r\n\r\n// Increasing integer for generating unique ids for radio components.\r\nlet nextUniqueId = 0;\r\n\r\n/**\r\n * Provider Expression that allows mat-radio-group to register as a ControlValueAccessor. This\r\n * allows it to support [(ngModel)] and ngControl.\r\n * @docs-private\r\n */\r\nexport const MAT_RADIO_GROUP_CONTROL_VALUE_ACCESSOR: any = {\r\n  provide: NG_VALUE_ACCESSOR,\r\n  useExisting: forwardRef(() => MatRadioGroup),\r\n  multi: true\r\n};\r\n\r\n/** Change event object emitted by MatRadio and MatRadioGroup. */\r\nexport class MatRadioChange {\r\n  constructor(\r\n    /** The MatRadioButton that emits the change event. */\r\n    public source: MatRadioButton,\r\n    /** The value of the MatRadioButton. */\r\n    public value: any) {}\r\n}\r\n\r\n\r\n// Boilerplate for applying mixins to MatRadioGroup.\r\n/** @docs-private */\r\nexport class MatRadioGroupBase { }\r\nexport const _MatRadioGroupMixinBase = mixinDisabled(MatRadioGroupBase);\r\n\r\n/**\r\n * A group of radio buttons. May contain one or more `<mat-radio-button>` elements.\r\n */\r\n@Directive({\r\n  selector: 'mat-radio-group',\r\n  exportAs: 'matRadioGroup',\r\n  providers: [MAT_RADIO_GROUP_CONTROL_VALUE_ACCESSOR],\r\n  host: {\r\n    'role': 'radiogroup',\r\n    'class': 'mat-radio-group',\r\n  },\r\n  inputs: ['disabled'],\r\n})\r\nexport class MatRadioGroup extends _MatRadioGroupMixinBase\r\n    implements AfterContentInit, ControlValueAccessor, CanDisable {\r\n  /**\r\n   * Selected value for group. Should equal the value of the selected radio button if there *is*\r\n   * a corresponding radio button with a matching value. If there is *not* such a corresponding\r\n   * radio button, this value persists to be applied in case a new radio button is added with a\r\n   * matching value.\r\n   */\r\n  private _value: any = null;\r\n\r\n  /** The HTML name attribute applied to radio buttons in this group. */\r\n  private _name: string = `mat-radio-group-${nextUniqueId++}`;\r\n\r\n  /** The currently selected radio button. Should match value. */\r\n  private _selected: MatRadioButton | null = null;\r\n\r\n  /** Whether the `value` has been set to its initial value. */\r\n  private _isInitialized: boolean = false;\r\n\r\n  /** Whether the labels should appear after or before the radio-buttons. Defaults to 'after' */\r\n  private _labelPosition: 'before' | 'after' = 'after';\r\n\r\n  /** Whether the radio group is disabled. */\r\n  private _disabled: boolean = false;\r\n\r\n  /** Whether the radio group is required. */\r\n  private _required: boolean = false;\r\n\r\n  /** The method to be called in order to update ngModel */\r\n  _controlValueAccessorChangeFn: (value: any) => void = () => {};\r\n\r\n  /**\r\n   * onTouch function registered via registerOnTouch (ControlValueAccessor).\r\n   * @docs-private\r\n   */\r\n  onTouched: () => any = () => {};\r\n\r\n  /**\r\n   * Event emitted when the group value changes.\r\n   * Change events are only emitted when the value changes due to user interaction with\r\n   * a radio button (the same behavior as `<input type-\"radio\">`).\r\n   */\r\n  @Output() readonly change: EventEmitter<MatRadioChange> = new EventEmitter<MatRadioChange>();\r\n\r\n  /** Child radio buttons. */\r\n  @ContentChildren(forwardRef(() => MatRadioButton), { descendants: true })\r\n  _radios: QueryList<MatRadioButton>;\r\n\r\n  /** Name of the radio button group. All radio buttons inside this group will use this name. */\r\n  @Input()\r\n  get name(): string { return this._name; }\r\n  set name(value: string) {\r\n    this._name = value;\r\n    this._updateRadioButtonNames();\r\n  }\r\n\r\n  /**\r\n   * Alignment of the radio-buttons relative to their labels. Can be 'before' or 'after'.\r\n   * @deprecated\r\n   * @deletion-target 6.0.0\r\n   */\r\n  @Input()\r\n  get align(): 'start' | 'end' {\r\n    // align refers to the checkbox relative to the label, while labelPosition refers to the\r\n    // label relative to the checkbox. As such, they are inverted.\r\n    return this.labelPosition == 'after' ? 'start' : 'end';\r\n  }\r\n  set align(v) {\r\n    this.labelPosition = (v == 'start') ? 'after' : 'before';\r\n  }\r\n\r\n\r\n  /** Whether the labels should appear after or before the radio-buttons. Defaults to 'after' */\r\n  @Input()\r\n  get labelPosition(): 'before' | 'after' {\r\n    return this._labelPosition;\r\n  }\r\n  set labelPosition(v) {\r\n    this._labelPosition = (v == 'before') ? 'before' : 'after';\r\n    this._markRadiosForCheck();\r\n  }\r\n\r\n  /** Value of the radio button. */\r\n  @Input()\r\n  get value(): any { return this._value; }\r\n  set value(newValue: any) {\r\n    if (this._value != newValue) {\r\n      // Set this before proceeding to ensure no circular loop occurs with selection.\r\n      this._value = newValue;\r\n\r\n      this._updateSelectedRadioFromValue();\r\n      this._checkSelectedRadioButton();\r\n    }\r\n  }\r\n\r\n  _checkSelectedRadioButton() {\r\n    if (this._selected && !this._selected.checked) {\r\n      this._selected.checked = true;\r\n    }\r\n  }\r\n\r\n  /** Whether the radio button is selected. */\r\n  @Input()\r\n  get selected() { return this._selected; }\r\n  set selected(selected: MatRadioButton | null) {\r\n    this._selected = selected;\r\n    this.value = selected ? selected.value : null;\r\n    this._checkSelectedRadioButton();\r\n  }\r\n\r\n  /** Whether the radio group is disabled */\r\n  @Input()\r\n  get disabled(): boolean { return this._disabled; }\r\n  set disabled(value) {\r\n    this._disabled = coerceBooleanProperty(value);\r\n    this._markRadiosForCheck();\r\n  }\r\n\r\n  /** Whether the radio group is required */\r\n  @Input()\r\n  get required(): boolean { return this._required; }\r\n  set required(value: boolean) {\r\n    this._required = coerceBooleanProperty(value);\r\n    this._markRadiosForCheck();\r\n  }\r\n\r\n  constructor(private _changeDetector: ChangeDetectorRef) {\r\n    super();\r\n  }\r\n\r\n  /**\r\n   * Initialize properties once content children are available.\r\n   * This allows us to propagate relevant attributes to associated buttons.\r\n   */\r\n  ngAfterContentInit() {\r\n    // Mark this component as initialized in AfterContentInit because the initial value can\r\n    // possibly be set by NgModel on MatRadioGroup, and it is possible that the OnInit of the\r\n    // NgModel occurs *after* the OnInit of the MatRadioGroup.\r\n    this._isInitialized = true;\r\n  }\r\n\r\n  /**\r\n   * Mark this group as being \"touched\" (for ngModel). Meant to be called by the contained\r\n   * radio buttons upon their blur.\r\n   */\r\n  _touch() {\r\n    if (this.onTouched) {\r\n      this.onTouched();\r\n    }\r\n  }\r\n\r\n  private _updateRadioButtonNames(): void {\r\n    if (this._radios) {\r\n      this._radios.forEach(radio => {\r\n        radio.name = this.name;\r\n      });\r\n    }\r\n  }\r\n\r\n  /** Updates the `selected` radio button from the internal _value state. */\r\n  private _updateSelectedRadioFromValue(): void {\r\n    // If the value already matches the selected radio, do nothing.\r\n    const isAlreadySelected = this._selected != null && this._selected.value == this._value;\r\n\r\n    if (this._radios != null && !isAlreadySelected) {\r\n      this._selected = null;\r\n      this._radios.forEach(radio => {\r\n        radio.checked = this.value == radio.value;\r\n        if (radio.checked) {\r\n          this._selected = radio;\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  /** Dispatch change event with current selection and group value. */\r\n  _emitChangeEvent(): void {\r\n    if (this._isInitialized) {\r\n      this.change.emit(new MatRadioChange(this._selected!, this._value));\r\n    }\r\n  }\r\n\r\n  _markRadiosForCheck() {\r\n    if (this._radios) {\r\n      this._radios.forEach(radio => radio._markForCheck());\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Sets the model value. Implemented as part of ControlValueAccessor.\r\n   * @param value\r\n   */\r\n  writeValue(value: any) {\r\n    this.value = value;\r\n    this._changeDetector.markForCheck();\r\n  }\r\n\r\n  /**\r\n   * Registers a callback to be triggered when the model value changes.\r\n   * Implemented as part of ControlValueAccessor.\r\n   * @param fn Callback to be registered.\r\n   */\r\n  registerOnChange(fn: (value: any) => void) {\r\n    this._controlValueAccessorChangeFn = fn;\r\n  }\r\n\r\n  /**\r\n   * Registers a callback to be triggered when the control is touched.\r\n   * Implemented as part of ControlValueAccessor.\r\n   * @param fn Callback to be registered.\r\n   */\r\n  registerOnTouched(fn: any) {\r\n    this.onTouched = fn;\r\n  }\r\n\r\n  /**\r\n   * Sets the disabled state of the control. Implemented as a part of ControlValueAccessor.\r\n   * @param isDisabled Whether the control should be disabled.\r\n   */\r\n  setDisabledState(isDisabled: boolean) {\r\n    this.disabled = isDisabled;\r\n    this._changeDetector.markForCheck();\r\n  }\r\n}\r\n\r\n// Boilerplate for applying mixins to MatRadioButton.\r\n/** @docs-private */\r\nexport class MatRadioButtonBase {\r\n  // Since the disabled property is manually defined for the MatRadioButton and isn't set up in\r\n  // the mixin base class. To be able to use the tabindex mixin, a disabled property must be\r\n  // defined to properly work.\r\n  disabled: boolean;\r\n\r\n  constructor(public _elementRef: ElementRef) {}\r\n}\r\n// As per Material design specifications the selection control radio should use the accent color\r\n// palette by default. https://material.io/guidelines/components/selection-controls.html\r\nexport const _MatRadioButtonMixinBase =\r\n    mixinColor(mixinDisableRipple(mixinTabIndex(MatRadioButtonBase)), 'accent');\r\n\r\n/**\r\n * A Material design radio-button. Typically placed inside of `<mat-radio-group>` elements.\r\n */\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'mat-radio-button',\r\n  templateUrl: 'radio.html',\r\n  styleUrls: ['radio.css'],\r\n  inputs: ['color', 'disableRipple', 'tabIndex'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  preserveWhitespaces: false,\r\n  exportAs: 'matRadioButton',\r\n  host: {\r\n    'class': 'mat-radio-button',\r\n    '[class.mat-radio-checked]': 'checked',\r\n    '[class.mat-radio-disabled]': 'disabled',\r\n    '[attr.id]': 'id',\r\n    // Note: under normal conditions focus shouldn't land on this element, however it may be\r\n    // programmatically set, for example inside of a focus trap, in this case we want to forward\r\n    // the focus to the native element.\r\n    '(focus)': '_inputElement.nativeElement.focus()',\r\n  },\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class MatRadioButton extends _MatRadioButtonMixinBase\r\n    implements OnInit, AfterViewInit, OnDestroy, CanColor, CanDisableRipple, HasTabIndex {\r\n\r\n  private _uniqueId: string = `mat-radio-${++nextUniqueId}`;\r\n\r\n  /** The unique ID for the radio button. */\r\n  @Input() id: string = this._uniqueId;\r\n\r\n  /** Analog to HTML 'name' attribute used to group radios for unique selection. */\r\n  @Input() name: string;\r\n\r\n  /** Used to set the 'aria-label' attribute on the underlying input element. */\r\n  @Input('aria-label') ariaLabel: string;\r\n\r\n  /** The 'aria-labelledby' attribute takes precedence as the element's text alternative. */\r\n  @Input('aria-labelledby') ariaLabelledby: string;\r\n\r\n  /** The 'aria-describedby' attribute is read after the element's label and field type. */\r\n  @Input('aria-describedby') ariaDescribedby: string;\r\n\r\n  /** Whether this radio button is checked. */\r\n  @Input()\r\n  get checked(): boolean { return this._checked; }\r\n  set checked(value: boolean) {\r\n    const newCheckedState = coerceBooleanProperty(value);\r\n\r\n    if (this._checked != newCheckedState) {\r\n      this._checked = newCheckedState;\r\n\r\n      if (newCheckedState && this.radioGroup && this.radioGroup.value != this.value) {\r\n        this.radioGroup.selected = this;\r\n      } else if (!newCheckedState && this.radioGroup && this.radioGroup.value == this.value) {\r\n        // When unchecking the selected radio button, update the selected radio\r\n        // property on the group.\r\n        this.radioGroup.selected = null;\r\n      }\r\n\r\n      if (newCheckedState) {\r\n        // Notify all radio buttons with the same name to un-check.\r\n        this._radioDispatcher.notify(this.id, this.name);\r\n      }\r\n      this._changeDetector.markForCheck();\r\n    }\r\n  }\r\n\r\n  /** The value of this radio button. */\r\n  @Input()\r\n  get value(): any { return this._value; }\r\n  set value(value: any) {\r\n    if (this._value != value) {\r\n      this._value = value;\r\n      if (this.radioGroup != null) {\r\n        if (!this.checked) {\r\n          // Update checked when the value changed to match the radio group's value\r\n          this.checked = this.radioGroup.value == value;\r\n        }\r\n        if (this.checked) {\r\n          this.radioGroup.selected = this;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Whether or not the radio-button should appear before or after the label.\r\n   * @deprecated\r\n   * @deletion-target 6.0.0\r\n   */\r\n  @Input()\r\n  get align(): 'start' | 'end' {\r\n    // align refers to the checkbox relative to the label, while labelPosition refers to the\r\n    // label relative to the checkbox. As such, they are inverted.\r\n    return this.labelPosition == 'after' ? 'start' : 'end';\r\n  }\r\n  set align(v) {\r\n    this.labelPosition = (v == 'start') ? 'after' : 'before';\r\n  }\r\n\r\n  private _labelPosition: 'before' | 'after';\r\n\r\n  /** Whether the label should appear after or before the radio button. Defaults to 'after' */\r\n  @Input()\r\n  get labelPosition(): 'before' | 'after' {\r\n    return this._labelPosition || (this.radioGroup && this.radioGroup.labelPosition) || 'after';\r\n  }\r\n  set labelPosition(value) {\r\n    this._labelPosition = value;\r\n  }\r\n\r\n  /** Whether the radio button is disabled. */\r\n  @Input()\r\n  get disabled(): boolean {\r\n    return this._disabled || (this.radioGroup != null && this.radioGroup.disabled);\r\n  }\r\n  set disabled(value: boolean) {\r\n    this._disabled = coerceBooleanProperty(value);\r\n  }\r\n\r\n  /** Whether the radio button is required. */\r\n  @Input()\r\n  get required(): boolean {\r\n    return this._required || (this.radioGroup && this.radioGroup.required);\r\n  }\r\n  set required(value: boolean) {\r\n    this._required = coerceBooleanProperty(value);\r\n  }\r\n\r\n  /**\r\n   * Event emitted when the checked state of this radio button changes.\r\n   * Change events are only emitted when the value changes due to user interaction with\r\n   * the radio button (the same behavior as `<input type-\"radio\">`).\r\n   */\r\n  @Output() readonly change: EventEmitter<MatRadioChange> = new EventEmitter<MatRadioChange>();\r\n\r\n  /** The parent radio group. May or may not be present. */\r\n  radioGroup: MatRadioGroup;\r\n\r\n  /** ID of the native input element inside `<mat-radio-button>` */\r\n  get inputId(): string { return `${this.id || this._uniqueId}-input`; }\r\n\r\n  /** Whether this radio is checked. */\r\n  private _checked: boolean = false;\r\n\r\n  /** Whether this radio is disabled. */\r\n  private _disabled: boolean;\r\n\r\n  /** Whether this radio is required. */\r\n  private _required: boolean;\r\n\r\n  /** Value assigned to this radio. */\r\n  private _value: any = null;\r\n\r\n  /** The child ripple instance. */\r\n  @ViewChild(MatRipple) _ripple: MatRipple;\r\n\r\n  /** Reference to the current focus ripple. */\r\n  private _focusRipple: RippleRef | null;\r\n\r\n  /** Unregister function for _radioDispatcher */\r\n  private _removeUniqueSelectionListener: () => void = () => {};\r\n\r\n  /** The native `<input type=radio>` element */\r\n  @ViewChild('input') _inputElement: ElementRef;\r\n\r\n  constructor(@Optional() radioGroup: MatRadioGroup,\r\n              elementRef: ElementRef,\r\n              private _changeDetector: ChangeDetectorRef,\r\n              private _focusMonitor: FocusMonitor,\r\n              private _radioDispatcher: UniqueSelectionDispatcher) {\r\n    super(elementRef);\r\n\r\n    // Assertions. Ideally these should be stripped out by the compiler.\r\n    // TODO(jelbourn): Assert that there's no name binding AND a parent radio group.\r\n    this.radioGroup = radioGroup;\r\n\r\n    this._removeUniqueSelectionListener =\r\n      _radioDispatcher.listen((id: string, name: string) => {\r\n        if (id != this.id && name == this.name) {\r\n          this.checked = false;\r\n        }\r\n      });\r\n  }\r\n\r\n  /** Focuses the radio button. */\r\n  focus(): void {\r\n    this._focusMonitor.focusVia(this._inputElement.nativeElement, 'keyboard');\r\n  }\r\n\r\n  /**\r\n   * Marks the radio button as needing checking for change detection.\r\n   * This method is exposed because the parent radio group will directly\r\n   * update bound properties of the radio button.\r\n   */\r\n  _markForCheck() {\r\n    // When group value changes, the button will not be notified. Use `markForCheck` to explicit\r\n    // update radio button's status\r\n    this._changeDetector.markForCheck();\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (this.radioGroup) {\r\n      // If the radio is inside a radio group, determine if it should be checked\r\n      this.checked = this.radioGroup.value === this._value;\r\n      // Copy name from parent radio group\r\n      this.name = this.radioGroup.name;\r\n    }\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this._focusMonitor\r\n      .monitor(this._inputElement.nativeElement)\r\n      .subscribe(focusOrigin => this._onInputFocusChange(focusOrigin));\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this._focusMonitor.stopMonitoring(this._inputElement.nativeElement);\r\n    this._removeUniqueSelectionListener();\r\n  }\r\n\r\n  /** Dispatch change event with current value. */\r\n  private _emitChangeEvent(): void {\r\n    this.change.emit(new MatRadioChange(this, this._value));\r\n  }\r\n\r\n  _isRippleDisabled() {\r\n    return this.disableRipple || this.disabled;\r\n  }\r\n\r\n  _onInputClick(event: Event) {\r\n    // We have to stop propagation for click events on the visual hidden input element.\r\n    // By default, when a user clicks on a label element, a generated click event will be\r\n    // dispatched on the associated input element. Since we are using a label element as our\r\n    // root container, the click event on the `radio-button` will be executed twice.\r\n    // The real click event will bubble up, and the generated click event also tries to bubble up.\r\n    // This will lead to multiple click events.\r\n    // Preventing bubbling for the second event will solve that issue.\r\n    event.stopPropagation();\r\n  }\r\n\r\n  /**\r\n   * Triggered when the radio button received a click or the input recognized any change.\r\n   * Clicking on a label element, will trigger a change event on the associated input.\r\n   */\r\n  _onInputChange(event: Event) {\r\n    // We always have to stop propagation on the change event.\r\n    // Otherwise the change event, from the input element, will bubble up and\r\n    // emit its event object to the `change` output.\r\n    event.stopPropagation();\r\n\r\n    const groupValueChanged = this.radioGroup && this.value != this.radioGroup.value;\r\n    this.checked = true;\r\n    this._emitChangeEvent();\r\n\r\n    if (this.radioGroup) {\r\n      this.radioGroup._controlValueAccessorChangeFn(this.value);\r\n      this.radioGroup._touch();\r\n      if (groupValueChanged) {\r\n        this.radioGroup._emitChangeEvent();\r\n      }\r\n    }\r\n  }\r\n\r\n  /** Function is called whenever the focus changes for the input element. */\r\n  private _onInputFocusChange(focusOrigin: FocusOrigin) {\r\n    if (!this._focusRipple && focusOrigin === 'keyboard') {\r\n      this._focusRipple = this._ripple.launch(0, 0, {persistent: true});\r\n    } else if (!focusOrigin) {\r\n      if (this.radioGroup) {\r\n        this.radioGroup._touch();\r\n      }\r\n\r\n      if (this._focusRipple) {\r\n        this._focusRipple.fadeOut();\r\n        this._focusRipple = null;\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\nimport {NgModule} from '@angular/core';\r\nimport {PlatformModule} from '@angular/cdk/platform';\r\nimport {MatCommonModule} from '@angular/material/core';\r\nimport {MatProgressSpinner, MatSpinner} from './progress-spinner';\r\n\r\n@NgModule({\r\n  imports: [MatCommonModule, PlatformModule],\r\n  exports: [\r\n    MatProgressSpinner,\r\n    MatSpinner,\r\n    MatCommonModule\r\n  ],\r\n  declarations: [\r\n    MatProgressSpinner,\r\n    MatSpinner\r\n  ],\r\n})\r\nclass MatProgressSpinnerModule {}\r\n\r\nexport {MatProgressSpinnerModule};\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {\r\n  Component,\r\n  ChangeDetectionStrategy,\r\n  Input,\r\n  ElementRef,\r\n  SimpleChanges,\r\n  OnChanges,\r\n  ViewEncapsulation,\r\n  Optional,\r\n  Inject,\r\n} from '@angular/core';\r\nimport {CanColor, mixinColor} from '@angular/material/core';\r\nimport {Platform} from '@angular/cdk/platform';\r\nimport {DOCUMENT} from '@angular/common';\r\nimport {coerceNumberProperty} from '@angular/cdk/coercion';\r\n\r\n/** Possible mode for a progress spinner. */\r\nexport type ProgressSpinnerMode = 'determinate' | 'indeterminate';\r\n\r\n/**\r\n * Base reference size of the spinner.\r\n * @docs-private\r\n */\r\nconst BASE_SIZE = 100;\r\n\r\n/**\r\n * Base reference stroke width of the spinner.\r\n * @docs-private\r\n */\r\nconst BASE_STROKE_WIDTH = 10;\r\n\r\n// Boilerplate for applying mixins to MatProgressSpinner.\r\n/** @docs-private */\r\nexport class MatProgressSpinnerBase {\r\n  constructor(public _elementRef: ElementRef) {}\r\n}\r\nexport const _MatProgressSpinnerMixinBase = mixinColor(MatProgressSpinnerBase, 'primary');\r\n\r\n// .0001 percentage difference is necessary in order to avoid unwanted animation frames\r\n// for example because the animation duration is 4 seconds, .1% accounts to 4ms\r\n// which are enough to see the flicker described in\r\n// https://github.com/angular/material2/issues/8984\r\nconst INDETERMINATE_ANIMATION_TEMPLATE = `\r\n @keyframes mat-progress-spinner-stroke-rotate-DIAMETER {\r\n    0%      { stroke-dashoffset: START_VALUE;  transform: rotate(0); }\r\n    12.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(0); }\r\n    12.5001%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(72.5deg); }\r\n    25%     { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(72.5deg); }\r\n\r\n    25.0001%   { stroke-dashoffset: START_VALUE;  transform: rotate(270deg); }\r\n    37.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(270deg); }\r\n    37.5001%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(161.5deg); }\r\n    50%     { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(161.5deg); }\r\n\r\n    50.0001%  { stroke-dashoffset: START_VALUE;  transform: rotate(180deg); }\r\n    62.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(180deg); }\r\n    62.5001%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(251.5deg); }\r\n    75%     { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(251.5deg); }\r\n\r\n    75.0001%  { stroke-dashoffset: START_VALUE;  transform: rotate(90deg); }\r\n    87.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(90deg); }\r\n    87.5001%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(341.5deg); }\r\n    100%    { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(341.5deg); }\r\n  }\r\n`;\r\n\r\n/**\r\n * `<mat-progress-spinner>` component.\r\n */\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'mat-progress-spinner',\r\n  exportAs: 'matProgressSpinner',\r\n  host: {\r\n    'role': 'progressbar',\r\n    'class': 'mat-progress-spinner',\r\n    '[style.width.px]': '_elementSize',\r\n    '[style.height.px]': '_elementSize',\r\n    '[attr.aria-valuemin]': 'mode === \"determinate\" ? 0 : null',\r\n    '[attr.aria-valuemax]': 'mode === \"determinate\" ? 100 : null',\r\n    '[attr.aria-valuenow]': 'value',\r\n    '[attr.mode]': 'mode',\r\n  },\r\n  inputs: ['color'],\r\n  templateUrl: 'progress-spinner.html',\r\n  styleUrls: ['progress-spinner.css'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  encapsulation: ViewEncapsulation.None,\r\n  preserveWhitespaces: false,\r\n})\r\nexport class MatProgressSpinner extends _MatProgressSpinnerMixinBase implements CanColor,\r\n  OnChanges {\r\n\r\n  private _value = 0;\r\n  private _strokeWidth: number;\r\n  private _fallbackAnimation = false;\r\n\r\n  /** The width and height of the host element. Will grow with stroke width. */\r\n  _elementSize = BASE_SIZE;\r\n\r\n  /** Tracks diameters of existing instances to de-dupe generated styles (default d = 100) */\r\n  private static diameters = new Set<number>([BASE_SIZE]);\r\n\r\n  /**\r\n   * Used for storing all of the generated keyframe animations.\r\n   * @dynamic\r\n   */\r\n  private static styleTag: HTMLStyleElement|null = null;\r\n\r\n  /** The diameter of the progress spinner (will set width and height of svg). */\r\n  @Input()\r\n  get diameter(): number { return this._diameter; }\r\n  set diameter(size: number) {\r\n    this._diameter = coerceNumberProperty(size);\r\n\r\n    if (!this._fallbackAnimation && !MatProgressSpinner.diameters.has(this._diameter)) {\r\n      this._attachStyleNode();\r\n    }\r\n    this._updateElementSize();\r\n  }\r\n  private _diameter = BASE_SIZE;\r\n\r\n  /** Stroke width of the progress spinner. */\r\n  @Input()\r\n  get strokeWidth(): number {\r\n    return this._strokeWidth || this.diameter / 10;\r\n  }\r\n  set strokeWidth(value: number) {\r\n    this._strokeWidth = coerceNumberProperty(value);\r\n  }\r\n\r\n\r\n  /** Mode of the progress circle */\r\n  @Input() mode: ProgressSpinnerMode = 'determinate';\r\n\r\n  /** Value of the progress circle. */\r\n  @Input()\r\n  get value(): number {\r\n    return this.mode === 'determinate' ? this._value : 0;\r\n  }\r\n  set value(newValue: number) {\r\n    this._value = Math.max(0, Math.min(100, coerceNumberProperty(newValue)));\r\n  }\r\n\r\n  constructor(public _elementRef: ElementRef,\r\n              platform: Platform,\r\n              @Optional() @Inject(DOCUMENT) private _document: any) {\r\n\r\n    super(_elementRef);\r\n    this._fallbackAnimation = platform.EDGE || platform.TRIDENT;\r\n\r\n    // On IE and Edge, we can't animate the `stroke-dashoffset`\r\n    // reliably so we fall back to a non-spec animation.\r\n    const animationClass =\r\n      `mat-progress-spinner-indeterminate${this._fallbackAnimation ? '-fallback' : ''}-animation`;\r\n\r\n    _elementRef.nativeElement.classList.add(animationClass);\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.strokeWidth || changes.diameter) {\r\n      this._updateElementSize();\r\n    }\r\n  }\r\n\r\n  /** The radius of the spinner, adjusted for stroke width. */\r\n  get _circleRadius() {\r\n    return (this.diameter - BASE_STROKE_WIDTH) / 2;\r\n  }\r\n\r\n  /** The view box of the spinner's svg element. */\r\n  get _viewBox() {\r\n    const viewBox = this._circleRadius * 2 + this.strokeWidth;\r\n    return `0 0 ${viewBox} ${viewBox}`;\r\n  }\r\n\r\n  /** The stroke circumference of the svg circle. */\r\n  get _strokeCircumference(): number {\r\n    return 2 * Math.PI * this._circleRadius;\r\n  }\r\n\r\n  /** The dash offset of the svg circle. */\r\n  get _strokeDashOffset() {\r\n    if (this.mode === 'determinate') {\r\n      return this._strokeCircumference * (100 - this._value) / 100;\r\n    }\r\n\r\n    // In fallback mode set the circle to 80% and rotate it with CSS.\r\n    if (this._fallbackAnimation && this.mode === 'indeterminate') {\r\n      return this._strokeCircumference * 0.2;\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  /** Stroke width of the circle in percent. */\r\n  get _circleStrokeWidth() {\r\n    return this.strokeWidth / this._elementSize * 100;\r\n  }\r\n\r\n  /** Dynamically generates a style tag containing the correct animation for this diameter. */\r\n  private _attachStyleNode(): void {\r\n    let styleTag = MatProgressSpinner.styleTag;\r\n\r\n    if (!styleTag) {\r\n      styleTag = this._document.createElement('style');\r\n      this._document.head.appendChild(styleTag);\r\n      MatProgressSpinner.styleTag = styleTag;\r\n    }\r\n\r\n    if (styleTag && styleTag.sheet) {\r\n      (styleTag.sheet as CSSStyleSheet).insertRule(this._getAnimationText(), 0);\r\n    }\r\n\r\n    MatProgressSpinner.diameters.add(this.diameter);\r\n  }\r\n\r\n  /** Generates animation styles adjusted for the spinner's diameter. */\r\n  private _getAnimationText(): string {\r\n    return INDETERMINATE_ANIMATION_TEMPLATE\r\n        // Animation should begin at 5% and end at 80%\r\n        .replace(/START_VALUE/g, `${0.95 * this._strokeCircumference}`)\r\n        .replace(/END_VALUE/g, `${0.2 * this._strokeCircumference}`)\r\n        .replace(/DIAMETER/g, `${this.diameter}`);\r\n  }\r\n\r\n  /** Updates the spinner element size based on its diameter. */\r\n  private _updateElementSize() {\r\n    this._elementSize = this._diameter + Math.max(this.strokeWidth - BASE_STROKE_WIDTH, 0);\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * `<mat-spinner>` component.\r\n *\r\n * This is a component definition to be used as a convenience reference to create an\r\n * indeterminate `<mat-progress-spinner>` instance.\r\n */\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'mat-spinner',\r\n  host: {\r\n    'role': 'progressbar',\r\n    'mode': 'indeterminate',\r\n    'class': 'mat-spinner mat-progress-spinner',\r\n    '[style.width.px]': '_elementSize',\r\n    '[style.height.px]': '_elementSize',\r\n  },\r\n  inputs: ['color'],\r\n  templateUrl: 'progress-spinner.html',\r\n  styleUrls: ['progress-spinner.css'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  encapsulation: ViewEncapsulation.None,\r\n  preserveWhitespaces: false,\r\n})\r\nexport class MatSpinner extends MatProgressSpinner {\r\n  constructor(elementRef: ElementRef, platform: Platform,\r\n              @Optional() @Inject(DOCUMENT) document: any) {\r\n    super(elementRef, platform, document);\r\n    this.mode = 'indeterminate';\r\n  }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {MatCommonModule} from '@angular/material/core';\r\nimport {MatProgressBar} from './progress-bar';\r\n\r\n\r\n@NgModule({\r\n  imports: [CommonModule, MatCommonModule],\r\n  exports: [MatProgressBar, MatCommonModule],\r\n  declarations: [MatProgressBar],\r\n})\r\nexport class MatProgressBarModule {}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\nimport {\r\n  Component,\r\n  ChangeDetectionStrategy,\r\n  ElementRef,\r\n  Input,\r\n  ViewEncapsulation\r\n} from '@angular/core';\r\nimport {CanColor, mixinColor} from '@angular/material/core';\r\n\r\n// TODO(josephperrott): Benchpress tests.\r\n// TODO(josephperrott): Add ARIA attributes for progress bar \"for\".\r\n\r\n// Boilerplate for applying mixins to MatProgressBar.\r\n/** @docs-private */\r\nexport class MatProgressBarBase {\r\n  constructor(public _elementRef: ElementRef) { }\r\n}\r\n\r\nexport const _MatProgressBarMixinBase = mixinColor(MatProgressBarBase, 'primary');\r\n\r\n/** Counter used to generate unique IDs for progress bars. */\r\nlet progressbarId = 0;\r\n\r\n/**\r\n * `<mat-progress-bar>` component.\r\n */\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'mat-progress-bar',\r\n  exportAs: 'matProgressBar',\r\n  host: {\r\n    'role': 'progressbar',\r\n    'aria-valuemin': '0',\r\n    'aria-valuemax': '100',\r\n    '[attr.aria-valuenow]': 'value',\r\n    '[attr.mode]': 'mode',\r\n    'class': 'mat-progress-bar',\r\n  },\r\n  inputs: ['color'],\r\n  templateUrl: 'progress-bar.html',\r\n  styleUrls: ['progress-bar.css'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  encapsulation: ViewEncapsulation.None,\r\n  preserveWhitespaces: false,\r\n})\r\nexport class MatProgressBar extends _MatProgressBarMixinBase implements CanColor {\r\n\r\n  constructor(public _elementRef: ElementRef) {\r\n    super(_elementRef);\r\n  }\r\n\r\n  /** Value of the progress bar. Defaults to zero. Mirrored to aria-valuenow. */\r\n  @Input()\r\n  get value(): number { return this._value; }\r\n  set value(v: number) { this._value = clamp(v || 0); }\r\n  private _value: number = 0;\r\n\r\n  /** Buffer value of the progress bar. Defaults to zero. */\r\n  @Input()\r\n  get bufferValue(): number { return this._bufferValue; }\r\n  set bufferValue(v: number) { this._bufferValue = clamp(v || 0); }\r\n  private _bufferValue: number = 0;\r\n\r\n  /**\r\n   * Mode of the progress bar.\r\n   *\r\n   * Input must be one of these values: determinate, indeterminate, buffer, query, defaults to\r\n   * 'determinate'.\r\n   * Mirrored to mode attribute.\r\n   */\r\n  @Input() mode: 'determinate' | 'indeterminate' | 'buffer' | 'query' = 'determinate';\r\n\r\n  /** The id of the progress bar. */\r\n  progressbarId = `mat-progress-bar-${progressbarId++}`;\r\n\r\n  /** Gets the current transform value for the progress bar's primary indicator. */\r\n  _primaryTransform() {\r\n    const scale = this.value / 100;\r\n    return {transform: `scaleX(${scale})`};\r\n  }\r\n\r\n  /**\r\n   * Gets the current transform value for the progress bar's buffer indicator. Only used if the\r\n   * progress mode is set to buffer, otherwise returns an undefined, causing no transformation.\r\n   */\r\n  _bufferTransform() {\r\n    if (this.mode === 'buffer') {\r\n      const scale = this.bufferValue / 100;\r\n      return {transform: `scaleX(${scale})`};\r\n    }\r\n  }\r\n}\r\n\r\n/** Clamps a value to be between two numbers, by default 0 and 100. */\r\nfunction clamp(v: number, min = 0, max = 100) {\r\n  return Math.max(min, Math.min(max, v));\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {CommonModule} from '@angular/common';\r\nimport {NgModule} from '@angular/core';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport {MatTooltipModule} from '@angular/material/tooltip';\r\nimport {MatPaginator} from './paginator';\r\nimport {MAT_PAGINATOR_INTL_PROVIDER} from './paginator-intl';\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    MatButtonModule,\r\n    MatSelectModule,\r\n    MatTooltipModule,\r\n  ],\r\n  exports: [MatPaginator],\r\n  declarations: [MatPaginator],\r\n  providers: [MAT_PAGINATOR_INTL_PROVIDER],\r\n})\r\nexport class MatPaginatorModule {}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {coerceNumberProperty, coerceBooleanProperty} from '@angular/cdk/coercion';\r\nimport {\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output,\r\n  ViewEncapsulation,\r\n} from '@angular/core';\r\nimport {Subscription} from 'rxjs/Subscription';\r\nimport {MatPaginatorIntl} from './paginator-intl';\r\n\r\n/** The default page size if there is no page size and there are no provided page size options. */\r\nconst DEFAULT_PAGE_SIZE = 50;\r\n\r\n/**\r\n * Change event object that is emitted when the user selects a\r\n * different page size or navigates to another page.\r\n */\r\nexport class PageEvent {\r\n  /** The current page index. */\r\n  pageIndex: number;\r\n\r\n  /** The current page size */\r\n  pageSize: number;\r\n\r\n  /** The current total number of items being paged */\r\n  length: number;\r\n}\r\n\r\n/**\r\n * Component to provide navigation between paged information. Displays the size of the current\r\n * page, user-selectable options to change that size, what items are being shown, and\r\n * navigational button to go to the previous or next page.\r\n */\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'mat-paginator',\r\n  exportAs: 'matPaginator',\r\n  templateUrl: 'paginator.html',\r\n  styleUrls: ['paginator.css'],\r\n  host: {\r\n    'class': 'mat-paginator',\r\n  },\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  encapsulation: ViewEncapsulation.None,\r\n  preserveWhitespaces: false,\r\n})\r\nexport class MatPaginator implements OnInit, OnDestroy {\r\n  private _initialized: boolean;\r\n  private _intlChanges: Subscription;\r\n\r\n  /** The zero-based page index of the displayed list of items. Defaulted to 0. */\r\n  @Input()\r\n  get pageIndex(): number { return this._pageIndex; }\r\n  set pageIndex(value: number) {\r\n    this._pageIndex = coerceNumberProperty(value);\r\n    this._changeDetectorRef.markForCheck();\r\n  }\r\n  _pageIndex: number = 0;\r\n\r\n  /** The length of the total number of items that are being paginated. Defaulted to 0. */\r\n  @Input()\r\n  get length(): number { return this._length; }\r\n  set length(value: number) {\r\n    this._length = coerceNumberProperty(value);\r\n    this._changeDetectorRef.markForCheck();\r\n  }\r\n  _length: number = 0;\r\n\r\n  /** Number of items to display on a page. By default set to 50. */\r\n  @Input()\r\n  get pageSize(): number { return this._pageSize; }\r\n  set pageSize(value: number) {\r\n    this._pageSize = coerceNumberProperty(value);\r\n    this._updateDisplayedPageSizeOptions();\r\n  }\r\n  private _pageSize: number;\r\n\r\n  /** The set of provided page size options to display to the user. */\r\n  @Input()\r\n  get pageSizeOptions(): number[] { return this._pageSizeOptions; }\r\n  set pageSizeOptions(value: number[]) {\r\n    this._pageSizeOptions = (value || []).map(p => coerceNumberProperty(p));\r\n    this._updateDisplayedPageSizeOptions();\r\n  }\r\n  private _pageSizeOptions: number[] = [];\r\n\r\n  /** Whether to hide the page size selection UI from the user. */\r\n  @Input()\r\n  get hidePageSize(): boolean { return this._hidePageSize; }\r\n  set hidePageSize(value: boolean) {\r\n    this._hidePageSize = coerceBooleanProperty(value);\r\n  }\r\n  private _hidePageSize = false;\r\n\r\n\r\n  /** Whether to show the first/last buttons UI to the user. */\r\n  @Input()\r\n  get showFirstLastButtons(): boolean { return this._showFirstLastButtons; }\r\n  set showFirstLastButtons(value: boolean) {\r\n    this._showFirstLastButtons = coerceBooleanProperty(value);\r\n  }\r\n  private _showFirstLastButtons = false;\r\n\r\n  /** Event emitted when the paginator changes the page size or page index. */\r\n  @Output() readonly page: EventEmitter<PageEvent> = new EventEmitter<PageEvent>();\r\n\r\n  /** Displayed set of page size options. Will be sorted and include current page size. */\r\n  _displayedPageSizeOptions: number[];\r\n\r\n  constructor(public _intl: MatPaginatorIntl,\r\n              private _changeDetectorRef: ChangeDetectorRef) {\r\n    this._intlChanges = _intl.changes.subscribe(() => this._changeDetectorRef.markForCheck());\r\n  }\r\n\r\n  ngOnInit() {\r\n    this._initialized = true;\r\n    this._updateDisplayedPageSizeOptions();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this._intlChanges.unsubscribe();\r\n  }\r\n\r\n  /** Advances to the next page if it exists. */\r\n  nextPage(): void {\r\n    if (!this.hasNextPage()) { return; }\r\n    this.pageIndex++;\r\n    this._emitPageEvent();\r\n  }\r\n\r\n  /** Move back to the previous page if it exists. */\r\n  previousPage(): void {\r\n    if (!this.hasPreviousPage()) { return; }\r\n    this.pageIndex--;\r\n    this._emitPageEvent();\r\n  }\r\n\r\n  /** Move to the first page if not already there. */\r\n  firstPage(): void {\r\n    // hasPreviousPage being false implies at the start\r\n    if (!this.hasPreviousPage()) { return; }\r\n    this.pageIndex = 0;\r\n    this._emitPageEvent();\r\n  }\r\n\r\n  /** Move to the last page if not already there. */\r\n  lastPage(): void {\r\n    // hasNextPage being false implies at the end\r\n    if (!this.hasNextPage()) { return; }\r\n    this.pageIndex = this.getNumberOfPages();\r\n    this._emitPageEvent();\r\n  }\r\n\r\n  /** Whether there is a previous page. */\r\n  hasPreviousPage(): boolean {\r\n    return this.pageIndex >= 1 && this.pageSize != 0;\r\n  }\r\n\r\n  /** Whether there is a next page. */\r\n  hasNextPage(): boolean {\r\n    const numberOfPages = this.getNumberOfPages();\r\n    return this.pageIndex < numberOfPages && this.pageSize != 0;\r\n  }\r\n\r\n  /** Calculate the number of pages */\r\n  getNumberOfPages(): number {\r\n    return Math.ceil(this.length / this.pageSize) - 1;\r\n  }\r\n\r\n\r\n  /**\r\n   * Changes the page size so that the first item displayed on the page will still be\r\n   * displayed using the new page size.\r\n   *\r\n   * For example, if the page size is 10 and on the second page (items indexed 10-19) then\r\n   * switching so that the page size is 5 will set the third page as the current page so\r\n   * that the 10th item will still be displayed.\r\n   */\r\n  _changePageSize(pageSize: number) {\r\n    // Current page needs to be updated to reflect the new page size. Navigate to the page\r\n    // containing the previous page's first item.\r\n    const startIndex = this.pageIndex * this.pageSize;\r\n    this.pageIndex = Math.floor(startIndex / pageSize) || 0;\r\n\r\n    this.pageSize = pageSize;\r\n    this._emitPageEvent();\r\n  }\r\n\r\n  /**\r\n   * Updates the list of page size options to display to the user. Includes making sure that\r\n   * the page size is an option and that the list is sorted.\r\n   */\r\n  private _updateDisplayedPageSizeOptions() {\r\n    if (!this._initialized) { return; }\r\n\r\n    // If no page size is provided, use the first page size option or the default page size.\r\n    if (!this.pageSize) {\r\n      this._pageSize = this.pageSizeOptions.length != 0 ?\r\n          this.pageSizeOptions[0] :\r\n          DEFAULT_PAGE_SIZE;\r\n    }\r\n\r\n    this._displayedPageSizeOptions = this.pageSizeOptions.slice();\r\n    if (this._displayedPageSizeOptions.indexOf(this.pageSize) == -1) {\r\n      this._displayedPageSizeOptions.push(this.pageSize);\r\n    }\r\n\r\n    // Sort the numbers using a number-specific sort function.\r\n    this._displayedPageSizeOptions.sort((a, b) => a - b);\r\n\r\n    this._changeDetectorRef.markForCheck();\r\n  }\r\n\r\n  /** Emits an event notifying that a change of the paginator's properties has been triggered. */\r\n  private _emitPageEvent() {\r\n    this.page.emit({\r\n      pageIndex: this.pageIndex,\r\n      pageSize: this.pageSize,\r\n      length: this.length\r\n    });\r\n  }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {Injectable, SkipSelf, Optional } from '@angular/core';\r\nimport {Subject} from 'rxjs/Subject';\r\n\r\n/**\r\n * To modify the labels and text displayed, create a new instance of MatPaginatorIntl and\r\n * include it in a custom provider\r\n */\r\n@Injectable()\r\nexport class MatPaginatorIntl {\r\n  /**\r\n   * Stream that emits whenever the labels here are changed. Use this to notify\r\n   * components if the labels have changed after initialization.\r\n   */\r\n  readonly changes: Subject<void> = new Subject<void>();\r\n\r\n  /** A label for the page size selector. */\r\n  itemsPerPageLabel: string = 'Items per page:';\r\n\r\n  /** A label for the button that increments the current page. */\r\n  nextPageLabel: string = 'Next page';\r\n\r\n  /** A label for the button that decrements the current page. */\r\n  previousPageLabel: string = 'Previous page';\r\n\r\n  /** A label for the button that moves to the first page. */\r\n  firstPageLabel: string = 'First page';\r\n\r\n  /** A label for the button that moves to the last page. */\r\n  lastPageLabel: string = 'Last page';\r\n\r\n  /** A label for the range of items within the current page and the length of the whole list. */\r\n  getRangeLabel = (page: number, pageSize: number, length: number) => {\r\n    if (length == 0 || pageSize == 0) { return `0 of ${length}`; }\r\n\r\n    length = Math.max(length, 0);\r\n\r\n    const startIndex = page * pageSize;\r\n\r\n    // If the start index exceeds the list length, do not try and fix the end index to the end.\r\n    const endIndex = startIndex < length ?\r\n        Math.min(startIndex + pageSize, length) :\r\n        startIndex + pageSize;\r\n\r\n    return `${startIndex + 1} - ${endIndex} of ${length}`;\r\n  }\r\n}\r\n\r\n/** @docs-private */\r\nexport function MAT_PAGINATOR_INTL_PROVIDER_FACTORY(parentIntl: MatPaginatorIntl) {\r\n  return parentIntl || new MatPaginatorIntl();\r\n}\r\n\r\n/** @docs-private */\r\nexport const MAT_PAGINATOR_INTL_PROVIDER = {\r\n  // If there is already an MatPaginatorIntl available, use that. Otherwise, provide a new one.\r\n  provide: MatPaginatorIntl,\r\n  deps: [[new Optional(), new SkipSelf(), MatPaginatorIntl]],\r\n  useFactory: MAT_PAGINATOR_INTL_PROVIDER_FACTORY\r\n};\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {A11yModule, ARIA_DESCRIBER_PROVIDER} from '@angular/cdk/a11y';\r\nimport {OverlayModule} from '@angular/cdk/overlay';\r\nimport {PlatformModule} from '@angular/cdk/platform';\r\nimport {CommonModule} from '@angular/common';\r\nimport {NgModule} from '@angular/core';\r\nimport {MatCommonModule} from '@angular/material/core';\r\nimport {LayoutModule} from '@angular/cdk/layout';\r\nimport {\r\n  MAT_TOOLTIP_SCROLL_STRATEGY_PROVIDER,\r\n  MAT_TOOLTIP_DEFAULT_OPTIONS,\r\n  MatTooltip,\r\n  TooltipComponent,\r\n} from './tooltip';\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    OverlayModule,\r\n    MatCommonModule,\r\n    PlatformModule,\r\n    A11yModule,\r\n    LayoutModule,\r\n  ],\r\n  exports: [MatTooltip, TooltipComponent, MatCommonModule],\r\n  declarations: [MatTooltip, TooltipComponent],\r\n  entryComponents: [TooltipComponent],\r\n  providers: [\r\n    MAT_TOOLTIP_SCROLL_STRATEGY_PROVIDER,\r\n    ARIA_DESCRIBER_PROVIDER,\r\n    {\r\n      provide: MAT_TOOLTIP_DEFAULT_OPTIONS,\r\n      useValue: {\r\n        showDelay: 0,\r\n        hideDelay: 0,\r\n        touchendHideDelay: 1500\r\n      }\r\n    }\r\n  ],\r\n})\r\nexport class MatTooltipModule {}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\nimport {AnimationEvent} from '@angular/animations';\r\nimport {AriaDescriber, FocusMonitor} from '@angular/cdk/a11y';\r\nimport {Directionality} from '@angular/cdk/bidi';\r\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\r\nimport {ESCAPE} from '@angular/cdk/keycodes';\r\nimport {\r\n  ConnectionPositionPair,\r\n  HorizontalConnectionPos,\r\n  OriginConnectionPosition,\r\n  Overlay,\r\n  OverlayConfig,\r\n  OverlayConnectionPosition,\r\n  OverlayRef,\r\n  RepositionScrollStrategy,\r\n  ScrollStrategy,\r\n  VerticalConnectionPos,\r\n} from '@angular/cdk/overlay';\r\nimport {Platform} from '@angular/cdk/platform';\r\nimport {ComponentPortal} from '@angular/cdk/portal';\r\nimport {take} from 'rxjs/operators/take';\r\nimport {merge} from 'rxjs/observable/merge';\r\nimport {ScrollDispatcher} from '@angular/cdk/scrolling';\r\nimport {\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  Directive,\r\n  ElementRef,\r\n  Inject,\r\n  InjectionToken,\r\n  Input,\r\n  NgZone,\r\n  OnDestroy,\r\n  Optional,\r\n  ViewContainerRef,\r\n  ViewEncapsulation,\r\n} from '@angular/core';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport {Subject} from 'rxjs/Subject';\r\nimport {matTooltipAnimations} from './tooltip-animations';\r\nimport {BreakpointObserver, Breakpoints, BreakpointState} from '@angular/cdk/layout';\r\n\r\n\r\nexport type TooltipPosition = 'left' | 'right' | 'above' | 'below' | 'before' | 'after';\r\n\r\n/** Time in ms to throttle repositioning after scroll events. */\r\nexport const SCROLL_THROTTLE_MS = 20;\r\n\r\n/** CSS class that will be attached to the overlay panel. */\r\nexport const TOOLTIP_PANEL_CLASS = 'mat-tooltip-panel';\r\n\r\n/** Creates an error to be thrown if the user supplied an invalid tooltip position. */\r\nexport function getMatTooltipInvalidPositionError(position: string) {\r\n  return Error(`Tooltip position \"${position}\" is invalid.`);\r\n}\r\n\r\n/** Injection token that determines the scroll handling while a tooltip is visible. */\r\nexport const MAT_TOOLTIP_SCROLL_STRATEGY =\r\n    new InjectionToken<() => ScrollStrategy>('mat-tooltip-scroll-strategy');\r\n\r\n/** @docs-private */\r\nexport function MAT_TOOLTIP_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay: Overlay):\r\n    () => RepositionScrollStrategy {\r\n  return () => overlay.scrollStrategies.reposition({ scrollThrottle: SCROLL_THROTTLE_MS });\r\n}\r\n\r\n/** @docs-private */\r\nexport const MAT_TOOLTIP_SCROLL_STRATEGY_PROVIDER = {\r\n  provide: MAT_TOOLTIP_SCROLL_STRATEGY,\r\n  deps: [Overlay],\r\n  useFactory: MAT_TOOLTIP_SCROLL_STRATEGY_PROVIDER_FACTORY\r\n};\r\n\r\n/** Default `matTooltip` options that can be overridden. */\r\nexport interface MatTooltipDefaultOptions {\r\n  showDelay: number;\r\n  hideDelay: number;\r\n  touchendHideDelay: number;\r\n}\r\n\r\n/** Injection token to be used to override the default options for `matTooltip`. */\r\nexport const MAT_TOOLTIP_DEFAULT_OPTIONS =\r\n    new InjectionToken<MatTooltipDefaultOptions>('mat-tooltip-default-options');\r\n\r\n/**\r\n * Directive that attaches a material design tooltip to the host element. Animates the showing and\r\n * hiding of a tooltip provided position (defaults to below the element).\r\n *\r\n * https://material.google.com/components/tooltips.html\r\n */\r\n@Directive({\r\n  selector: '[matTooltip]',\r\n  exportAs: 'matTooltip',\r\n  host: {\r\n    '(longpress)': 'show()',\r\n    '(keydown)': '_handleKeydown($event)',\r\n    '(touchend)': '_handleTouchend()',\r\n  },\r\n})\r\nexport class MatTooltip implements OnDestroy {\r\n  _overlayRef: OverlayRef | null;\r\n  _tooltipInstance: TooltipComponent | null;\r\n\r\n  private _position: TooltipPosition = 'below';\r\n  private _disabled: boolean = false;\r\n  private _tooltipClass: string|string[]|Set<string>|{[key: string]: any};\r\n\r\n  /** Allows the user to define the position of the tooltip relative to the parent element */\r\n  @Input('matTooltipPosition')\r\n  get position(): TooltipPosition { return this._position; }\r\n  set position(value: TooltipPosition) {\r\n    if (value !== this._position) {\r\n      this._position = value;\r\n\r\n      // TODO(andrewjs): When the overlay's position can be dynamically changed, do not destroy\r\n      // the tooltip.\r\n      if (this._tooltipInstance) {\r\n        this._disposeTooltip();\r\n      }\r\n    }\r\n  }\r\n\r\n  /** Disables the display of the tooltip. */\r\n  @Input('matTooltipDisabled')\r\n  get disabled(): boolean { return this._disabled; }\r\n  set disabled(value) {\r\n    this._disabled = coerceBooleanProperty(value);\r\n\r\n    // If tooltip is disabled, hide immediately.\r\n    if (this._disabled) {\r\n      this.hide(0);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @deprecated\r\n   * @deletion-target 6.0.0\r\n   */\r\n  @Input('tooltip-position')\r\n  get _positionDeprecated(): TooltipPosition { return this._position; }\r\n  set _positionDeprecated(value: TooltipPosition) { this._position = value; }\r\n\r\n  /** The default delay in ms before showing the tooltip after show is called */\r\n  @Input('matTooltipShowDelay') showDelay =\r\n      this._defaultOptions ? this._defaultOptions.showDelay : 0;\r\n\r\n  /** The default delay in ms before hiding the tooltip after hide is called */\r\n  @Input('matTooltipHideDelay') hideDelay =\r\n      this._defaultOptions ? this._defaultOptions.hideDelay : 0;\r\n\r\n  private _message = '';\r\n\r\n  /** The message to be displayed in the tooltip */\r\n  @Input('matTooltip')\r\n  get message() { return this._message; }\r\n  set message(value: string) {\r\n    this._ariaDescriber.removeDescription(this._elementRef.nativeElement, this._message);\r\n\r\n    // If the message is not a string (e.g. number), convert it to a string and trim it.\r\n    this._message = value != null ? `${value}`.trim() : '';\r\n\r\n    if (!this._message && this._isTooltipVisible()) {\r\n      this.hide(0);\r\n    } else {\r\n      this._updateTooltipMessage();\r\n      this._ariaDescriber.describe(this._elementRef.nativeElement, this.message);\r\n    }\r\n  }\r\n\r\n  /** Classes to be passed to the tooltip. Supports the same syntax as `ngClass`. */\r\n  @Input('matTooltipClass')\r\n  get tooltipClass() { return this._tooltipClass; }\r\n  set tooltipClass(value: string|string[]|Set<string>|{[key: string]: any}) {\r\n    this._tooltipClass = value;\r\n    if (this._tooltipInstance) {\r\n      this._setTooltipClass(this._tooltipClass);\r\n    }\r\n  }\r\n\r\n  private _manualListeners = new Map<string, Function>();\r\n\r\n  constructor(\r\n    private _overlay: Overlay,\r\n    private _elementRef: ElementRef,\r\n    private _scrollDispatcher: ScrollDispatcher,\r\n    private _viewContainerRef: ViewContainerRef,\r\n    private _ngZone: NgZone,\r\n    private _platform: Platform,\r\n    private _ariaDescriber: AriaDescriber,\r\n    private _focusMonitor: FocusMonitor,\r\n    @Inject(MAT_TOOLTIP_SCROLL_STRATEGY) private _scrollStrategy,\r\n    @Optional() private _dir: Directionality,\r\n    @Optional() @Inject(MAT_TOOLTIP_DEFAULT_OPTIONS)\r\n      private _defaultOptions?: MatTooltipDefaultOptions) {\r\n\r\n    // TODO(crisbeto): make the `_defaultOptions` a required param next time we do breaking changes.\r\n    // @deletion-target 6.0.0\r\n\r\n    const element: HTMLElement = _elementRef.nativeElement;\r\n\r\n    // The mouse events shouldn't be bound on iOS devices, because\r\n    // they can prevent the first tap from firing its click event.\r\n    if (!_platform.IOS) {\r\n      this._manualListeners.set('mouseenter', () => this.show());\r\n      this._manualListeners.set('mouseleave', () => this.hide());\r\n\r\n      this._manualListeners\r\n        .forEach((listener, event) => _elementRef.nativeElement.addEventListener(event, listener));\r\n    } else if (element.nodeName === 'INPUT' || element.nodeName === 'TEXTAREA') {\r\n      // When we bind a gesture event on an element (in this case `longpress`), HammerJS\r\n      // will add some inline styles by default, including `user-select: none`. This is\r\n      // problematic on iOS, because it will prevent users from typing in inputs. If\r\n      // we're on iOS and the tooltip is attached on an input or textarea, we clear\r\n      // the `user-select` to avoid these issues.\r\n      element.style.webkitUserSelect = element.style.userSelect = '';\r\n    }\r\n\r\n    _focusMonitor.monitor(element).subscribe(origin => {\r\n      // Note that the focus monitor runs outside the Angular zone.\r\n      if (!origin) {\r\n        _ngZone.run(() => this.hide(0));\r\n      } else if (origin !== 'program') {\r\n        _ngZone.run(() => this.show());\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Dispose the tooltip when destroyed.\r\n   */\r\n  ngOnDestroy() {\r\n    if (this._tooltipInstance) {\r\n      this._disposeTooltip();\r\n    }\r\n\r\n    // Clean up the event listeners set in the constructor\r\n    if (!this._platform.IOS) {\r\n      this._manualListeners.forEach((listener, event) => {\r\n        this._elementRef.nativeElement.removeEventListener(event, listener);\r\n      });\r\n\r\n      this._manualListeners.clear();\r\n    }\r\n\r\n    this._ariaDescriber.removeDescription(this._elementRef.nativeElement, this.message);\r\n    this._focusMonitor.stopMonitoring(this._elementRef.nativeElement);\r\n  }\r\n\r\n  /** Shows the tooltip after the delay in ms, defaults to tooltip-delay-show or 0ms if no input */\r\n  show(delay: number = this.showDelay): void {\r\n    if (this.disabled || !this.message) { return; }\r\n\r\n    if (!this._tooltipInstance) {\r\n      this._createTooltip();\r\n    }\r\n\r\n    this._setTooltipClass(this._tooltipClass);\r\n    this._updateTooltipMessage();\r\n    this._tooltipInstance!.show(this._position, delay);\r\n  }\r\n\r\n  /** Hides the tooltip after the delay in ms, defaults to tooltip-delay-hide or 0ms if no input */\r\n  hide(delay: number = this.hideDelay): void {\r\n    if (this._tooltipInstance) {\r\n      this._tooltipInstance.hide(delay);\r\n    }\r\n  }\r\n\r\n  /** Shows/hides the tooltip */\r\n  toggle(): void {\r\n    this._isTooltipVisible() ? this.hide() : this.show();\r\n  }\r\n\r\n  /** Returns true if the tooltip is currently visible to the user */\r\n  _isTooltipVisible(): boolean {\r\n    return !!this._tooltipInstance && this._tooltipInstance.isVisible();\r\n  }\r\n\r\n  /** Handles the keydown events on the host element. */\r\n  _handleKeydown(e: KeyboardEvent) {\r\n    if (this._isTooltipVisible() && e.keyCode === ESCAPE) {\r\n      e.stopPropagation();\r\n      this.hide(0);\r\n    }\r\n  }\r\n\r\n  /** Handles the touchend events on the host element. */\r\n  _handleTouchend() {\r\n    this.hide(this._defaultOptions ? this._defaultOptions.touchendHideDelay : 1500);\r\n  }\r\n\r\n  /** Create the tooltip to display */\r\n  private _createTooltip(): void {\r\n    const overlayRef = this._createOverlay();\r\n    const portal = new ComponentPortal(TooltipComponent, this._viewContainerRef);\r\n\r\n    this._tooltipInstance = overlayRef.attach(portal).instance;\r\n\r\n    // Dispose of the tooltip when the overlay is detached.\r\n    merge(this._tooltipInstance!.afterHidden(), overlayRef.detachments()).subscribe(() => {\r\n      // Check first if the tooltip has already been removed through this components destroy.\r\n      if (this._tooltipInstance) {\r\n        this._disposeTooltip();\r\n      }\r\n    });\r\n  }\r\n\r\n  /** Create the overlay config and position strategy */\r\n  private _createOverlay(): OverlayRef {\r\n    const origin = this._getOrigin();\r\n    const overlay = this._getOverlayPosition();\r\n\r\n    // Create connected position strategy that listens for scroll events to reposition.\r\n    const strategy = this._overlay\r\n      .position()\r\n      .connectedTo(this._elementRef, origin.main, overlay.main)\r\n      .withFallbackPosition(origin.fallback, overlay.fallback);\r\n\r\n    const scrollableAncestors = this._scrollDispatcher\r\n      .getAncestorScrollContainers(this._elementRef);\r\n\r\n    strategy.withScrollableContainers(scrollableAncestors);\r\n\r\n    strategy.onPositionChange.subscribe(change => {\r\n      if (this._tooltipInstance) {\r\n        if (change.scrollableViewProperties.isOverlayClipped && this._tooltipInstance.isVisible()) {\r\n          // After position changes occur and the overlay is clipped by\r\n          // a parent scrollable then close the tooltip.\r\n          this._ngZone.run(() => this.hide(0));\r\n        } else {\r\n          // Otherwise recalculate the origin based on the new position.\r\n          this._tooltipInstance._setTransformOrigin(change.connectionPair);\r\n        }\r\n      }\r\n    });\r\n\r\n    const config = new OverlayConfig({\r\n      direction: this._dir ? this._dir.value : 'ltr',\r\n      positionStrategy: strategy,\r\n      panelClass: TOOLTIP_PANEL_CLASS,\r\n      scrollStrategy: this._scrollStrategy()\r\n    });\r\n\r\n    this._overlayRef = this._overlay.create(config);\r\n\r\n    return this._overlayRef;\r\n  }\r\n\r\n  /** Disposes the current tooltip and the overlay it is attached to */\r\n  private _disposeTooltip(): void {\r\n    if (this._overlayRef) {\r\n      this._overlayRef.dispose();\r\n      this._overlayRef = null;\r\n    }\r\n\r\n    this._tooltipInstance = null;\r\n  }\r\n\r\n  /**\r\n   * Returns the origin position and a fallback position based on the user's position preference.\r\n   * The fallback position is the inverse of the origin (e.g. `'below' -> 'above'`).\r\n   */\r\n  _getOrigin(): {main: OriginConnectionPosition, fallback: OriginConnectionPosition} {\r\n    const isDirectionLtr = !this._dir || this._dir.value == 'ltr';\r\n    let position: OriginConnectionPosition;\r\n\r\n    if (this.position == 'above' || this.position == 'below') {\r\n      position = {originX: 'center', originY: this.position == 'above' ? 'top' : 'bottom'};\r\n    } else if (this.position == 'left' ||\r\n               this.position == 'before' && isDirectionLtr ||\r\n               this.position == 'after' && !isDirectionLtr) {\r\n      position = {originX: 'start', originY: 'center'};\r\n    } else if (this.position == 'right' ||\r\n               this.position == 'after' && isDirectionLtr ||\r\n               this.position == 'before' && !isDirectionLtr) {\r\n      position = {originX: 'end', originY: 'center'};\r\n    } else {\r\n      throw getMatTooltipInvalidPositionError(this.position);\r\n    }\r\n\r\n    const {x, y} = this._invertPosition(position.originX, position.originY);\r\n\r\n    return {\r\n      main: position,\r\n      fallback: {originX: x, originY: y}\r\n    };\r\n  }\r\n\r\n  /** Returns the overlay position and a fallback position based on the user's preference */\r\n  _getOverlayPosition(): {main: OverlayConnectionPosition, fallback: OverlayConnectionPosition} {\r\n    const isLtr = !this._dir || this._dir.value == 'ltr';\r\n    let position: OverlayConnectionPosition;\r\n\r\n    if (this.position == 'above') {\r\n      position = {overlayX: 'center', overlayY: 'bottom'};\r\n    } else if (this.position == 'below') {\r\n      position = {overlayX: 'center', overlayY: 'top'};\r\n    } else if (this.position == 'left' ||\r\n               this.position == 'before' && isLtr ||\r\n               this.position == 'after' && !isLtr) {\r\n      position = {overlayX: 'end', overlayY: 'center'};\r\n    } else if (this.position == 'right' ||\r\n               this.position == 'after' && isLtr ||\r\n               this.position == 'before' && !isLtr) {\r\n      position = {overlayX: 'start', overlayY: 'center'};\r\n    } else {\r\n      throw getMatTooltipInvalidPositionError(this.position);\r\n    }\r\n\r\n    const {x, y} = this._invertPosition(position.overlayX, position.overlayY);\r\n\r\n    return {\r\n      main: position,\r\n      fallback: {overlayX: x, overlayY: y}\r\n    };\r\n  }\r\n\r\n  /** Updates the tooltip message and repositions the overlay according to the new message length */\r\n  private _updateTooltipMessage() {\r\n    // Must wait for the message to be painted to the tooltip so that the overlay can properly\r\n    // calculate the correct positioning based on the size of the text.\r\n    if (this._tooltipInstance) {\r\n      this._tooltipInstance.message = this.message;\r\n      this._tooltipInstance._markForCheck();\r\n\r\n      this._ngZone.onMicrotaskEmpty.asObservable().pipe(take(1)).subscribe(() => {\r\n        if (this._tooltipInstance) {\r\n          this._overlayRef!.updatePosition();\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  /** Updates the tooltip class */\r\n  private _setTooltipClass(tooltipClass: string|string[]|Set<string>|{[key: string]: any}) {\r\n    if (this._tooltipInstance) {\r\n      this._tooltipInstance.tooltipClass = tooltipClass;\r\n      this._tooltipInstance._markForCheck();\r\n    }\r\n  }\r\n\r\n  /** Inverts an overlay position. */\r\n  private _invertPosition(x: HorizontalConnectionPos, y: VerticalConnectionPos) {\r\n    if (this.position === 'above' || this.position === 'below') {\r\n      if (y === 'top') {\r\n        y = 'bottom';\r\n      } else if (y === 'bottom') {\r\n        y = 'top';\r\n      }\r\n    } else {\r\n      if (x === 'end') {\r\n        x = 'start';\r\n      } else if (x === 'start') {\r\n        x = 'end';\r\n      }\r\n    }\r\n\r\n    return {x, y};\r\n  }\r\n}\r\n\r\nexport type TooltipVisibility = 'initial' | 'visible' | 'hidden';\r\n\r\n/**\r\n * Internal component that wraps the tooltip's content.\r\n * @docs-private\r\n */\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'mat-tooltip-component',\r\n  templateUrl: 'tooltip.html',\r\n  styleUrls: ['tooltip.css'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  preserveWhitespaces: false,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  animations: [matTooltipAnimations.tooltipState],\r\n  host: {\r\n    // Forces the element to have a layout in IE and Edge. This fixes issues where the element\r\n    // won't be rendered if the animations are disabled or there is no web animations polyfill.\r\n    '[style.zoom]': '_visibility === \"visible\" ? 1 : null',\r\n    '(body:click)': 'this._handleBodyInteraction()',\r\n    'aria-hidden': 'true',\r\n  }\r\n})\r\nexport class TooltipComponent {\r\n  /** Message to display in the tooltip */\r\n  message: string;\r\n\r\n  /** Classes to be added to the tooltip. Supports the same syntax as `ngClass`. */\r\n  tooltipClass: string|string[]|Set<string>|{[key: string]: any};\r\n\r\n  /** The timeout ID of any current timer set to show the tooltip */\r\n  _showTimeoutId: number;\r\n\r\n  /** The timeout ID of any current timer set to hide the tooltip */\r\n  _hideTimeoutId: number;\r\n\r\n  /** Property watched by the animation framework to show or hide the tooltip */\r\n  _visibility: TooltipVisibility = 'initial';\r\n\r\n  /** Whether interactions on the page should close the tooltip */\r\n  private _closeOnInteraction: boolean = false;\r\n\r\n  /** The transform origin used in the animation for showing and hiding the tooltip */\r\n  _transformOrigin: 'top' | 'bottom' | 'left' | 'right' = 'bottom';\r\n\r\n  /** Current position of the tooltip. */\r\n  private _position: TooltipPosition;\r\n\r\n  /** Subject for notifying that the tooltip has been hidden from the view */\r\n  private readonly _onHide: Subject<any> = new Subject();\r\n\r\n  /** Stream that emits whether the user has a handset-sized display.  */\r\n  _isHandset: Observable<BreakpointState> = this._breakpointObserver.observe(Breakpoints.Handset);\r\n\r\n  constructor(\r\n    private _changeDetectorRef: ChangeDetectorRef,\r\n    private _breakpointObserver: BreakpointObserver) {}\r\n\r\n  /**\r\n   * Shows the tooltip with an animation originating from the provided origin\r\n   * @param position Position of the tooltip.\r\n   * @param delay Amount of milliseconds to the delay showing the tooltip.\r\n   */\r\n  show(position: TooltipPosition, delay: number): void {\r\n    // Cancel the delayed hide if it is scheduled\r\n    if (this._hideTimeoutId) {\r\n      clearTimeout(this._hideTimeoutId);\r\n    }\r\n\r\n    // Body interactions should cancel the tooltip if there is a delay in showing.\r\n    this._closeOnInteraction = true;\r\n    this._position = position;\r\n    this._showTimeoutId = setTimeout(() => {\r\n      this._visibility = 'visible';\r\n\r\n      // Mark for check so if any parent component has set the\r\n      // ChangeDetectionStrategy to OnPush it will be checked anyways\r\n      this._markForCheck();\r\n    }, delay);\r\n  }\r\n\r\n  /**\r\n   * Begins the animation to hide the tooltip after the provided delay in ms.\r\n   * @param delay Amount of milliseconds to delay showing the tooltip.\r\n   */\r\n  hide(delay: number): void {\r\n    // Cancel the delayed show if it is scheduled\r\n    if (this._showTimeoutId) {\r\n      clearTimeout(this._showTimeoutId);\r\n    }\r\n\r\n    this._hideTimeoutId = setTimeout(() => {\r\n      this._visibility = 'hidden';\r\n\r\n      // Mark for check so if any parent component has set the\r\n      // ChangeDetectionStrategy to OnPush it will be checked anyways\r\n      this._markForCheck();\r\n    }, delay);\r\n  }\r\n\r\n  /** Returns an observable that notifies when the tooltip has been hidden from view. */\r\n  afterHidden(): Observable<void> {\r\n    return this._onHide.asObservable();\r\n  }\r\n\r\n  /** Whether the tooltip is being displayed. */\r\n  isVisible(): boolean {\r\n    return this._visibility === 'visible';\r\n  }\r\n\r\n  /** Sets the tooltip transform origin according to the position of the tooltip overlay. */\r\n  _setTransformOrigin(overlayPosition: ConnectionPositionPair) {\r\n    const axis = (this._position === 'above' || this._position === 'below') ? 'Y' : 'X';\r\n    const position = axis == 'X' ? overlayPosition.overlayX : overlayPosition.overlayY;\r\n\r\n    if (position === 'top' || position === 'bottom') {\r\n      this._transformOrigin = position;\r\n    } else if (position === 'start') {\r\n      this._transformOrigin = 'left';\r\n    } else if (position === 'end') {\r\n      this._transformOrigin = 'right';\r\n    } else {\r\n      throw getMatTooltipInvalidPositionError(this._position);\r\n    }\r\n  }\r\n\r\n  _animationStart() {\r\n    this._closeOnInteraction = false;\r\n  }\r\n\r\n  _animationDone(event: AnimationEvent): void {\r\n    const toState = event.toState as TooltipVisibility;\r\n\r\n    if (toState === 'hidden' && !this.isVisible()) {\r\n      this._onHide.next();\r\n    }\r\n\r\n    if (toState === 'visible' || toState === 'hidden') {\r\n      this._closeOnInteraction = true;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Interactions on the HTML body should close the tooltip immediately as defined in the\r\n   * material design spec.\r\n   * https://material.google.com/components/tooltips.html#tooltips-interaction\r\n   */\r\n  _handleBodyInteraction(): void {\r\n    if (this._closeOnInteraction) {\r\n      this.hide(0);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Marks that the tooltip needs to be checked in the next change detection run.\r\n   * Mainly used for rendering the initial text before positioning a tooltip, which\r\n   * can be problematic in components with OnPush change detection.\r\n   */\r\n  _markForCheck(): void {\r\n    this._changeDetectorRef.markForCheck();\r\n  }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\nimport {\r\n  animate,\r\n  state,\r\n  style,\r\n  transition,\r\n  trigger,\r\n  AnimationTriggerMetadata,\r\n} from '@angular/animations';\r\n\r\n/** Animations used by MatTooltip. */\r\nexport const matTooltipAnimations: {\r\n  readonly tooltipState: AnimationTriggerMetadata;\r\n} = {\r\n  /** Animation that transitions a tooltip in and out. */\r\n  tooltipState: trigger('state', [\r\n    state('initial, void, hidden', style({transform: 'scale(0)'})),\r\n    state('visible', style({transform: 'scale(1)'})),\r\n    transition('* => visible', animate('150ms cubic-bezier(0.0, 0.0, 0.2, 1)')),\r\n    transition('* => hidden', animate('150ms cubic-bezier(0.4, 0.0, 1, 1)')),\r\n  ])\r\n};\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\nimport {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {MatSelect, MatSelectTrigger, MAT_SELECT_SCROLL_STRATEGY_PROVIDER} from './select';\r\nimport {MatCommonModule, MatOptionModule} from '@angular/material/core';\r\nimport {OverlayModule} from '@angular/cdk/overlay';\r\nimport {MatFormFieldModule} from '@angular/material/form-field';\r\nimport {ErrorStateMatcher} from '@angular/material/core';\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    OverlayModule,\r\n    MatOptionModule,\r\n    MatCommonModule,\r\n  ],\r\n  exports: [MatFormFieldModule, MatSelect, MatSelectTrigger, MatOptionModule, MatCommonModule],\r\n  declarations: [MatSelect, MatSelectTrigger],\r\n  providers: [MAT_SELECT_SCROLL_STRATEGY_PROVIDER, ErrorStateMatcher]\r\n})\r\nexport class MatSelectModule {}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\nimport {ActiveDescendantKeyManager} from '@angular/cdk/a11y';\r\nimport {Directionality} from '@angular/cdk/bidi';\r\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\r\nimport {SelectionModel} from '@angular/cdk/collections';\r\nimport {\r\n  DOWN_ARROW,\r\n  END,\r\n  ENTER,\r\n  HOME,\r\n  SPACE,\r\n  UP_ARROW,\r\n  LEFT_ARROW,\r\n  RIGHT_ARROW,\r\n} from '@angular/cdk/keycodes';\r\nimport {\r\n  CdkConnectedOverlay,\r\n  Overlay,\r\n  RepositionScrollStrategy,\r\n  ScrollStrategy,\r\n  ViewportRuler,\r\n} from '@angular/cdk/overlay';\r\nimport {filter} from 'rxjs/operators/filter';\r\nimport {take} from 'rxjs/operators/take';\r\nimport {map} from 'rxjs/operators/map';\r\nimport {switchMap} from 'rxjs/operators/switchMap';\r\nimport {startWith} from 'rxjs/operators/startWith';\r\nimport {takeUntil} from 'rxjs/operators/takeUntil';\r\nimport {\r\n  AfterContentInit,\r\n  Attribute,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ContentChild,\r\n  ContentChildren,\r\n  Directive,\r\n  DoCheck,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Inject,\r\n  InjectionToken,\r\n  Input,\r\n  isDevMode,\r\n  NgZone,\r\n  OnChanges,\r\n  OnDestroy,\r\n  OnInit,\r\n  Optional,\r\n  Output,\r\n  QueryList,\r\n  Self,\r\n  SimpleChanges,\r\n  ViewChild,\r\n  ViewEncapsulation,\r\n} from '@angular/core';\r\nimport {\r\n  ControlValueAccessor,\r\n  FormGroupDirective,\r\n  NgControl,\r\n  NgForm\r\n} from '@angular/forms';\r\nimport {\r\n  CanDisable,\r\n  ErrorStateMatcher,\r\n  CanUpdateErrorState,\r\n  mixinErrorState,\r\n  HasTabIndex,\r\n  MatOptgroup,\r\n  MatOption,\r\n  MatOptionSelectionChange,\r\n  mixinDisabled,\r\n  mixinTabIndex,\r\n  MAT_OPTION_PARENT_COMPONENT,\r\n  mixinDisableRipple,\r\n  CanDisableRipple,\r\n  _countGroupLabelsBeforeOption,\r\n  _getOptionScrollPosition,\r\n} from '@angular/material/core';\r\nimport {MatFormField, MatFormFieldControl} from '@angular/material/form-field';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport {merge} from 'rxjs/observable/merge';\r\nimport {Subject} from 'rxjs/Subject';\r\nimport {defer} from 'rxjs/observable/defer';\r\nimport {matSelectAnimations} from './select-animations';\r\nimport {\r\n  getMatSelectDynamicMultipleError,\r\n  getMatSelectNonArrayValueError,\r\n  getMatSelectNonFunctionValueError,\r\n} from './select-errors';\r\n\r\n\r\nlet nextUniqueId = 0;\r\n\r\n/**\r\n * The following style constants are necessary to save here in order\r\n * to properly calculate the alignment of the selected option over\r\n * the trigger element.\r\n */\r\n\r\n/** The max height of the select's overlay panel */\r\nexport const SELECT_PANEL_MAX_HEIGHT = 256;\r\n\r\n/** The panel's padding on the x-axis */\r\nexport const SELECT_PANEL_PADDING_X = 16;\r\n\r\n/** The panel's x axis padding if it is indented (e.g. there is an option group). */\r\nexport const SELECT_PANEL_INDENT_PADDING_X = SELECT_PANEL_PADDING_X * 2;\r\n\r\n/** The height of the select items in `em` units. */\r\nexport const SELECT_ITEM_HEIGHT_EM = 3;\r\n\r\n/**\r\n * Distance between the panel edge and the option text in\r\n * multi-selection mode.\r\n *\r\n * (SELECT_PANEL_PADDING_X * 1.5) + 20 = 44\r\n * The padding is multiplied by 1.5 because the checkbox's margin is half the padding.\r\n * The checkbox width is 20px.\r\n */\r\nexport const SELECT_MULTIPLE_PANEL_PADDING_X = SELECT_PANEL_PADDING_X * 1.5 + 20;\r\n\r\n/**\r\n * The select panel will only \"fit\" inside the viewport if it is positioned at\r\n * this value or more away from the viewport boundary.\r\n */\r\nexport const SELECT_PANEL_VIEWPORT_PADDING = 8;\r\n\r\n/** Injection token that determines the scroll handling while a select is open. */\r\nexport const MAT_SELECT_SCROLL_STRATEGY =\r\n    new InjectionToken<() => ScrollStrategy>('mat-select-scroll-strategy');\r\n\r\n/** @docs-private */\r\nexport function MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay: Overlay):\r\n    () => RepositionScrollStrategy {\r\n  return () => overlay.scrollStrategies.reposition();\r\n}\r\n\r\n/** @docs-private */\r\nexport const MAT_SELECT_SCROLL_STRATEGY_PROVIDER = {\r\n  provide: MAT_SELECT_SCROLL_STRATEGY,\r\n  deps: [Overlay],\r\n  useFactory: MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY,\r\n};\r\n\r\n/** Change event object that is emitted when the select value has changed. */\r\nexport class MatSelectChange {\r\n  constructor(\r\n    /** Reference to the select that emitted the change event. */\r\n    public source: MatSelect,\r\n    /** Current value of the select that emitted the event. */\r\n    public value: any) { }\r\n}\r\n\r\n// Boilerplate for applying mixins to MatSelect.\r\n/** @docs-private */\r\nexport class MatSelectBase {\r\n  constructor(public _elementRef: ElementRef,\r\n              public _defaultErrorStateMatcher: ErrorStateMatcher,\r\n              public _parentForm: NgForm,\r\n              public _parentFormGroup: FormGroupDirective,\r\n              public ngControl: NgControl) {}\r\n}\r\nexport const _MatSelectMixinBase = mixinDisableRipple(\r\n    mixinTabIndex(mixinDisabled(mixinErrorState(MatSelectBase))));\r\n\r\n\r\n/**\r\n * Allows the user to customize the trigger that is displayed when the select has a value.\r\n */\r\n@Directive({\r\n  selector: 'mat-select-trigger'\r\n})\r\nexport class MatSelectTrigger {}\r\n\r\n\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'mat-select',\r\n  exportAs: 'matSelect',\r\n  templateUrl: 'select.html',\r\n  styleUrls: ['select.css'],\r\n  inputs: ['disabled', 'disableRipple', 'tabIndex'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  preserveWhitespaces: false,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  host: {\r\n    'role': 'listbox',\r\n    '[attr.id]': 'id',\r\n    '[attr.tabindex]': 'tabIndex',\r\n    '[attr.aria-label]': '_ariaLabel',\r\n    '[attr.aria-labelledby]': 'ariaLabelledby',\r\n    '[attr.aria-required]': 'required.toString()',\r\n    '[attr.aria-disabled]': 'disabled.toString()',\r\n    '[attr.aria-invalid]': 'errorState',\r\n    '[attr.aria-owns]': 'panelOpen ? _optionIds : null',\r\n    '[attr.aria-multiselectable]': 'multiple',\r\n    '[attr.aria-describedby]': '_ariaDescribedby || null',\r\n    '[attr.aria-activedescendant]': '_getAriaActiveDescendant()',\r\n    '[class.mat-select-disabled]': 'disabled',\r\n    '[class.mat-select-invalid]': 'errorState',\r\n    '[class.mat-select-required]': 'required',\r\n    'class': 'mat-select',\r\n    '(keydown)': '_handleKeydown($event)',\r\n    '(focus)': '_onFocus()',\r\n    '(blur)': '_onBlur()',\r\n  },\r\n  animations: [\r\n    matSelectAnimations.transformPanel,\r\n    matSelectAnimations.fadeInContent\r\n  ],\r\n  providers: [\r\n    {provide: MatFormFieldControl, useExisting: MatSelect},\r\n    {provide: MAT_OPTION_PARENT_COMPONENT, useExisting: MatSelect}\r\n  ],\r\n})\r\nexport class MatSelect extends _MatSelectMixinBase implements AfterContentInit, OnChanges,\r\n    OnDestroy, OnInit, DoCheck, ControlValueAccessor, CanDisable, HasTabIndex,\r\n    MatFormFieldControl<any>, CanUpdateErrorState, CanDisableRipple {\r\n  /** Whether or not the overlay panel is open. */\r\n  private _panelOpen = false;\r\n\r\n  /** Whether filling out the select is required in the form. */\r\n  private _required: boolean = false;\r\n\r\n  /** The scroll position of the overlay panel, calculated to center the selected option. */\r\n  private _scrollTop = 0;\r\n\r\n  /** The placeholder displayed in the trigger of the select. */\r\n  private _placeholder: string;\r\n\r\n  /** Whether the component is in multiple selection mode. */\r\n  private _multiple: boolean = false;\r\n\r\n  /** Comparison function to specify which option is displayed. Defaults to object equality. */\r\n  private _compareWith = (o1: any, o2: any) => o1 === o2;\r\n\r\n  /** Unique id for this input. */\r\n  private _uid = `mat-select-${nextUniqueId++}`;\r\n\r\n  /** Emits whenever the component is destroyed. */\r\n  private readonly _destroy = new Subject<void>();\r\n\r\n  /** The last measured value for the trigger's client bounding rect. */\r\n  _triggerRect: ClientRect;\r\n\r\n  /** The aria-describedby attribute on the select for improved a11y. */\r\n  _ariaDescribedby: string;\r\n\r\n  /** The cached font-size of the trigger element. */\r\n  _triggerFontSize = 0;\r\n\r\n  /** Deals with the selection logic. */\r\n  _selectionModel: SelectionModel<MatOption>;\r\n\r\n  /** Manages keyboard events for options in the panel. */\r\n  _keyManager: ActiveDescendantKeyManager<MatOption>;\r\n\r\n  /** `View -> model callback called when value changes` */\r\n  _onChange: (value: any) => void = () => {};\r\n\r\n  /** `View -> model callback called when select has been touched` */\r\n  _onTouched = () => {};\r\n\r\n  /** The IDs of child options to be passed to the aria-owns attribute. */\r\n  _optionIds: string = '';\r\n\r\n  /** The value of the select panel's transform-origin property. */\r\n  _transformOrigin: string = 'top';\r\n\r\n  /** Whether the panel's animation is done. */\r\n  _panelDoneAnimating: boolean = false;\r\n\r\n  /** Strategy that will be used to handle scrolling while the select panel is open. */\r\n  _scrollStrategy = this._scrollStrategyFactory();\r\n\r\n  /**\r\n   * The y-offset of the overlay panel in relation to the trigger's top start corner.\r\n   * This must be adjusted to align the selected option text over the trigger text.\r\n   * when the panel opens. Will change based on the y-position of the selected option.\r\n   */\r\n  _offsetY = 0;\r\n\r\n  /**\r\n   * This position config ensures that the top \"start\" corner of the overlay\r\n   * is aligned with with the top \"start\" of the origin by default (overlapping\r\n   * the trigger completely). If the panel cannot fit below the trigger, it\r\n   * will fall back to a position above the trigger.\r\n   */\r\n  _positions = [\r\n    {\r\n      originX: 'start',\r\n      originY: 'top',\r\n      overlayX: 'start',\r\n      overlayY: 'top',\r\n    },\r\n    {\r\n      originX: 'start',\r\n      originY: 'bottom',\r\n      overlayX: 'start',\r\n      overlayY: 'bottom',\r\n    },\r\n  ];\r\n\r\n  /** Whether the select is focused. */\r\n  focused: boolean = false;\r\n\r\n  /** A name for this control that can be used by `mat-form-field`. */\r\n  controlType = 'mat-select';\r\n\r\n  /** Trigger that opens the select. */\r\n  @ViewChild('trigger') trigger: ElementRef;\r\n\r\n  /** Panel containing the select options. */\r\n  @ViewChild('panel') panel: ElementRef;\r\n\r\n  /** Overlay pane containing the options. */\r\n  @ViewChild(CdkConnectedOverlay) overlayDir: CdkConnectedOverlay;\r\n\r\n  /** All of the defined select options. */\r\n  @ContentChildren(MatOption, { descendants: true }) options: QueryList<MatOption>;\r\n\r\n  /** All of the defined groups of options. */\r\n  @ContentChildren(MatOptgroup) optionGroups: QueryList<MatOptgroup>;\r\n\r\n  /** Classes to be passed to the select panel. Supports the same syntax as `ngClass`. */\r\n  @Input() panelClass: string|string[]|Set<string>|{[key: string]: any};\r\n\r\n  /** User-supplied override of the trigger element. */\r\n  @ContentChild(MatSelectTrigger) customTrigger: MatSelectTrigger;\r\n\r\n  /** Placeholder to be shown if no value has been selected. */\r\n  @Input()\r\n  get placeholder(): string { return this._placeholder; }\r\n  set placeholder(value: string) {\r\n    this._placeholder = value;\r\n    this.stateChanges.next();\r\n  }\r\n\r\n  /** Whether the component is required. */\r\n  @Input()\r\n  get required(): boolean { return this._required; }\r\n  set required(value: boolean) {\r\n    this._required = coerceBooleanProperty(value);\r\n    this.stateChanges.next();\r\n  }\r\n\r\n  /** Whether the user should be allowed to select multiple options. */\r\n  @Input()\r\n  get multiple(): boolean { return this._multiple; }\r\n  set multiple(value: boolean) {\r\n    if (this._selectionModel) {\r\n      throw getMatSelectDynamicMultipleError();\r\n    }\r\n\r\n    this._multiple = coerceBooleanProperty(value);\r\n  }\r\n\r\n  /**\r\n   * A function to compare the option values with the selected values. The first argument\r\n   * is a value from an option. The second is a value from the selection. A boolean\r\n   * should be returned.\r\n   */\r\n  @Input()\r\n  get compareWith() { return this._compareWith; }\r\n  set compareWith(fn: (o1: any, o2: any) => boolean) {\r\n    if (typeof fn !== 'function') {\r\n      throw getMatSelectNonFunctionValueError();\r\n    }\r\n    this._compareWith = fn;\r\n    if (this._selectionModel) {\r\n      // A different comparator means the selection could change.\r\n      this._initializeSelection();\r\n    }\r\n  }\r\n\r\n  /** Value of the select control. */\r\n  @Input()\r\n  get value(): any { return this._value; }\r\n  set value(newValue: any) {\r\n    if (newValue !== this._value) {\r\n      this.writeValue(newValue);\r\n      this._value = newValue;\r\n    }\r\n  }\r\n  private _value: any;\r\n\r\n  /** Aria label of the select. If not specified, the placeholder will be used as label. */\r\n  @Input('aria-label') ariaLabel: string = '';\r\n\r\n  /** Input that can be used to specify the `aria-labelledby` attribute. */\r\n  @Input('aria-labelledby') ariaLabelledby: string;\r\n\r\n  /** An object used to control when error messages are shown. */\r\n  @Input() errorStateMatcher: ErrorStateMatcher;\r\n\r\n  /** Unique id of the element. */\r\n  @Input()\r\n  get id(): string { return this._id; }\r\n  set id(value: string) {\r\n    this._id = value || this._uid;\r\n    this.stateChanges.next();\r\n  }\r\n  private _id: string;\r\n\r\n  /** Combined stream of all of the child options' change events. */\r\n  readonly optionSelectionChanges: Observable<MatOptionSelectionChange> = defer(() => {\r\n    if (this.options) {\r\n      return merge(...this.options.map(option => option.onSelectionChange));\r\n    }\r\n\r\n    return this._ngZone.onStable\r\n      .asObservable()\r\n      .pipe(take(1), switchMap(() => this.optionSelectionChanges));\r\n  });\r\n\r\n   /** Event emitted when the select panel has been toggled. */\r\n   @Output() readonly openedChange: EventEmitter<boolean> = new EventEmitter<boolean>();\r\n\r\n   /** Event emitted when the select has been opened. */\r\n   @Output('opened')\r\n   get _openedStream(): Observable<void> {\r\n    return this.openedChange.pipe(filter(o => o), map(() => {}));\r\n  }\r\n\r\n  /** Event emitted when the select has been closed. */\r\n  @Output('closed')\r\n  get _closedStream(): Observable<void> {\r\n    return this.openedChange.pipe(filter(o => !o), map(() => {}));\r\n  }\r\n\r\n  /**\r\n   * Event emitted when the select has been opened.\r\n   * @deprecated Use `openedChange` instead.\r\n   * @deletion-target 6.0.0\r\n   */\r\n  @Output() readonly onOpen: Observable<void> = this._openedStream;\r\n\r\n  /**\r\n   * Event emitted when the select has been closed.\r\n   * @deprecated Use `openedChange` instead.\r\n   * @deletion-target 6.0.0\r\n   */\r\n  @Output() readonly onClose: Observable<void> = this._closedStream;\r\n\r\n   /** Event emitted when the selected value has been changed by the user. */\r\n  @Output() readonly selectionChange: EventEmitter<MatSelectChange> =\r\n      new EventEmitter<MatSelectChange>();\r\n\r\n  /**\r\n   * Event emitted when the selected value has been changed by the user.\r\n   * @deprecated Use `selectionChange` instead.\r\n   * @deletion-target 6.0.0\r\n   */\r\n  @Output() readonly change: EventEmitter<MatSelectChange> = this.selectionChange;\r\n\r\n  /**\r\n   * Event that emits whenever the raw value of the select changes. This is here primarily\r\n   * to facilitate the two-way binding for the `value` input.\r\n   * @docs-private\r\n   */\r\n  @Output() readonly valueChange: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  constructor(\r\n    private _viewportRuler: ViewportRuler,\r\n    private _changeDetectorRef: ChangeDetectorRef,\r\n    private _ngZone: NgZone,\r\n    _defaultErrorStateMatcher: ErrorStateMatcher,\r\n    elementRef: ElementRef,\r\n    @Optional() private _dir: Directionality,\r\n    @Optional() _parentForm: NgForm,\r\n    @Optional() _parentFormGroup: FormGroupDirective,\r\n    @Optional() private _parentFormField: MatFormField,\r\n    @Self() @Optional() public ngControl: NgControl,\r\n    @Attribute('tabindex') tabIndex: string,\r\n    @Inject(MAT_SELECT_SCROLL_STRATEGY) private _scrollStrategyFactory) {\r\n    super(elementRef, _defaultErrorStateMatcher, _parentForm,\r\n          _parentFormGroup, ngControl);\r\n\r\n    if (this.ngControl) {\r\n      // Note: we provide the value accessor through here, instead of\r\n      // the `providers` to avoid running into a circular import.\r\n      this.ngControl.valueAccessor = this;\r\n    }\r\n\r\n    this.tabIndex = parseInt(tabIndex) || 0;\r\n\r\n    // Force setter to be called in case id was not specified.\r\n    this.id = this.id;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this._selectionModel = new SelectionModel<MatOption>(this.multiple, undefined, false);\r\n    this.stateChanges.next();\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    this._initKeyManager();\r\n\r\n    this.options.changes.pipe(startWith(null), takeUntil(this._destroy)).subscribe(() => {\r\n      this._resetOptions();\r\n      this._initializeSelection();\r\n    });\r\n  }\r\n\r\n  ngDoCheck() {\r\n    if (this.ngControl) {\r\n      this.updateErrorState();\r\n    }\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    // Updating the disabled state is handled by `mixinDisabled`, but we need to additionally let\r\n    // the parent form field know to run change detection when the disabled state changes.\r\n    if (changes.disabled) {\r\n      this.stateChanges.next();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this._destroy.next();\r\n    this._destroy.complete();\r\n    this.stateChanges.complete();\r\n  }\r\n\r\n  /** Toggles the overlay panel open or closed. */\r\n  toggle(): void {\r\n    this.panelOpen ? this.close() : this.open();\r\n  }\r\n\r\n  /** Opens the overlay panel. */\r\n  open(): void {\r\n    if (this.disabled || !this.options || !this.options.length) {\r\n      return;\r\n    }\r\n\r\n    this._triggerRect = this.trigger.nativeElement.getBoundingClientRect();\r\n    // Note: The computed font-size will be a string pixel value (e.g. \"16px\").\r\n    // `parseInt` ignores the trailing 'px' and converts this to a number.\r\n    this._triggerFontSize = parseInt(getComputedStyle(this.trigger.nativeElement)['font-size']);\r\n\r\n    this._panelOpen = true;\r\n    this._keyManager.withHorizontalOrientation(null);\r\n    this._calculateOverlayPosition();\r\n    this._highlightCorrectOption();\r\n    this._changeDetectorRef.markForCheck();\r\n\r\n    // Set the font size on the panel element once it exists.\r\n    this._ngZone.onStable.asObservable().pipe(take(1)).subscribe(() => {\r\n      if (this._triggerFontSize && this.overlayDir.overlayRef &&\r\n          this.overlayDir.overlayRef.overlayElement) {\r\n        this.overlayDir.overlayRef.overlayElement.style.fontSize = `${this._triggerFontSize}px`;\r\n      }\r\n    });\r\n  }\r\n\r\n  /** Closes the overlay panel and focuses the host element. */\r\n  close(): void {\r\n    if (this._panelOpen) {\r\n      this._panelOpen = false;\r\n      this._keyManager.withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr');\r\n      this._changeDetectorRef.markForCheck();\r\n      this._onTouched();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Sets the select's value. Part of the ControlValueAccessor interface\r\n   * required to integrate with Angular's core forms API.\r\n   *\r\n   * @param value New value to be written to the model.\r\n   */\r\n  writeValue(value: any): void {\r\n    if (this.options) {\r\n      this._setSelectionByValue(value);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Saves a callback function to be invoked when the select's value\r\n   * changes from user input. Part of the ControlValueAccessor interface\r\n   * required to integrate with Angular's core forms API.\r\n   *\r\n   * @param fn Callback to be triggered when the value changes.\r\n   */\r\n  registerOnChange(fn: (value: any) => void): void {\r\n    this._onChange = fn;\r\n  }\r\n\r\n  /**\r\n   * Saves a callback function to be invoked when the select is blurred\r\n   * by the user. Part of the ControlValueAccessor interface required\r\n   * to integrate with Angular's core forms API.\r\n   *\r\n   * @param fn Callback to be triggered when the component has been touched.\r\n   */\r\n  registerOnTouched(fn: () => {}): void {\r\n    this._onTouched = fn;\r\n  }\r\n\r\n  /**\r\n   * Disables the select. Part of the ControlValueAccessor interface required\r\n   * to integrate with Angular's core forms API.\r\n   *\r\n   * @param isDisabled Sets whether the component is disabled.\r\n   */\r\n  setDisabledState(isDisabled: boolean): void {\r\n    this.disabled = isDisabled;\r\n    this._changeDetectorRef.markForCheck();\r\n    this.stateChanges.next();\r\n  }\r\n\r\n  /** Whether or not the overlay panel is open. */\r\n  get panelOpen(): boolean {\r\n    return this._panelOpen;\r\n  }\r\n\r\n  /** The currently selected option. */\r\n  get selected(): MatOption | MatOption[] {\r\n    return this.multiple ? this._selectionModel.selected : this._selectionModel.selected[0];\r\n  }\r\n\r\n  /** The value displayed in the trigger. */\r\n  get triggerValue(): string {\r\n    if (this.empty) {\r\n      return '';\r\n    }\r\n\r\n    if (this._multiple) {\r\n      const selectedOptions = this._selectionModel.selected.map(option => option.viewValue);\r\n\r\n      if (this._isRtl()) {\r\n        selectedOptions.reverse();\r\n      }\r\n\r\n      // TODO(crisbeto): delimiter should be configurable for proper localization.\r\n      return selectedOptions.join(', ');\r\n    }\r\n\r\n    return this._selectionModel.selected[0].viewValue;\r\n  }\r\n\r\n  /** Whether the element is in RTL mode. */\r\n  _isRtl(): boolean {\r\n    return this._dir ? this._dir.value === 'rtl' : false;\r\n  }\r\n\r\n  /** Handles all keydown events on the select. */\r\n  _handleKeydown(event: KeyboardEvent): void {\r\n    if (!this.disabled) {\r\n      this.panelOpen ? this._handleOpenKeydown(event) : this._handleClosedKeydown(event);\r\n    }\r\n  }\r\n\r\n  /** Handles keyboard events while the select is closed. */\r\n  private _handleClosedKeydown(event: KeyboardEvent): void {\r\n    const keyCode = event.keyCode;\r\n    const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW ||\r\n        keyCode === LEFT_ARROW || keyCode === RIGHT_ARROW;\r\n    const isOpenKey = keyCode === ENTER || keyCode === SPACE;\r\n\r\n    // Open the select on ALT + arrow key to match the native <select>\r\n    if (isOpenKey || ((this.multiple || event.altKey) && isArrowKey)) {\r\n      event.preventDefault(); // prevents the page from scrolling down when pressing space\r\n      this.open();\r\n    } else if (!this.multiple) {\r\n      this._keyManager.onKeydown(event);\r\n    }\r\n  }\r\n\r\n  /** Handles keyboard events when the selected is open. */\r\n  private _handleOpenKeydown(event: KeyboardEvent): void {\r\n    const keyCode = event.keyCode;\r\n    const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW;\r\n    const manager = this._keyManager;\r\n\r\n    if (keyCode === HOME || keyCode === END) {\r\n      event.preventDefault();\r\n      keyCode === HOME ? manager.setFirstItemActive() : manager.setLastItemActive();\r\n    } else if (isArrowKey && event.altKey) {\r\n      // Close the select on ALT + arrow key to match the native <select>\r\n      event.preventDefault();\r\n      this.close();\r\n    } else if ((keyCode === ENTER || keyCode === SPACE) && manager.activeItem) {\r\n      event.preventDefault();\r\n      manager.activeItem._selectViaInteraction();\r\n    } else {\r\n      const previouslyFocusedIndex = manager.activeItemIndex;\r\n\r\n      manager.onKeydown(event);\r\n\r\n      if (this._multiple && isArrowKey && event.shiftKey && manager.activeItem &&\r\n          manager.activeItemIndex !== previouslyFocusedIndex) {\r\n        manager.activeItem._selectViaInteraction();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * When the panel element is finished transforming in (though not fading in), it\r\n   * emits an event and focuses an option if the panel is open.\r\n   */\r\n  _onPanelDone(): void {\r\n    if (this.panelOpen) {\r\n      this._scrollTop = 0;\r\n      this.openedChange.emit(true);\r\n    } else {\r\n      this.openedChange.emit(false);\r\n      this._panelDoneAnimating = false;\r\n      this.overlayDir.offsetX = 0;\r\n      this._changeDetectorRef.markForCheck();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * When the panel content is done fading in, the _panelDoneAnimating property is\r\n   * set so the proper class can be added to the panel.\r\n   */\r\n  _onFadeInDone(): void {\r\n    this._panelDoneAnimating = this.panelOpen;\r\n    this._changeDetectorRef.markForCheck();\r\n  }\r\n\r\n  _onFocus() {\r\n    if (!this.disabled) {\r\n      this.focused = true;\r\n      this.stateChanges.next();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Calls the touched callback only if the panel is closed. Otherwise, the trigger will\r\n   * \"blur\" to the panel when it opens, causing a false positive.\r\n   */\r\n  _onBlur() {\r\n    this.focused = false;\r\n\r\n    if (!this.disabled && !this.panelOpen) {\r\n      this._onTouched();\r\n      this._changeDetectorRef.markForCheck();\r\n      this.stateChanges.next();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Callback that is invoked when the overlay panel has been attached.\r\n   */\r\n  _onAttached(): void {\r\n    this.overlayDir.positionChange.pipe(take(1)).subscribe(() => {\r\n      this._changeDetectorRef.detectChanges();\r\n      this._calculateOverlayOffsetX();\r\n      this.panel.nativeElement.scrollTop = this._scrollTop;\r\n    });\r\n  }\r\n\r\n  /** Returns the theme to be used on the panel. */\r\n  _getPanelTheme(): string {\r\n    return this._parentFormField ? `mat-${this._parentFormField.color}` : '';\r\n  }\r\n\r\n  /** Whether the select has a value. */\r\n  get empty(): boolean {\r\n    return !this._selectionModel || this._selectionModel.isEmpty();\r\n  }\r\n\r\n  private _initializeSelection(): void {\r\n    // Defer setting the value in order to avoid the \"Expression\r\n    // has changed after it was checked\" errors from Angular.\r\n    Promise.resolve().then(() => {\r\n      this._setSelectionByValue(this.ngControl ? this.ngControl.value : this._value);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Sets the selected option based on a value. If no option can be\r\n   * found with the designated value, the select trigger is cleared.\r\n   */\r\n  private _setSelectionByValue(value: any | any[], isUserInput = false): void {\r\n    if (this.multiple && value) {\r\n      if (!Array.isArray(value)) {\r\n        throw getMatSelectNonArrayValueError();\r\n      }\r\n\r\n      this._clearSelection();\r\n      value.forEach((currentValue: any) => this._selectValue(currentValue, isUserInput));\r\n      this._sortValues();\r\n    } else {\r\n      this._clearSelection();\r\n\r\n      const correspondingOption = this._selectValue(value, isUserInput);\r\n\r\n      // Shift focus to the active item. Note that we shouldn't do this in multiple\r\n      // mode, because we don't know what option the user interacted with last.\r\n      if (correspondingOption) {\r\n        this._keyManager.setActiveItem(this.options.toArray().indexOf(correspondingOption));\r\n      }\r\n    }\r\n\r\n    this._changeDetectorRef.markForCheck();\r\n  }\r\n\r\n  /**\r\n   * Finds and selects and option based on its value.\r\n   * @returns Option that has the corresponding value.\r\n   */\r\n  private _selectValue(value: any, isUserInput = false): MatOption | undefined {\r\n    const correspondingOption = this.options.find((option: MatOption) => {\r\n      try {\r\n        // Treat null as a special reset value.\r\n        return option.value != null && this._compareWith(option.value,  value);\r\n      } catch (error) {\r\n        if (isDevMode()) {\r\n          // Notify developers of errors in their comparator.\r\n          console.warn(error);\r\n        }\r\n        return false;\r\n      }\r\n    });\r\n\r\n    if (correspondingOption) {\r\n      isUserInput ? correspondingOption._selectViaInteraction() : correspondingOption.select();\r\n      this._selectionModel.select(correspondingOption);\r\n      this.stateChanges.next();\r\n    }\r\n\r\n    return correspondingOption;\r\n  }\r\n\r\n\r\n  /**\r\n   * Clears the select trigger and deselects every option in the list.\r\n   * @param skip Option that should not be deselected.\r\n   */\r\n  private _clearSelection(skip?: MatOption): void {\r\n    this._selectionModel.clear();\r\n    this.options.forEach(option => {\r\n      if (option !== skip) {\r\n        option.deselect();\r\n      }\r\n    });\r\n    this.stateChanges.next();\r\n  }\r\n\r\n  /** Sets up a key manager to listen to keyboard events on the overlay panel. */\r\n  private _initKeyManager() {\r\n    this._keyManager = new ActiveDescendantKeyManager<MatOption>(this.options)\r\n      .withTypeAhead()\r\n      .withVerticalOrientation()\r\n      .withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr');\r\n\r\n      this._keyManager.tabOut.pipe(takeUntil(this._destroy)).subscribe(() => this.close());\r\n    this._keyManager.change.pipe(takeUntil(this._destroy)).subscribe(() => {\r\n      if (this._panelOpen && this.panel) {\r\n        this._scrollActiveOptionIntoView();\r\n      } else if (!this._panelOpen && !this.multiple && this._keyManager.activeItem) {\r\n        this._keyManager.activeItem._selectViaInteraction();\r\n      }\r\n    });\r\n  }\r\n\r\n  /** Drops current option subscriptions and IDs and resets from scratch. */\r\n  private _resetOptions(): void {\r\n    const changedOrDestroyed = merge(this.options.changes, this._destroy);\r\n\r\n    this.optionSelectionChanges\r\n      .pipe(takeUntil(changedOrDestroyed), filter(event => event.isUserInput))\r\n      .subscribe(event => {\r\n        this._onSelect(event.source);\r\n\r\n        if (!this.multiple && this._panelOpen) {\r\n          this.close();\r\n          this.focus();\r\n        }\r\n      });\r\n\r\n    // Listen to changes in the internal state of the options and react accordingly.\r\n    // Handles cases like the labels of the selected options changing.\r\n    merge(...this.options.map(option => option._stateChanges))\r\n      .pipe(takeUntil(changedOrDestroyed))\r\n      .subscribe(() => {\r\n        this._changeDetectorRef.markForCheck();\r\n        this.stateChanges.next();\r\n      });\r\n\r\n    this._setOptionIds();\r\n  }\r\n\r\n  /** Invoked when an option is clicked. */\r\n  private _onSelect(option: MatOption): void {\r\n    const wasSelected = this._selectionModel.isSelected(option);\r\n\r\n    // TODO(crisbeto): handle blank/null options inside multi-select.\r\n    if (this.multiple) {\r\n      this._selectionModel.toggle(option);\r\n      this.stateChanges.next();\r\n      wasSelected ? option.deselect() : option.select();\r\n      this._keyManager.setActiveItem(this._getOptionIndex(option)!);\r\n      this._sortValues();\r\n    } else {\r\n      this._clearSelection(option.value == null ? undefined : option);\r\n\r\n      if (option.value == null) {\r\n        this._propagateChanges(option.value);\r\n      } else {\r\n        this._selectionModel.select(option);\r\n        this.stateChanges.next();\r\n      }\r\n    }\r\n\r\n    if (wasSelected !== this._selectionModel.isSelected(option)) {\r\n      this._propagateChanges();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Sorts the model values, ensuring that they keep the same\r\n   * order that they have in the panel.\r\n   */\r\n  private _sortValues(): void {\r\n    if (this._multiple) {\r\n      this._selectionModel.clear();\r\n\r\n      this.options.forEach(option => {\r\n        if (option.selected) {\r\n          this._selectionModel.select(option);\r\n        }\r\n      });\r\n      this.stateChanges.next();\r\n    }\r\n  }\r\n\r\n  /** Emits change event to set the model value. */\r\n  private _propagateChanges(fallbackValue?: any): void {\r\n    let valueToEmit: any = null;\r\n\r\n    if (this.multiple) {\r\n      valueToEmit = (this.selected as MatOption[]).map(option => option.value);\r\n    } else {\r\n      valueToEmit = this.selected ? (this.selected as MatOption).value : fallbackValue;\r\n    }\r\n\r\n    this._value = valueToEmit;\r\n    this.valueChange.emit(valueToEmit);\r\n    this._onChange(valueToEmit);\r\n    this.selectionChange.emit(new MatSelectChange(this, valueToEmit));\r\n    this._changeDetectorRef.markForCheck();\r\n  }\r\n\r\n  /** Records option IDs to pass to the aria-owns property. */\r\n  private _setOptionIds() {\r\n    this._optionIds = this.options.map(option => option.id).join(' ');\r\n  }\r\n\r\n  /**\r\n   * Highlights the selected item. If no option is selected, it will highlight\r\n   * the first item instead.\r\n   */\r\n  private _highlightCorrectOption(): void {\r\n    if (this._keyManager) {\r\n      if (this.empty) {\r\n        this._keyManager.setFirstItemActive();\r\n      } else {\r\n        this._keyManager.setActiveItem(this._getOptionIndex(this._selectionModel.selected[0])!);\r\n      }\r\n    }\r\n  }\r\n\r\n  /** Scrolls the active option into view. */\r\n  private _scrollActiveOptionIntoView(): void {\r\n    const activeOptionIndex = this._keyManager.activeItemIndex || 0;\r\n    const labelCount = _countGroupLabelsBeforeOption(activeOptionIndex, this.options,\r\n        this.optionGroups);\r\n\r\n    this.panel.nativeElement.scrollTop = _getOptionScrollPosition(\r\n      activeOptionIndex + labelCount,\r\n      this._getItemHeight(),\r\n      this.panel.nativeElement.scrollTop,\r\n      SELECT_PANEL_MAX_HEIGHT\r\n    );\r\n  }\r\n\r\n  /** Focuses the select element. */\r\n  focus(): void {\r\n    this._elementRef.nativeElement.focus();\r\n  }\r\n\r\n  /** Gets the index of the provided option in the option list. */\r\n  private _getOptionIndex(option: MatOption): number | undefined {\r\n    return this.options.reduce((result: number, current: MatOption, index: number) => {\r\n      return result === undefined ? (option === current ? index : undefined) : result;\r\n    }, undefined);\r\n  }\r\n\r\n  /** Calculates the scroll position and x- and y-offsets of the overlay panel. */\r\n  private _calculateOverlayPosition(): void {\r\n    const itemHeight = this._getItemHeight();\r\n    const items = this._getItemCount();\r\n    const panelHeight = Math.min(items * itemHeight, SELECT_PANEL_MAX_HEIGHT);\r\n    const scrollContainerHeight = items * itemHeight;\r\n\r\n    // The farthest the panel can be scrolled before it hits the bottom\r\n    const maxScroll = scrollContainerHeight - panelHeight;\r\n\r\n    // If no value is selected we open the popup to the first item.\r\n    let selectedOptionOffset =\r\n        this.empty ? 0 : this._getOptionIndex(this._selectionModel.selected[0])!;\r\n\r\n    selectedOptionOffset += _countGroupLabelsBeforeOption(selectedOptionOffset, this.options,\r\n        this.optionGroups);\r\n\r\n    // We must maintain a scroll buffer so the selected option will be scrolled to the\r\n    // center of the overlay panel rather than the top.\r\n    const scrollBuffer = panelHeight / 2;\r\n    this._scrollTop = this._calculateOverlayScroll(selectedOptionOffset, scrollBuffer, maxScroll);\r\n    this._offsetY = this._calculateOverlayOffsetY(selectedOptionOffset, scrollBuffer, maxScroll);\r\n\r\n    this._checkOverlayWithinViewport(maxScroll);\r\n  }\r\n\r\n  /**\r\n   * Calculates the scroll position of the select's overlay panel.\r\n   *\r\n   * Attempts to center the selected option in the panel. If the option is\r\n   * too high or too low in the panel to be scrolled to the center, it clamps the\r\n   * scroll position to the min or max scroll positions respectively.\r\n   */\r\n  _calculateOverlayScroll(selectedIndex: number, scrollBuffer: number,\r\n                          maxScroll: number): number {\r\n    const itemHeight = this._getItemHeight();\r\n    const optionOffsetFromScrollTop = itemHeight * selectedIndex;\r\n    const halfOptionHeight = itemHeight / 2;\r\n\r\n    // Starts at the optionOffsetFromScrollTop, which scrolls the option to the top of the\r\n    // scroll container, then subtracts the scroll buffer to scroll the option down to\r\n    // the center of the overlay panel. Half the option height must be re-added to the\r\n    // scrollTop so the option is centered based on its middle, not its top edge.\r\n    const optimalScrollPosition = optionOffsetFromScrollTop - scrollBuffer + halfOptionHeight;\r\n    return Math.min(Math.max(0, optimalScrollPosition), maxScroll);\r\n  }\r\n\r\n  /** Returns the aria-label of the select component. */\r\n  get _ariaLabel(): string | null {\r\n    // If an ariaLabelledby value has been set, the select should not overwrite the\r\n    // `aria-labelledby` value by setting the ariaLabel to the placeholder.\r\n    return this.ariaLabelledby ? null : this.ariaLabel || this.placeholder;\r\n  }\r\n\r\n  /** Determines the `aria-activedescendant` to be set on the host. */\r\n  _getAriaActiveDescendant(): string | null {\r\n    if (this.panelOpen && this._keyManager && this._keyManager.activeItem) {\r\n      return this._keyManager.activeItem.id;\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * Sets the x-offset of the overlay panel in relation to the trigger's top start corner.\r\n   * This must be adjusted to align the selected option text over the trigger text when\r\n   * the panel opens. Will change based on LTR or RTL text direction. Note that the offset\r\n   * can't be calculated until the panel has been attached, because we need to know the\r\n   * content width in order to constrain the panel within the viewport.\r\n   */\r\n  private _calculateOverlayOffsetX(): void {\r\n    const overlayRect = this.overlayDir.overlayRef.overlayElement.getBoundingClientRect();\r\n    const viewportSize = this._viewportRuler.getViewportSize();\r\n    const isRtl = this._isRtl();\r\n    const paddingWidth = this.multiple ? SELECT_MULTIPLE_PANEL_PADDING_X + SELECT_PANEL_PADDING_X :\r\n                                         SELECT_PANEL_PADDING_X * 2;\r\n    let offsetX: number;\r\n\r\n    // Adjust the offset, depending on the option padding.\r\n    if (this.multiple) {\r\n      offsetX = SELECT_MULTIPLE_PANEL_PADDING_X;\r\n    } else {\r\n      let selected = this._selectionModel.selected[0] || this.options.first;\r\n      offsetX = selected && selected.group ? SELECT_PANEL_INDENT_PADDING_X : SELECT_PANEL_PADDING_X;\r\n    }\r\n\r\n    // Invert the offset in LTR.\r\n    if (!isRtl) {\r\n      offsetX *= -1;\r\n    }\r\n\r\n    // Determine how much the select overflows on each side.\r\n    const leftOverflow = 0 - (overlayRect.left + offsetX - (isRtl ? paddingWidth : 0));\r\n    const rightOverflow = overlayRect.right + offsetX - viewportSize.width\r\n                          + (isRtl ? 0 : paddingWidth);\r\n\r\n    // If the element overflows on either side, reduce the offset to allow it to fit.\r\n    if (leftOverflow > 0) {\r\n      offsetX += leftOverflow + SELECT_PANEL_VIEWPORT_PADDING;\r\n    } else if (rightOverflow > 0) {\r\n      offsetX -= rightOverflow + SELECT_PANEL_VIEWPORT_PADDING;\r\n    }\r\n\r\n    // Set the offset directly in order to avoid having to go through change detection and\r\n    // potentially triggering \"changed after it was checked\" errors.\r\n    this.overlayDir.offsetX = offsetX;\r\n    this.overlayDir.overlayRef.updatePosition();\r\n  }\r\n\r\n  /**\r\n   * Calculates the y-offset of the select's overlay panel in relation to the\r\n   * top start corner of the trigger. It has to be adjusted in order for the\r\n   * selected option to be aligned over the trigger when the panel opens.\r\n   */\r\n  private _calculateOverlayOffsetY(selectedIndex: number, scrollBuffer: number,\r\n                                  maxScroll: number): number {\r\n    const itemHeight = this._getItemHeight();\r\n    const optionHeightAdjustment = (itemHeight - this._triggerRect.height) / 2;\r\n    const maxOptionsDisplayed = Math.floor(SELECT_PANEL_MAX_HEIGHT / itemHeight);\r\n    let optionOffsetFromPanelTop: number;\r\n\r\n    if (this._scrollTop === 0) {\r\n      optionOffsetFromPanelTop = selectedIndex * itemHeight;\r\n    } else if (this._scrollTop === maxScroll) {\r\n      const firstDisplayedIndex = this._getItemCount() - maxOptionsDisplayed;\r\n      const selectedDisplayIndex = selectedIndex - firstDisplayedIndex;\r\n\r\n      // The first item is partially out of the viewport. Therefore we need to calculate what\r\n      // portion of it is shown in the viewport and account for it in our offset.\r\n      let partialItemHeight =\r\n          itemHeight - (this._getItemCount() * itemHeight - SELECT_PANEL_MAX_HEIGHT) % itemHeight;\r\n\r\n      // Because the panel height is longer than the height of the options alone,\r\n      // there is always extra padding at the top or bottom of the panel. When\r\n      // scrolled to the very bottom, this padding is at the top of the panel and\r\n      // must be added to the offset.\r\n      optionOffsetFromPanelTop = selectedDisplayIndex * itemHeight + partialItemHeight;\r\n    } else {\r\n      // If the option was scrolled to the middle of the panel using a scroll buffer,\r\n      // its offset will be the scroll buffer minus the half height that was added to\r\n      // center it.\r\n      optionOffsetFromPanelTop = scrollBuffer - itemHeight / 2;\r\n    }\r\n\r\n    // The final offset is the option's offset from the top, adjusted for the height\r\n    // difference, multiplied by -1 to ensure that the overlay moves in the correct\r\n    // direction up the page.\r\n    return optionOffsetFromPanelTop * -1 - optionHeightAdjustment;\r\n  }\r\n\r\n  /**\r\n   * Checks that the attempted overlay position will fit within the viewport.\r\n   * If it will not fit, tries to adjust the scroll position and the associated\r\n   * y-offset so the panel can open fully on-screen. If it still won't fit,\r\n   * sets the offset back to 0 to allow the fallback position to take over.\r\n   */\r\n  private _checkOverlayWithinViewport(maxScroll: number): void {\r\n    const itemHeight = this._getItemHeight();\r\n    const viewportSize = this._viewportRuler.getViewportSize();\r\n\r\n    const topSpaceAvailable = this._triggerRect.top - SELECT_PANEL_VIEWPORT_PADDING;\r\n    const bottomSpaceAvailable =\r\n        viewportSize.height - this._triggerRect.bottom - SELECT_PANEL_VIEWPORT_PADDING;\r\n\r\n    const panelHeightTop = Math.abs(this._offsetY);\r\n    const totalPanelHeight =\r\n        Math.min(this._getItemCount() * itemHeight, SELECT_PANEL_MAX_HEIGHT);\r\n    const panelHeightBottom = totalPanelHeight - panelHeightTop - this._triggerRect.height;\r\n\r\n    if (panelHeightBottom > bottomSpaceAvailable) {\r\n      this._adjustPanelUp(panelHeightBottom, bottomSpaceAvailable);\r\n    } else if (panelHeightTop > topSpaceAvailable) {\r\n     this._adjustPanelDown(panelHeightTop, topSpaceAvailable, maxScroll);\r\n    } else {\r\n      this._transformOrigin = this._getOriginBasedOnOption();\r\n    }\r\n  }\r\n\r\n  /** Adjusts the overlay panel up to fit in the viewport. */\r\n  private _adjustPanelUp(panelHeightBottom: number, bottomSpaceAvailable: number) {\r\n    // Browsers ignore fractional scroll offsets, so we need to round.\r\n    const distanceBelowViewport = Math.round(panelHeightBottom - bottomSpaceAvailable);\r\n\r\n    // Scrolls the panel up by the distance it was extending past the boundary, then\r\n    // adjusts the offset by that amount to move the panel up into the viewport.\r\n    this._scrollTop -= distanceBelowViewport;\r\n    this._offsetY -= distanceBelowViewport;\r\n    this._transformOrigin = this._getOriginBasedOnOption();\r\n\r\n    // If the panel is scrolled to the very top, it won't be able to fit the panel\r\n    // by scrolling, so set the offset to 0 to allow the fallback position to take\r\n    // effect.\r\n    if (this._scrollTop <= 0) {\r\n      this._scrollTop = 0;\r\n      this._offsetY = 0;\r\n      this._transformOrigin = `50% bottom 0px`;\r\n    }\r\n  }\r\n\r\n  /** Adjusts the overlay panel down to fit in the viewport. */\r\n  private _adjustPanelDown(panelHeightTop: number, topSpaceAvailable: number,\r\n                           maxScroll: number) {\r\n    // Browsers ignore fractional scroll offsets, so we need to round.\r\n    const distanceAboveViewport = Math.round(panelHeightTop - topSpaceAvailable);\r\n\r\n    // Scrolls the panel down by the distance it was extending past the boundary, then\r\n    // adjusts the offset by that amount to move the panel down into the viewport.\r\n    this._scrollTop += distanceAboveViewport;\r\n    this._offsetY += distanceAboveViewport;\r\n    this._transformOrigin = this._getOriginBasedOnOption();\r\n\r\n    // If the panel is scrolled to the very bottom, it won't be able to fit the\r\n    // panel by scrolling, so set the offset to 0 to allow the fallback position\r\n    // to take effect.\r\n    if (this._scrollTop >= maxScroll) {\r\n      this._scrollTop = maxScroll;\r\n      this._offsetY = 0;\r\n      this._transformOrigin = `50% top 0px`;\r\n      return;\r\n    }\r\n  }\r\n\r\n  /** Sets the transform origin point based on the selected option. */\r\n  private _getOriginBasedOnOption(): string {\r\n    const itemHeight = this._getItemHeight();\r\n    const optionHeightAdjustment = (itemHeight - this._triggerRect.height) / 2;\r\n    const originY = Math.abs(this._offsetY) - optionHeightAdjustment + itemHeight / 2;\r\n    return `50% ${originY}px 0px`;\r\n  }\r\n\r\n  /** Calculates the amount of items in the select. This includes options and group labels. */\r\n  private _getItemCount(): number {\r\n    return this.options.length + this.optionGroups.length;\r\n  }\r\n\r\n  /** Calculates the height of the select's options. */\r\n  private _getItemHeight(): number {\r\n    return this._triggerFontSize * SELECT_ITEM_HEIGHT_EM;\r\n  }\r\n\r\n  /**\r\n   * Implemented as part of MatFormFieldControl.\r\n   * @docs-private\r\n   */\r\n  setDescribedByIds(ids: string[]) {\r\n    this._ariaDescribedby = ids.join(' ');\r\n  }\r\n\r\n  /**\r\n   * Implemented as part of MatFormFieldControl.\r\n   * @docs-private\r\n   */\r\n  onContainerClick() {\r\n    this.focus();\r\n    this.open();\r\n  }\r\n\r\n  /**\r\n   * Implemented as part of MatFormFieldControl.\r\n   * @docs-private\r\n   */\r\n  get shouldPlaceholderFloat(): boolean {\r\n    return this._panelOpen || !this.empty;\r\n  }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\n/**\r\n * Returns an exception to be thrown when attempting to change a select's `multiple` option\r\n * after initialization.\r\n * @docs-private\r\n */\r\nexport function getMatSelectDynamicMultipleError(): Error {\r\n  return Error('Cannot change `multiple` mode of select after initialization.');\r\n}\r\n\r\n/**\r\n * Returns an exception to be thrown when attempting to assign a non-array value to a select\r\n * in `multiple` mode. Note that `undefined` and `null` are still valid values to allow for\r\n * resetting the value.\r\n * @docs-private\r\n */\r\nexport function getMatSelectNonArrayValueError(): Error {\r\n  return Error('Value must be an array in multiple-selection mode.');\r\n}\r\n\r\n/**\r\n * Returns an exception to be thrown when assigning a non-function value to the comparator\r\n * used to determine if a value corresponds to an option. Note that whether the function\r\n * actually takes two values and returns a boolean is not checked.\r\n */\r\nexport function getMatSelectNonFunctionValueError(): Error {\r\n  return Error('`compareWith` must be a function.');\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {\r\n  animate,\r\n  AnimationTriggerMetadata,\r\n  state,\r\n  style,\r\n  transition,\r\n  trigger,\r\n} from '@angular/animations';\r\n\r\n/**\r\n * The following are all the animations for the mat-select component, with each\r\n * const containing the metadata for one animation.\r\n *\r\n * The values below match the implementation of the AngularJS Material mat-select animation.\r\n */\r\nexport const matSelectAnimations: {\r\n  readonly transformPanel: AnimationTriggerMetadata;\r\n  readonly fadeInContent: AnimationTriggerMetadata;\r\n} = {\r\n  /**\r\n   * This animation transforms the select's overlay panel on and off the page.\r\n   *\r\n   * When the panel is attached to the DOM, it expands its width by the amount of padding, scales it\r\n   * up to 100% on the Y axis, fades in its border, and translates slightly up and to the\r\n   * side to ensure the option text correctly overlaps the trigger text.\r\n   *\r\n   * When the panel is removed from the DOM, it simply fades out linearly.\r\n   */\r\n  transformPanel: trigger('transformPanel', [\r\n    state('showing', style({\r\n      opacity: 1,\r\n      minWidth: 'calc(100% + 32px)', // 32px = 2 * 16px padding\r\n      transform: 'scaleY(1)'\r\n    })),\r\n    state('showing-multiple', style({\r\n      opacity: 1,\r\n      minWidth: 'calc(100% + 64px)', // 64px = 48px padding on the left + 16px padding on the right\r\n      transform: 'scaleY(1)'\r\n    })),\r\n    transition('void => *', [\r\n      style({\r\n        opacity: 0,\r\n        minWidth: '100%',\r\n        transform: 'scaleY(0)'\r\n      }),\r\n      animate('150ms cubic-bezier(0.25, 0.8, 0.25, 1)')\r\n    ]),\r\n    transition('* => void', [\r\n      animate('250ms 100ms linear', style({opacity: 0}))\r\n    ])\r\n  ]),\r\n\r\n  /**\r\n   * This animation fades in the background color and text content of the\r\n   * select's options. It is time delayed to occur 100ms after the overlay\r\n   * panel has transformed in.\r\n   */\r\n  fadeInContent: trigger('fadeInContent', [\r\n    state('showing', style({opacity: 1})),\r\n    transition('void => showing', [\r\n      style({opacity: 0}),\r\n      animate('150ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)')\r\n    ])\r\n  ])\r\n};\r\n\r\n\r\n/**\r\n * @deprecated\r\n * @deletion-target 7.0.0\r\n */\r\nexport const transformPanel = matSelectAnimations.transformPanel;\r\n\r\n/**\r\n * @deprecated\r\n * @deletion-target 7.0.0\r\n */\r\nexport const fadeInContent = matSelectAnimations.fadeInContent;\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {A11yModule} from '@angular/cdk/a11y';\r\nimport {OverlayModule} from '@angular/cdk/overlay';\r\nimport {CommonModule} from '@angular/common';\r\nimport {NgModule} from '@angular/core';\r\nimport {MatCommonModule, MatRippleModule} from '@angular/material/core';\r\nimport {PortalModule} from '@angular/cdk/portal';\r\nimport {MAT_MENU_DEFAULT_OPTIONS, MatMenu} from './menu-directive';\r\nimport {MatMenuItem} from './menu-item';\r\nimport {MAT_MENU_SCROLL_STRATEGY_PROVIDER, MatMenuTrigger} from './menu-trigger';\r\nimport {MatMenuContent} from './menu-content';\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    A11yModule,\r\n    CommonModule,\r\n    MatCommonModule,\r\n    MatRippleModule,\r\n    OverlayModule,\r\n    PortalModule,\r\n  ],\r\n  exports: [MatMenu, MatMenuItem, MatMenuTrigger, MatMenuContent, MatCommonModule],\r\n  declarations: [MatMenu, MatMenuItem, MatMenuTrigger, MatMenuContent],\r\n  providers: [\r\n    MAT_MENU_SCROLL_STRATEGY_PROVIDER,\r\n    {\r\n      provide: MAT_MENU_DEFAULT_OPTIONS,\r\n      useValue: {\r\n        overlapTrigger: true,\r\n        xPosition: 'after',\r\n        yPosition: 'below',\r\n      },\r\n    }\r\n  ],\r\n})\r\nexport class MatMenuModule {}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {isFakeMousedownFromScreenReader} from '@angular/cdk/a11y';\r\nimport {Direction, Directionality} from '@angular/cdk/bidi';\r\nimport {LEFT_ARROW, RIGHT_ARROW} from '@angular/cdk/keycodes';\r\nimport {\r\n  ConnectedPositionStrategy,\r\n  HorizontalConnectionPos,\r\n  Overlay,\r\n  OverlayRef,\r\n  OverlayConfig,\r\n  RepositionScrollStrategy,\r\n  ScrollStrategy,\r\n  VerticalConnectionPos,\r\n} from '@angular/cdk/overlay';\r\nimport {TemplatePortal} from '@angular/cdk/portal';\r\nimport {filter} from 'rxjs/operators/filter';\r\nimport {\r\n  AfterContentInit,\r\n  Directive,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Inject,\r\n  InjectionToken,\r\n  Input,\r\n  OnDestroy,\r\n  Optional,\r\n  Output,\r\n  Self,\r\n  ViewContainerRef,\r\n} from '@angular/core';\r\nimport {merge} from 'rxjs/observable/merge';\r\nimport {of as observableOf} from 'rxjs/observable/of';\r\nimport {Subscription} from 'rxjs/Subscription';\r\nimport {MatMenu} from './menu-directive';\r\nimport {throwMatMenuMissingError} from './menu-errors';\r\nimport {MatMenuItem} from './menu-item';\r\nimport {MatMenuPanel} from './menu-panel';\r\nimport {MenuPositionX, MenuPositionY} from './menu-positions';\r\nimport {FocusMonitor, FocusOrigin} from '@angular/cdk/a11y';\r\n\r\n/** Injection token that determines the scroll handling while the menu is open. */\r\nexport const MAT_MENU_SCROLL_STRATEGY =\r\n    new InjectionToken<() => ScrollStrategy>('mat-menu-scroll-strategy');\r\n\r\n/** @docs-private */\r\nexport function MAT_MENU_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay: Overlay):\r\n    () => RepositionScrollStrategy {\r\n  return () => overlay.scrollStrategies.reposition();\r\n}\r\n\r\n/** @docs-private */\r\nexport const MAT_MENU_SCROLL_STRATEGY_PROVIDER = {\r\n  provide: MAT_MENU_SCROLL_STRATEGY,\r\n  deps: [Overlay],\r\n  useFactory: MAT_MENU_SCROLL_STRATEGY_PROVIDER_FACTORY,\r\n};\r\n\r\n\r\n// TODO(andrewseguin): Remove the kebab versions in favor of camelCased attribute selectors\r\n\r\n/** Default top padding of the menu panel. */\r\nexport const MENU_PANEL_TOP_PADDING = 8;\r\n\r\n/**\r\n * This directive is intended to be used in conjunction with an mat-menu tag.  It is\r\n * responsible for toggling the display of the provided menu instance.\r\n */\r\n@Directive({\r\n  selector: `[mat-menu-trigger-for], [matMenuTriggerFor]`,\r\n  host: {\r\n    'aria-haspopup': 'true',\r\n    '(mousedown)': '_handleMousedown($event)',\r\n    '(keydown)': '_handleKeydown($event)',\r\n    '(click)': '_handleClick($event)',\r\n  },\r\n  exportAs: 'matMenuTrigger'\r\n})\r\nexport class MatMenuTrigger implements AfterContentInit, OnDestroy {\r\n  private _portal: TemplatePortal;\r\n  private _overlayRef: OverlayRef | null = null;\r\n  private _menuOpen: boolean = false;\r\n  private _closeSubscription = Subscription.EMPTY;\r\n  private _hoverSubscription = Subscription.EMPTY;\r\n\r\n  // Tracking input type is necessary so it's possible to only auto-focus\r\n  // the first item of the list when the menu is opened via the keyboard\r\n  private _openedByMouse: boolean = false;\r\n\r\n  /**\r\n   * @deprecated\r\n   * @deletion-target 6.0.0\r\n   */\r\n  @Input('mat-menu-trigger-for')\r\n  get _deprecatedMatMenuTriggerFor(): MatMenuPanel {\r\n    return this.menu;\r\n  }\r\n\r\n  set _deprecatedMatMenuTriggerFor(v: MatMenuPanel) {\r\n    this.menu = v;\r\n  }\r\n\r\n  /** References the menu instance that the trigger is associated with. */\r\n  @Input('matMenuTriggerFor') menu: MatMenuPanel;\r\n\r\n  /** Data to be passed along to any lazily-rendered content. */\r\n  @Input('matMenuTriggerData') menuData: any;\r\n\r\n  /** Event emitted when the associated menu is opened. */\r\n  @Output() readonly menuOpened: EventEmitter<void> = new EventEmitter<void>();\r\n\r\n  /**\r\n   * Event emitted when the associated menu is opened.\r\n   * @deprecated Switch to `menuOpened` instead\r\n   * @deletion-target 6.0.0\r\n   */\r\n  @Output() readonly onMenuOpen: EventEmitter<void> = this.menuOpened;\r\n\r\n  /** Event emitted when the associated menu is closed. */\r\n  @Output() readonly menuClosed: EventEmitter<void> = new EventEmitter<void>();\r\n\r\n  /**\r\n   * Event emitted when the associated menu is closed.\r\n   * @deprecated Switch to `menuClosed` instead\r\n   * @deletion-target 6.0.0\r\n   */\r\n  @Output() readonly onMenuClose: EventEmitter<void> = this.menuClosed;\r\n\r\n  constructor(private _overlay: Overlay,\r\n              private _element: ElementRef,\r\n              private _viewContainerRef: ViewContainerRef,\r\n              @Inject(MAT_MENU_SCROLL_STRATEGY) private _scrollStrategy,\r\n              @Optional() private _parentMenu: MatMenu,\r\n              @Optional() @Self() private _menuItemInstance: MatMenuItem,\r\n              @Optional() private _dir: Directionality,\r\n              // TODO(crisbeto): make the _focusMonitor required when doing breaking changes.\r\n              private _focusMonitor?: FocusMonitor) {\r\n\r\n    if (_menuItemInstance) {\r\n      _menuItemInstance._triggersSubmenu = this.triggersSubmenu();\r\n    }\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    this._checkMenu();\r\n\r\n    this.menu.close.subscribe(reason => {\r\n      this._destroyMenu();\r\n\r\n      // If a click closed the menu, we should close the entire chain of nested menus.\r\n      if (reason === 'click' && this._parentMenu) {\r\n        this._parentMenu.closed.emit(reason);\r\n      }\r\n    });\r\n\r\n    if (this.triggersSubmenu()) {\r\n      // Subscribe to changes in the hovered item in order to toggle the panel.\r\n      this._hoverSubscription = this._parentMenu._hovered()\r\n          .pipe(filter(active => active === this._menuItemInstance))\r\n          .subscribe(() => {\r\n            this._openedByMouse = true;\r\n            this.openMenu();\r\n          });\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this._overlayRef) {\r\n      this._overlayRef.dispose();\r\n      this._overlayRef = null;\r\n    }\r\n\r\n    this._cleanUpSubscriptions();\r\n  }\r\n\r\n  /** Whether the menu is open. */\r\n  get menuOpen(): boolean {\r\n    return this._menuOpen;\r\n  }\r\n\r\n  /** The text direction of the containing app. */\r\n  get dir(): Direction {\r\n    return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\r\n  }\r\n\r\n  /** Whether the menu triggers a sub-menu or a top-level one. */\r\n  triggersSubmenu(): boolean {\r\n    return !!(this._menuItemInstance && this._parentMenu);\r\n  }\r\n\r\n  /** Toggles the menu between the open and closed states. */\r\n  toggleMenu(): void {\r\n    return this._menuOpen ? this.closeMenu() : this.openMenu();\r\n  }\r\n\r\n  /** Opens the menu. */\r\n  openMenu(): void {\r\n    if (this._menuOpen) {\r\n      return;\r\n    }\r\n\r\n    this._createOverlay().attach(this._portal);\r\n\r\n    if (this.menu.lazyContent) {\r\n      this.menu.lazyContent.attach(this.menuData);\r\n    }\r\n\r\n    this._closeSubscription = this._menuClosingActions().subscribe(() => this.closeMenu());\r\n    this._initMenu();\r\n\r\n    if (this.menu instanceof MatMenu) {\r\n      this.menu._startAnimation();\r\n    }\r\n  }\r\n\r\n  /** Closes the menu. */\r\n  closeMenu(): void {\r\n    this.menu.close.emit();\r\n  }\r\n\r\n  /**\r\n   * Focuses the menu trigger.\r\n   * @param origin Source of the menu trigger's focus.\r\n   */\r\n  focus(origin: FocusOrigin = 'program') {\r\n    if (this._focusMonitor) {\r\n      this._focusMonitor.focusVia(this._element.nativeElement, origin);\r\n    } else {\r\n      this._element.nativeElement.focus();\r\n    }\r\n  }\r\n\r\n  /** Closes the menu and does the necessary cleanup. */\r\n  private _destroyMenu() {\r\n    if (this._overlayRef && this.menuOpen) {\r\n      this._resetMenu();\r\n      this._closeSubscription.unsubscribe();\r\n      this._overlayRef.detach();\r\n\r\n      if (this.menu instanceof MatMenu) {\r\n        this.menu._resetAnimation();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * This method sets the menu state to open and focuses the first item if\r\n   * the menu was opened via the keyboard.\r\n   */\r\n  private _initMenu(): void {\r\n    this.menu.parentMenu = this.triggersSubmenu() ? this._parentMenu : undefined;\r\n    this.menu.direction = this.dir;\r\n    this._setMenuElevation();\r\n    this._setIsMenuOpen(true);\r\n    this.menu.focusFirstItem(this._openedByMouse ? 'mouse' : 'program');\r\n  }\r\n\r\n  /** Updates the menu elevation based on the amount of parent menus that it has. */\r\n  private _setMenuElevation(): void {\r\n    if (this.menu.setElevation) {\r\n      let depth = 0;\r\n      let parentMenu = this.menu.parentMenu;\r\n\r\n      while (parentMenu) {\r\n        depth++;\r\n        parentMenu = parentMenu.parentMenu;\r\n      }\r\n\r\n      this.menu.setElevation(depth);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * This method resets the menu when it's closed, most importantly restoring\r\n   * focus to the menu trigger if the menu was opened via the keyboard.\r\n   */\r\n  private _resetMenu(): void {\r\n    this._setIsMenuOpen(false);\r\n\r\n    // We should reset focus if the user is navigating using a keyboard or\r\n    // if we have a top-level trigger which might cause focus to be lost\r\n    // when clicking on the backdrop.\r\n    if (!this._openedByMouse) {\r\n      // Note that the focus style will show up both for `program` and\r\n      // `keyboard` so we don't have to specify which one it is.\r\n      this.focus();\r\n    } else if (!this.triggersSubmenu()) {\r\n      this.focus('mouse');\r\n    }\r\n\r\n    this._openedByMouse = false;\r\n  }\r\n\r\n  // set state rather than toggle to support triggers sharing a menu\r\n  private _setIsMenuOpen(isOpen: boolean): void {\r\n    this._menuOpen = isOpen;\r\n    this._menuOpen ? this.menuOpened.emit() : this.menuClosed.emit();\r\n\r\n    if (this.triggersSubmenu()) {\r\n      this._menuItemInstance._highlighted = isOpen;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * This method checks that a valid instance of MatMenu has been passed into\r\n   * matMenuTriggerFor. If not, an exception is thrown.\r\n   */\r\n  private _checkMenu() {\r\n    if (!this.menu) {\r\n      throwMatMenuMissingError();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * This method creates the overlay from the provided menu's template and saves its\r\n   * OverlayRef so that it can be attached to the DOM when openMenu is called.\r\n   */\r\n  private _createOverlay(): OverlayRef {\r\n    if (!this._overlayRef) {\r\n      this._portal = new TemplatePortal(this.menu.templateRef, this._viewContainerRef);\r\n      const config = this._getOverlayConfig();\r\n      this._subscribeToPositions(config.positionStrategy as ConnectedPositionStrategy);\r\n      this._overlayRef = this._overlay.create(config);\r\n    }\r\n\r\n    return this._overlayRef;\r\n  }\r\n\r\n  /**\r\n   * This method builds the configuration object needed to create the overlay, the OverlayState.\r\n   * @returns OverlayConfig\r\n   */\r\n  private _getOverlayConfig(): OverlayConfig {\r\n    return new OverlayConfig({\r\n      positionStrategy: this._getPosition(),\r\n      hasBackdrop: !this.triggersSubmenu(),\r\n      backdropClass: 'cdk-overlay-transparent-backdrop',\r\n      direction: this.dir,\r\n      scrollStrategy: this._scrollStrategy()\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Listens to changes in the position of the overlay and sets the correct classes\r\n   * on the menu based on the new position. This ensures the animation origin is always\r\n   * correct, even if a fallback position is used for the overlay.\r\n   */\r\n  private _subscribeToPositions(position: ConnectedPositionStrategy): void {\r\n    position.onPositionChange.subscribe(change => {\r\n      const posX: MenuPositionX = change.connectionPair.overlayX === 'start' ? 'after' : 'before';\r\n      const posY: MenuPositionY = change.connectionPair.overlayY === 'top' ? 'below' : 'above';\r\n\r\n      this.menu.setPositionClasses(posX, posY);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * This method builds the position strategy for the overlay, so the menu is properly connected\r\n   * to the trigger.\r\n   * @returns ConnectedPositionStrategy\r\n   */\r\n  private _getPosition(): ConnectedPositionStrategy {\r\n    let [originX, originFallbackX]: HorizontalConnectionPos[] =\r\n        this.menu.xPosition === 'before' ? ['end', 'start'] : ['start', 'end'];\r\n\r\n    let [overlayY, overlayFallbackY]: VerticalConnectionPos[] =\r\n        this.menu.yPosition === 'above' ? ['bottom', 'top'] : ['top', 'bottom'];\r\n\r\n    let [originY, originFallbackY] = [overlayY, overlayFallbackY];\r\n    let [overlayX, overlayFallbackX] = [originX, originFallbackX];\r\n    let offsetY = 0;\r\n\r\n    if (this.triggersSubmenu()) {\r\n      // When the menu is a sub-menu, it should always align itself\r\n      // to the edges of the trigger, instead of overlapping it.\r\n      overlayFallbackX = originX = this.menu.xPosition === 'before' ? 'start' : 'end';\r\n      originFallbackX = overlayX = originX === 'end' ? 'start' : 'end';\r\n      offsetY = overlayY === 'bottom' ? MENU_PANEL_TOP_PADDING : -MENU_PANEL_TOP_PADDING;\r\n    } else if (!this.menu.overlapTrigger) {\r\n      originY = overlayY === 'top' ? 'bottom' : 'top';\r\n      originFallbackY = overlayFallbackY === 'top' ? 'bottom' : 'top';\r\n    }\r\n\r\n    return this._overlay.position()\r\n        .connectedTo(this._element, {originX, originY}, {overlayX, overlayY})\r\n        .withDirection(this.dir)\r\n        .withOffsetY(offsetY)\r\n        .withFallbackPosition(\r\n            {originX: originFallbackX, originY},\r\n            {overlayX: overlayFallbackX, overlayY})\r\n        .withFallbackPosition(\r\n            {originX, originY: originFallbackY},\r\n            {overlayX, overlayY: overlayFallbackY},\r\n            undefined, -offsetY)\r\n        .withFallbackPosition(\r\n            {originX: originFallbackX, originY: originFallbackY},\r\n            {overlayX: overlayFallbackX, overlayY: overlayFallbackY},\r\n            undefined, -offsetY);\r\n  }\r\n\r\n  /** Cleans up the active subscriptions. */\r\n  private _cleanUpSubscriptions(): void {\r\n    this._closeSubscription.unsubscribe();\r\n    this._hoverSubscription.unsubscribe();\r\n  }\r\n\r\n  /** Returns a stream that emits whenever an action that should close the menu occurs. */\r\n  private _menuClosingActions() {\r\n    const backdrop = this._overlayRef!.backdropClick();\r\n    const detachments = this._overlayRef!.detachments();\r\n    const parentClose = this._parentMenu ? this._parentMenu.close : observableOf();\r\n    const hover = this._parentMenu ? this._parentMenu._hovered().pipe(\r\n      filter(active => active !== this._menuItemInstance),\r\n      filter(() => this._menuOpen)\r\n    ) : observableOf();\r\n\r\n    return merge(backdrop, parentClose, hover, detachments);\r\n  }\r\n\r\n  /** Handles mouse presses on the trigger. */\r\n  _handleMousedown(event: MouseEvent): void {\r\n    if (!isFakeMousedownFromScreenReader(event)) {\r\n      this._openedByMouse = true;\r\n\r\n      // Since clicking on the trigger won't close the menu if it opens a sub-menu,\r\n      // we should prevent focus from moving onto it via click to avoid the\r\n      // highlight from lingering on the menu item.\r\n      if (this.triggersSubmenu()) {\r\n        event.preventDefault();\r\n      }\r\n    }\r\n  }\r\n\r\n  /** Handles key presses on the trigger. */\r\n  _handleKeydown(event: KeyboardEvent): void {\r\n    const keyCode = event.keyCode;\r\n\r\n    if (this.triggersSubmenu() && (\r\n            (keyCode === RIGHT_ARROW && this.dir === 'ltr') ||\r\n            (keyCode === LEFT_ARROW && this.dir === 'rtl'))) {\r\n      this.openMenu();\r\n    }\r\n  }\r\n\r\n  /** Handles click events on the trigger. */\r\n  _handleClick(event: MouseEvent): void {\r\n    if (this.triggersSubmenu()) {\r\n      // Stop event propagation to avoid closing the parent menu.\r\n      event.stopPropagation();\r\n      this.openMenu();\r\n    } else {\r\n      this.toggleMenu();\r\n    }\r\n  }\r\n\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {AnimationEvent} from '@angular/animations';\r\nimport {FocusKeyManager} from '@angular/cdk/a11y';\r\nimport {Direction} from '@angular/cdk/bidi';\r\nimport {ESCAPE, LEFT_ARROW, RIGHT_ARROW} from '@angular/cdk/keycodes';\r\nimport {startWith} from 'rxjs/operators/startWith';\r\nimport {switchMap} from 'rxjs/operators/switchMap';\r\nimport {take} from 'rxjs/operators/take';\r\nimport {\r\n  AfterContentInit,\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  ContentChild,\r\n  ContentChildren,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Inject,\r\n  InjectionToken,\r\n  Input,\r\n  OnDestroy,\r\n  Output,\r\n  QueryList,\r\n  TemplateRef,\r\n  ViewChild,\r\n  ViewEncapsulation,\r\n  NgZone,\r\n} from '@angular/core';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport {merge} from 'rxjs/observable/merge';\r\nimport {Subscription} from 'rxjs/Subscription';\r\nimport {matMenuAnimations} from './menu-animations';\r\nimport {throwMatMenuInvalidPositionX, throwMatMenuInvalidPositionY} from './menu-errors';\r\nimport {MatMenuItem} from './menu-item';\r\nimport {MatMenuPanel} from './menu-panel';\r\nimport {MatMenuContent} from './menu-content';\r\nimport {MenuPositionX, MenuPositionY} from './menu-positions';\r\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\r\nimport {FocusOrigin} from '@angular/cdk/a11y';\r\n\r\n\r\n/** Default `mat-menu` options that can be overridden. */\r\nexport interface MatMenuDefaultOptions {\r\n  /** The x-axis position of the menu. */\r\n  xPosition: MenuPositionX;\r\n\r\n  /** The y-axis position of the menu. */\r\n  yPosition: MenuPositionY;\r\n\r\n  /** Whether the menu should overlap the menu trigger. */\r\n  overlapTrigger: boolean;\r\n}\r\n\r\n/** Injection token to be used to override the default options for `mat-menu`. */\r\nexport const MAT_MENU_DEFAULT_OPTIONS =\r\n    new InjectionToken<MatMenuDefaultOptions>('mat-menu-default-options');\r\n\r\n/**\r\n * Start elevation for the menu panel.\r\n * @docs-private\r\n */\r\nconst MAT_MENU_BASE_ELEVATION = 2;\r\n\r\n\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'mat-menu',\r\n  templateUrl: 'menu.html',\r\n  styleUrls: ['menu.css'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  encapsulation: ViewEncapsulation.None,\r\n  preserveWhitespaces: false,\r\n  animations: [\r\n    matMenuAnimations.transformMenu,\r\n    matMenuAnimations.fadeInItems\r\n  ],\r\n  exportAs: 'matMenu'\r\n})\r\nexport class MatMenu implements AfterContentInit, MatMenuPanel, OnDestroy {\r\n  private _keyManager: FocusKeyManager<MatMenuItem>;\r\n  private _xPosition: MenuPositionX = this._defaultOptions.xPosition;\r\n  private _yPosition: MenuPositionY = this._defaultOptions.yPosition;\r\n  private _previousElevation: string;\r\n\r\n  /** Subscription to tab events on the menu panel */\r\n  private _tabSubscription = Subscription.EMPTY;\r\n\r\n  /** Config object to be passed into the menu's ngClass */\r\n  _classList: {[key: string]: boolean} = {};\r\n\r\n  /** Current state of the panel animation. */\r\n  _panelAnimationState: 'void' | 'enter-start' | 'enter' = 'void';\r\n\r\n  /** Parent menu of the current menu panel. */\r\n  parentMenu: MatMenuPanel | undefined;\r\n\r\n  /** Layout direction of the menu. */\r\n  direction: Direction;\r\n\r\n  /** Position of the menu in the X axis. */\r\n  @Input()\r\n  get xPosition(): MenuPositionX { return this._xPosition; }\r\n  set xPosition(value: MenuPositionX) {\r\n    if (value !== 'before' && value !== 'after') {\r\n      throwMatMenuInvalidPositionX();\r\n    }\r\n    this._xPosition = value;\r\n    this.setPositionClasses();\r\n  }\r\n\r\n  /** Position of the menu in the Y axis. */\r\n  @Input()\r\n  get yPosition(): MenuPositionY { return this._yPosition; }\r\n  set yPosition(value: MenuPositionY) {\r\n    if (value !== 'above' && value !== 'below') {\r\n      throwMatMenuInvalidPositionY();\r\n    }\r\n    this._yPosition = value;\r\n    this.setPositionClasses();\r\n  }\r\n\r\n  /** @docs-private */\r\n  @ViewChild(TemplateRef) templateRef: TemplateRef<any>;\r\n\r\n  /** List of the items inside of a menu. */\r\n  @ContentChildren(MatMenuItem) items: QueryList<MatMenuItem>;\r\n\r\n  /**\r\n   * Menu content that will be rendered lazily.\r\n   * @docs-private\r\n   */\r\n  @ContentChild(MatMenuContent) lazyContent: MatMenuContent;\r\n\r\n  /** Whether the menu should overlap its trigger. */\r\n  @Input()\r\n  get overlapTrigger(): boolean { return this._overlapTrigger; }\r\n  set overlapTrigger(value: boolean) {\r\n    this._overlapTrigger = coerceBooleanProperty(value);\r\n  }\r\n  private _overlapTrigger: boolean = this._defaultOptions.overlapTrigger;\r\n\r\n  /**\r\n   * This method takes classes set on the host mat-menu element and applies them on the\r\n   * menu template that displays in the overlay container.  Otherwise, it's difficult\r\n   * to style the containing menu from outside the component.\r\n   * @param classes list of class names\r\n   */\r\n  @Input('class')\r\n  set panelClass(classes: string) {\r\n    if (classes && classes.length) {\r\n      this._classList = classes.split(' ').reduce((obj: any, className: string) => {\r\n        obj[className] = true;\r\n        return obj;\r\n      }, {});\r\n\r\n      this._elementRef.nativeElement.className = '';\r\n      this.setPositionClasses();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * This method takes classes set on the host mat-menu element and applies them on the\r\n   * menu template that displays in the overlay container.  Otherwise, it's difficult\r\n   * to style the containing menu from outside the component.\r\n   * @deprecated Use `panelClass` instead.\r\n   * @deletion-target 6.0.0\r\n   */\r\n  @Input()\r\n  get classList(): string { return this.panelClass; }\r\n  set classList(classes: string) { this.panelClass = classes; }\r\n\r\n  /** Event emitted when the menu is closed. */\r\n  @Output() readonly closed: EventEmitter<void | 'click' | 'keydown'> =\r\n      new EventEmitter<void | 'click' | 'keydown'>();\r\n\r\n  /**\r\n   * Event emitted when the menu is closed.\r\n   * @deprecated Switch to `closed` instead\r\n   * @deletion-target 6.0.0\r\n   */\r\n  @Output() close = this.closed;\r\n\r\n  constructor(\r\n    private _elementRef: ElementRef,\r\n    private _ngZone: NgZone,\r\n    @Inject(MAT_MENU_DEFAULT_OPTIONS) private _defaultOptions: MatMenuDefaultOptions) { }\r\n\r\n  ngAfterContentInit() {\r\n    this._keyManager = new FocusKeyManager<MatMenuItem>(this.items).withWrap().withTypeAhead();\r\n    this._tabSubscription = this._keyManager.tabOut.subscribe(() => this.close.emit('keydown'));\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this._tabSubscription.unsubscribe();\r\n    this.closed.complete();\r\n  }\r\n\r\n  /** Stream that emits whenever the hovered menu item changes. */\r\n  _hovered(): Observable<MatMenuItem> {\r\n    if (this.items) {\r\n      return this.items.changes.pipe(\r\n        startWith(this.items),\r\n        switchMap(items => merge(...items.map(item => item._hovered)))\r\n      );\r\n    }\r\n\r\n    return this._ngZone.onStable\r\n      .asObservable()\r\n      .pipe(take(1), switchMap(() => this._hovered()));\r\n  }\r\n\r\n  /** Handle a keyboard event from the menu, delegating to the appropriate action. */\r\n  _handleKeydown(event: KeyboardEvent) {\r\n    switch (event.keyCode) {\r\n      case ESCAPE:\r\n        this.closed.emit('keydown');\r\n        event.stopPropagation();\r\n      break;\r\n      case LEFT_ARROW:\r\n        if (this.parentMenu && this.direction === 'ltr') {\r\n          this.closed.emit('keydown');\r\n        }\r\n      break;\r\n      case RIGHT_ARROW:\r\n        if (this.parentMenu && this.direction === 'rtl') {\r\n          this.closed.emit('keydown');\r\n        }\r\n      break;\r\n      default:\r\n        this._keyManager.onKeydown(event);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Focus the first item in the menu.\r\n   * @param origin Action from which the focus originated. Used to set the correct styling.\r\n   */\r\n  focusFirstItem(origin: FocusOrigin = 'program'): void {\r\n    // When the content is rendered lazily, it takes a bit before the items are inside the DOM.\r\n    if (this.lazyContent) {\r\n      this._ngZone.onStable.asObservable()\r\n        .pipe(take(1))\r\n        .subscribe(() => this._keyManager.setFocusOrigin(origin).setFirstItemActive());\r\n    } else {\r\n      this._keyManager.setFocusOrigin(origin).setFirstItemActive();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Resets the active item in the menu. This is used when the menu is opened, allowing\r\n   * the user to start from the first option when pressing the down arrow.\r\n   */\r\n  resetActiveItem() {\r\n    this._keyManager.setActiveItem(-1);\r\n  }\r\n\r\n  /**\r\n   * It's necessary to set position-based classes to ensure the menu panel animation\r\n   * folds out from the correct direction.\r\n   */\r\n  setPositionClasses(posX: MenuPositionX = this.xPosition, posY: MenuPositionY = this.yPosition) {\r\n    this._classList['mat-menu-before'] = posX === 'before';\r\n    this._classList['mat-menu-after'] = posX === 'after';\r\n    this._classList['mat-menu-above'] = posY === 'above';\r\n    this._classList['mat-menu-below'] = posY === 'below';\r\n  }\r\n\r\n  /**\r\n   * Sets the menu panel elevation.\r\n   * @param depth Number of parent menus that come before the menu.\r\n   */\r\n  setElevation(depth: number): void {\r\n    // The elevation starts at the base and increases by one for each level.\r\n    const newElevation = `mat-elevation-z${MAT_MENU_BASE_ELEVATION + depth}`;\r\n    const customElevation = Object.keys(this._classList).find(c => c.startsWith('mat-elevation-z'));\r\n\r\n    if (!customElevation || customElevation === this._previousElevation) {\r\n      if (this._previousElevation) {\r\n        this._classList[this._previousElevation] = false;\r\n      }\r\n\r\n      this._classList[newElevation] = true;\r\n      this._previousElevation = newElevation;\r\n    }\r\n  }\r\n\r\n  /** Starts the enter animation. */\r\n  _startAnimation() {\r\n    this._panelAnimationState = 'enter-start';\r\n  }\r\n\r\n  /** Resets the panel animation to its initial state. */\r\n  _resetAnimation() {\r\n    this._panelAnimationState = 'void';\r\n  }\r\n\r\n  /** Callback that is invoked when the panel animation completes. */\r\n  _onAnimationDone(event: AnimationEvent) {\r\n    // After the initial expansion is done, trigger the second phase of the enter animation.\r\n    if (event.toState === 'enter-start') {\r\n      this._panelAnimationState = 'enter';\r\n    }\r\n  }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {\r\n  Directive,\r\n  TemplateRef,\r\n  ComponentFactoryResolver,\r\n  ApplicationRef,\r\n  Injector,\r\n  ViewContainerRef,\r\n  Inject,\r\n  OnDestroy,\r\n} from '@angular/core';\r\nimport {TemplatePortal, DomPortalOutlet} from '@angular/cdk/portal';\r\nimport {DOCUMENT} from '@angular/common';\r\n\r\n/**\r\n * Menu content that will be rendered lazily once the menu is opened.\r\n */\r\n@Directive({\r\n  selector: 'ng-template[matMenuContent]'\r\n})\r\nexport class MatMenuContent implements OnDestroy {\r\n  private _portal: TemplatePortal<any>;\r\n  private _outlet: DomPortalOutlet;\r\n\r\n  constructor(\r\n    private _template: TemplateRef<any>,\r\n    private _componentFactoryResolver: ComponentFactoryResolver,\r\n    private _appRef: ApplicationRef,\r\n    private _injector: Injector,\r\n    private _viewContainerRef: ViewContainerRef,\r\n    @Inject(DOCUMENT) private _document: any) {}\r\n\r\n  /**\r\n   * Attaches the content with a particular context.\r\n   * @docs-private\r\n   */\r\n  attach(context: any = {}) {\r\n    if (!this._portal) {\r\n      this._portal = new TemplatePortal(this._template, this._viewContainerRef);\r\n    } else if (this._portal.isAttached) {\r\n      this._portal.detach();\r\n    }\r\n\r\n    if (!this._outlet) {\r\n      this._outlet = new DomPortalOutlet(this._document.createElement('div'),\r\n          this._componentFactoryResolver, this._appRef, this._injector);\r\n    }\r\n\r\n    const element: HTMLElement = this._template.elementRef.nativeElement;\r\n\r\n    // Because we support opening the same menu from different triggers (which in turn have their\r\n    // own `OverlayRef` panel), we have to re-insert the host element every time, otherwise we\r\n    // risk it staying attached to a pane that's no longer in the DOM.\r\n    element.parentNode!.insertBefore(this._outlet.outletElement, element);\r\n    this._portal.attach(this._outlet, context);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this._outlet) {\r\n      this._outlet.dispose();\r\n    }\r\n  }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {FocusableOption, FocusMonitor, FocusOrigin} from '@angular/cdk/a11y';\r\nimport {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  ElementRef,\r\n  OnDestroy,\r\n  ViewEncapsulation,\r\n  Inject,\r\n} from '@angular/core';\r\nimport {\r\n  CanDisable,\r\n  CanDisableRipple,\r\n  mixinDisabled,\r\n  mixinDisableRipple\r\n} from '@angular/material/core';\r\nimport {Subject} from 'rxjs/Subject';\r\nimport {DOCUMENT} from '@angular/common';\r\n\r\n// Boilerplate for applying mixins to MatMenuItem.\r\n/** @docs-private */\r\nexport class MatMenuItemBase {}\r\nexport const _MatMenuItemMixinBase = mixinDisableRipple(mixinDisabled(MatMenuItemBase));\r\n\r\n/**\r\n * This directive is intended to be used inside an mat-menu tag.\r\n * It exists mostly to set the role attribute.\r\n */\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: '[mat-menu-item]',\r\n  exportAs: 'matMenuItem',\r\n  inputs: ['disabled', 'disableRipple'],\r\n  host: {\r\n    'role': 'menuitem',\r\n    'class': 'mat-menu-item',\r\n    '[class.mat-menu-item-highlighted]': '_highlighted',\r\n    '[class.mat-menu-item-submenu-trigger]': '_triggersSubmenu',\r\n    '[attr.tabindex]': '_getTabIndex()',\r\n    '[attr.aria-disabled]': 'disabled.toString()',\r\n    '[attr.disabled]': 'disabled || null',\r\n    '(click)': '_checkDisabled($event)',\r\n    '(mouseenter)': '_emitHoverEvent()',\r\n  },\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  encapsulation: ViewEncapsulation.None,\r\n  preserveWhitespaces: false,\r\n  templateUrl: 'menu-item.html',\r\n})\r\nexport class MatMenuItem extends _MatMenuItemMixinBase\r\n    implements FocusableOption, CanDisable, CanDisableRipple, OnDestroy {\r\n\r\n  private _document: Document;\r\n\r\n  /** Stream that emits when the menu item is hovered. */\r\n  readonly _hovered: Subject<MatMenuItem> = new Subject<MatMenuItem>();\r\n\r\n  /** Whether the menu item is highlighted. */\r\n  _highlighted: boolean = false;\r\n\r\n  /** Whether the menu item acts as a trigger for a sub-menu. */\r\n  _triggersSubmenu: boolean = false;\r\n\r\n  constructor(\r\n    private _elementRef: ElementRef,\r\n    @Inject(DOCUMENT) document?: any,\r\n    private _focusMonitor?: FocusMonitor) {\r\n\r\n    // @deletion-target 6.0.0 make `_focusMonitor` and `document` required params.\r\n    super();\r\n\r\n    if (_focusMonitor) {\r\n      // Start monitoring the element so it gets the appropriate focused classes. We want\r\n      // to show the focus style for menu items only when the focus was not caused by a\r\n      // mouse or touch interaction.\r\n      _focusMonitor.monitor(this._getHostElement(), false);\r\n    }\r\n\r\n    this._document = document;\r\n  }\r\n\r\n  /** Focuses the menu item. */\r\n  focus(origin: FocusOrigin = 'program'): void {\r\n    if (this._focusMonitor) {\r\n      this._focusMonitor.focusVia(this._getHostElement(), origin);\r\n    } else {\r\n      this._getHostElement().focus();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this._focusMonitor) {\r\n      this._focusMonitor.stopMonitoring(this._getHostElement());\r\n    }\r\n\r\n    this._hovered.complete();\r\n  }\r\n\r\n  /** Used to set the `tabindex`. */\r\n  _getTabIndex(): string {\r\n    return this.disabled ? '-1' : '0';\r\n  }\r\n\r\n  /** Returns the host DOM element. */\r\n  _getHostElement(): HTMLElement {\r\n    return this._elementRef.nativeElement;\r\n  }\r\n\r\n  /** Prevents the default element actions if it is disabled. */\r\n  _checkDisabled(event: Event): void {\r\n    if (this.disabled) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n    }\r\n  }\r\n\r\n  /** Emits to the hover stream. */\r\n  _emitHoverEvent() {\r\n    if (!this.disabled) {\r\n      this._hovered.next(this);\r\n    }\r\n  }\r\n\r\n  /** Gets the label to be used when determining whether the option should be focused. */\r\n  getLabel(): string {\r\n    const element: HTMLElement = this._elementRef.nativeElement;\r\n    const textNodeType = this._document ? this._document.TEXT_NODE : 3;\r\n    let output = '';\r\n\r\n    if (element.childNodes) {\r\n      const length = element.childNodes.length;\r\n\r\n      // Go through all the top-level text nodes and extract their text.\r\n      // We skip anything that's not a text node to prevent the text from\r\n      // being thrown off by something like an icon.\r\n      for (let i = 0; i < length; i++) {\r\n        if (element.childNodes[i].nodeType === textNodeType) {\r\n          output += element.childNodes[i].textContent;\r\n        }\r\n      }\r\n    }\r\n\r\n    return output.trim();\r\n  }\r\n\r\n}\r\n\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\n/**\r\n * Throws an exception for the case when menu trigger doesn't have a valid mat-menu instance\r\n * @docs-private\r\n */\r\nexport function throwMatMenuMissingError() {\r\n  throw Error(`mat-menu-trigger: must pass in an mat-menu instance.\r\n\r\n    Example:\r\n      <mat-menu #menu=\"matMenu\"></mat-menu>\r\n      <button [matMenuTriggerFor]=\"menu\"></button>`);\r\n}\r\n\r\n/**\r\n * Throws an exception for the case when menu's x-position value isn't valid.\r\n * In other words, it doesn't match 'before' or 'after'.\r\n * @docs-private\r\n */\r\nexport function throwMatMenuInvalidPositionX() {\r\n  throw Error(`x-position value must be either 'before' or after'.\r\n      Example: <mat-menu x-position=\"before\" #menu=\"matMenu\"></mat-menu>`);\r\n}\r\n\r\n/**\r\n * Throws an exception for the case when menu's y-position value isn't valid.\r\n * In other words, it doesn't match 'above' or 'below'.\r\n * @docs-private\r\n */\r\nexport function throwMatMenuInvalidPositionY() {\r\n  throw Error(`y-position value must be either 'above' or below'.\r\n      Example: <mat-menu y-position=\"above\" #menu=\"matMenu\"></mat-menu>`);\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport{\r\n  trigger,\r\n  state,\r\n  style,\r\n  animate,\r\n  transition,\r\n  AnimationTriggerMetadata,\r\n} from '@angular/animations';\r\n\r\n/**\r\n * Animations used by the mat-menu component.\r\n * Animation duration and timing values are based on:\r\n * https://material.io/guidelines/components/menus.html#menus-usage\r\n */\r\nexport const matMenuAnimations: {\r\n  readonly transformMenu: AnimationTriggerMetadata;\r\n  readonly fadeInItems: AnimationTriggerMetadata;\r\n} = {\r\n  /**\r\n   * This animation controls the menu panel's entry and exit from the page.\r\n   *\r\n   * When the menu panel is added to the DOM, it scales in and fades in its border.\r\n   *\r\n   * When the menu panel is removed from the DOM, it simply fades out after a brief\r\n   * delay to display the ripple.\r\n   */\r\n  transformMenu: trigger('transformMenu', [\r\n    // TODO(kara): switch to :enter and :leave once Mobile Safari is sorted out.\r\n    state('void', style({\r\n      opacity: 0,\r\n      // This starts off from 0.01, instead of 0, because there's an issue in the Angular animations\r\n      // as of 4.2, which causes the animation to be skipped if it starts from 0.\r\n      transform: 'scale(0.01, 0.01)'\r\n    })),\r\n    state('enter-start', style({\r\n      opacity: 1,\r\n      transform: 'scale(1, 0.5)'\r\n    })),\r\n    state('enter', style({\r\n      transform: 'scale(1, 1)'\r\n    })),\r\n    transition('void => enter-start', animate('100ms linear')),\r\n    transition('enter-start => enter', animate('300ms cubic-bezier(0.25, 0.8, 0.25, 1)')),\r\n    transition('* => void', animate('150ms 50ms linear', style({opacity: 0})))\r\n  ]),\r\n\r\n\r\n  /**\r\n   * This animation fades in the background color and content of the menu panel\r\n   * after its containing element is scaled in.\r\n   */\r\n  fadeInItems: trigger('fadeInItems', [\r\n    state('showing', style({opacity: 1})),\r\n    transition('void => *', [\r\n      style({opacity: 0}),\r\n      animate('400ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)')\r\n    ])\r\n  ])\r\n};\r\n\r\n/**\r\n * @deprecated\r\n * @deletion-target 7.0.0\r\n */\r\nexport const fadeInItems = matMenuAnimations.fadeInItems;\r\n\r\n/**\r\n * @deprecated\r\n * @deletion-target 7.0.0\r\n */\r\nexport const transformMenu = matMenuAnimations.transformMenu;\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {CommonModule} from '@angular/common';\r\nimport {NgModule} from '@angular/core';\r\nimport {\r\n  MatCommonModule,\r\n  MatLineModule,\r\n  MatPseudoCheckboxModule,\r\n  MatRippleModule,\r\n} from '@angular/material/core';\r\nimport {\r\n  MatList,\r\n  MatNavList,\r\n  MatListAvatarCssMatStyler,\r\n  MatListIconCssMatStyler,\r\n  MatListItem,\r\n  MatListSubheaderCssMatStyler,\r\n} from './list';\r\nimport {MatListOption, MatSelectionList} from './selection-list';\r\nimport {MatDividerModule} from '@angular/material/divider';\r\n\r\n\r\n@NgModule({\r\n  imports: [MatLineModule, MatRippleModule, MatCommonModule, MatPseudoCheckboxModule, CommonModule],\r\n  exports: [\r\n    MatList,\r\n    MatNavList,\r\n    MatListItem,\r\n    MatListAvatarCssMatStyler,\r\n    MatLineModule,\r\n    MatCommonModule,\r\n    MatListIconCssMatStyler,\r\n    MatListSubheaderCssMatStyler,\r\n    MatPseudoCheckboxModule,\r\n    MatSelectionList,\r\n    MatListOption,\r\n    MatDividerModule\r\n  ],\r\n  declarations: [\r\n    MatList,\r\n    MatNavList,\r\n    MatListItem,\r\n    MatListAvatarCssMatStyler,\r\n    MatListIconCssMatStyler,\r\n    MatListSubheaderCssMatStyler,\r\n    MatSelectionList,\r\n    MatListOption\r\n  ],\r\n})\r\nexport class MatListModule {}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {FocusableOption, FocusKeyManager} from '@angular/cdk/a11y';\r\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\r\nimport {SelectionModel} from '@angular/cdk/collections';\r\nimport {SPACE, ENTER, HOME, END} from '@angular/cdk/keycodes';\r\nimport {\r\n  AfterContentInit,\r\n  Attribute,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ContentChildren,\r\n  ElementRef,\r\n  EventEmitter,\r\n  forwardRef,\r\n  Inject,\r\n  Input,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output,\r\n  QueryList,\r\n  ViewChild,\r\n  ViewEncapsulation,\r\n} from '@angular/core';\r\nimport {\r\n  CanDisable,\r\n  CanDisableRipple,\r\n  MatLine,\r\n  MatLineSetter,\r\n  mixinDisabled,\r\n  mixinDisableRipple,\r\n} from '@angular/material/core';\r\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\r\nimport {Subscription} from 'rxjs/Subscription';\r\n\r\n\r\n/** @docs-private */\r\nexport class MatSelectionListBase {}\r\nexport const _MatSelectionListMixinBase = mixinDisableRipple(mixinDisabled(MatSelectionListBase));\r\n\r\n/** @docs-private */\r\nexport class MatListOptionBase {}\r\nexport const _MatListOptionMixinBase = mixinDisableRipple(MatListOptionBase);\r\n\r\n/** @docs-private */\r\nexport const MAT_SELECTION_LIST_VALUE_ACCESSOR: any = {\r\n  provide: NG_VALUE_ACCESSOR,\r\n  useExisting: forwardRef(() => MatSelectionList),\r\n  multi: true\r\n};\r\n\r\n/**\r\n * Change event object emitted by MatListOption whenever the selected state changes.\r\n * @deprecated Use the `MatSelectionListChange` event on the selection list instead.\r\n * @deletion-target 6.0.0\r\n */\r\nexport class MatListOptionChange {\r\n  constructor(\r\n    /** Reference to the list option that changed. */\r\n    public source: MatListOption,\r\n    /** The new selected state of the option. */\r\n    public selected: boolean) {}\r\n}\r\n\r\n/** Change event that is being fired whenever the selected state of an option changes. */\r\nexport class MatSelectionListChange {\r\n  constructor(\r\n    /** Reference to the selection list that emitted the event. */\r\n    public source: MatSelectionList,\r\n    /** Reference to the option that has been changed. */\r\n    public option: MatListOption) {}\r\n}\r\n\r\n/**\r\n * Component for list-options of selection-list. Each list-option can automatically\r\n * generate a checkbox and can put current item into the selectionModel of selection-list\r\n * if the current item is selected.\r\n */\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'mat-list-option',\r\n  exportAs: 'matListOption',\r\n  inputs: ['disableRipple'],\r\n  host: {\r\n    'role': 'option',\r\n    'class': 'mat-list-item mat-list-option',\r\n    '(focus)': '_handleFocus()',\r\n    '(blur)': '_handleBlur()',\r\n    '(click)': '_handleClick()',\r\n    'tabindex': '-1',\r\n    '[class.mat-list-item-disabled]': 'disabled',\r\n    '[class.mat-list-item-focus]': '_hasFocus',\r\n    '[attr.aria-selected]': 'selected.toString()',\r\n    '[attr.aria-disabled]': 'disabled.toString()',\r\n  },\r\n  templateUrl: 'list-option.html',\r\n  encapsulation: ViewEncapsulation.None,\r\n  preserveWhitespaces: false,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class MatListOption extends _MatListOptionMixinBase\r\n    implements AfterContentInit, OnDestroy, OnInit, FocusableOption, CanDisableRipple {\r\n\r\n  private _selected = false;\r\n  private _disabled = false;\r\n\r\n  /** Whether the option has focus. */\r\n  _hasFocus: boolean = false;\r\n\r\n  @ContentChildren(MatLine) _lines: QueryList<MatLine>;\r\n\r\n  /** DOM element containing the item's text. */\r\n  @ViewChild('text') _text: ElementRef;\r\n\r\n  /** Whether the label should appear before or after the checkbox. Defaults to 'after' */\r\n  @Input() checkboxPosition: 'before' | 'after' = 'after';\r\n\r\n  /** Value of the option */\r\n  @Input() value: any;\r\n\r\n  /** Whether the option is disabled. */\r\n  @Input()\r\n  get disabled() { return this._disabled || (this.selectionList && this.selectionList.disabled); }\r\n  set disabled(value: any) {\r\n    const newValue = coerceBooleanProperty(value);\r\n\r\n    if (newValue !== this._disabled) {\r\n      this._disabled = newValue;\r\n      this._changeDetector.markForCheck();\r\n    }\r\n  }\r\n\r\n  /** Whether the option is selected. */\r\n  @Input()\r\n  get selected(): boolean { return this.selectionList.selectedOptions.isSelected(this); }\r\n  set selected(value: boolean) {\r\n    const isSelected = coerceBooleanProperty(value);\r\n\r\n    if (isSelected !== this._selected) {\r\n      this._setSelected(isSelected);\r\n      this.selectionList._reportValueChange();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Emits a change event whenever the selected state of an option changes.\r\n   * @deprecated Use the `selectionChange` event on the `<mat-selection-list>` instead.\r\n   * @deletion-target 6.0.0\r\n   */\r\n  @Output() readonly selectionChange: EventEmitter<MatListOptionChange> =\r\n    new EventEmitter<MatListOptionChange>();\r\n\r\n  constructor(private _element: ElementRef,\r\n              private _changeDetector: ChangeDetectorRef,\r\n              /** @docs-private */\r\n              @Inject(forwardRef(() => MatSelectionList)) public selectionList: MatSelectionList) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit() {\r\n    // List options that are selected at initialization can't be reported properly to the form\r\n    // control. This is because it takes some time until the selection-list knows about all\r\n    // available options. Also it can happen that the ControlValueAccessor has an initial value\r\n    // that should be used instead. Deferring the value change report to the next tick ensures\r\n    // that the form control value is not being overwritten.\r\n    const wasSelected = this._selected;\r\n\r\n    Promise.resolve().then(() => {\r\n      if (this._selected || wasSelected) {\r\n        this.selected = true;\r\n        this._changeDetector.markForCheck();\r\n      }\r\n    });\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    // TODO: consider turning the setter into a function, it doesn't do anything as a class.\r\n    // tslint:disable-next-line:no-unused-expression\r\n    new MatLineSetter(this._lines, this._element);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.selected) {\r\n      // We have to delay this until the next tick in order\r\n      // to avoid changed after checked errors.\r\n      Promise.resolve().then(() => this.selected = false);\r\n    }\r\n\r\n    this.selectionList._removeOptionFromList(this);\r\n  }\r\n\r\n  /** Toggles the selection state of the option. */\r\n  toggle(): void {\r\n    this.selected = !this.selected;\r\n  }\r\n\r\n  /** Allows for programmatic focusing of the option. */\r\n  focus(): void {\r\n    this._element.nativeElement.focus();\r\n  }\r\n\r\n  /**\r\n   * Returns the list item's text label. Implemented as a part of the FocusKeyManager.\r\n   * @docs-private\r\n   */\r\n  getLabel() {\r\n    return this._text ? this._text.nativeElement.textContent : '';\r\n  }\r\n\r\n  /** Whether this list item should show a ripple effect when clicked. */\r\n  _isRippleDisabled() {\r\n    return this.disabled || this.disableRipple || this.selectionList.disableRipple;\r\n  }\r\n\r\n  _handleClick() {\r\n    if (!this.disabled) {\r\n      this.toggle();\r\n\r\n      // Emit a change event if the selected state of the option changed through user interaction.\r\n      this.selectionList._emitChangeEvent(this);\r\n\r\n      // TODO: the `selectionChange` event on the option is deprecated. Remove that in the future.\r\n      this._emitDeprecatedChangeEvent();\r\n    }\r\n  }\r\n\r\n  _handleFocus() {\r\n    this._hasFocus = true;\r\n    this.selectionList._setFocusedOption(this);\r\n  }\r\n\r\n  _handleBlur() {\r\n    this._hasFocus = false;\r\n    this.selectionList._onTouched();\r\n  }\r\n\r\n  /** Retrieves the DOM element of the component host. */\r\n  _getHostElement(): HTMLElement {\r\n    return this._element.nativeElement;\r\n  }\r\n\r\n  /** Sets the selected state of the option. */\r\n  _setSelected(selected: boolean) {\r\n    if (selected === this._selected) {\r\n      return;\r\n    }\r\n\r\n    this._selected = selected;\r\n\r\n    if (selected) {\r\n      this.selectionList.selectedOptions.select(this);\r\n    } else {\r\n      this.selectionList.selectedOptions.deselect(this);\r\n    }\r\n\r\n    this._changeDetector.markForCheck();\r\n  }\r\n\r\n  /** Emits a selectionChange event for this option. */\r\n  _emitDeprecatedChangeEvent() {\r\n    // TODO: the `selectionChange` event on the option is deprecated. Remove that in the future.\r\n    this.selectionChange.emit(new MatListOptionChange(this, this.selected));\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * Material Design list component where each item is a selectable option. Behaves as a listbox.\r\n */\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'mat-selection-list',\r\n  exportAs: 'matSelectionList',\r\n  inputs: ['disabled', 'disableRipple', 'tabIndex'],\r\n  host: {\r\n    'role': 'listbox',\r\n    '[tabIndex]': 'tabIndex',\r\n    'class': 'mat-selection-list',\r\n    '(focus)': 'focus()',\r\n    '(blur)': '_onTouched()',\r\n    '(keydown)': '_keydown($event)',\r\n    '[attr.aria-disabled]': 'disabled.toString()',\r\n  },\r\n  template: '<ng-content></ng-content>',\r\n  styleUrls: ['list.css'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  providers: [MAT_SELECTION_LIST_VALUE_ACCESSOR],\r\n  preserveWhitespaces: false,\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class MatSelectionList extends _MatSelectionListMixinBase implements FocusableOption,\r\n    CanDisable, CanDisableRipple, AfterContentInit, ControlValueAccessor, OnDestroy {\r\n\r\n  /** The FocusKeyManager which handles focus. */\r\n  _keyManager: FocusKeyManager<MatListOption>;\r\n\r\n  /** The option components contained within this selection-list. */\r\n  @ContentChildren(MatListOption) options: QueryList<MatListOption>;\r\n\r\n  /** Emits a change event whenever the selected state of an option changes. */\r\n  @Output() readonly selectionChange: EventEmitter<MatSelectionListChange> =\r\n      new EventEmitter<MatSelectionListChange>();\r\n\r\n  /** Tabindex of the selection list. */\r\n  @Input() tabIndex: number = 0;\r\n\r\n  /** The currently selected options. */\r\n  selectedOptions: SelectionModel<MatListOption> = new SelectionModel<MatListOption>(true);\r\n\r\n  /** View to model callback that should be called whenever the selected options change. */\r\n  private _onChange: (value: any) => void = (_: any) => {};\r\n\r\n  /** Used for storing the values that were assigned before the options were initialized. */\r\n  private _tempValues: string[]|null;\r\n\r\n  private _modelChanges = Subscription.EMPTY;\r\n\r\n  /** View to model callback that should be called if the list or its options lost focus. */\r\n  _onTouched: () => void = () => {};\r\n\r\n  constructor(private _element: ElementRef, @Attribute('tabindex') tabIndex: string) {\r\n    super();\r\n\r\n    this.tabIndex = parseInt(tabIndex) || 0;\r\n  }\r\n\r\n  ngAfterContentInit(): void {\r\n    this._keyManager = new FocusKeyManager<MatListOption>(this.options)\r\n      .withWrap()\r\n      .withTypeAhead()\r\n      // Allow disabled items to be focusable. For accessibility reasons, there must be a way for\r\n      // screenreader users, that allows reading the different options of the list.\r\n      .skipPredicate(() => false);\r\n\r\n    if (this._tempValues) {\r\n      this._setOptionsFromValues(this._tempValues);\r\n      this._tempValues = null;\r\n    }\r\n\r\n    // Sync external changes to the model back to the options.\r\n    this._modelChanges = this.selectedOptions.onChange!.subscribe(event => {\r\n      if (event.added) {\r\n        for (let item of event.added) {\r\n          item.selected = true;\r\n        }\r\n      }\r\n\r\n      if (event.removed) {\r\n        for (let item of event.removed) {\r\n          item.selected = false;\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this._modelChanges.unsubscribe();\r\n  }\r\n\r\n  /** Focuses the last active list option. */\r\n  focus() {\r\n    this._element.nativeElement.focus();\r\n  }\r\n\r\n  /** Selects all of the options. */\r\n  selectAll() {\r\n    this.options.forEach(option => option._setSelected(true));\r\n    this._reportValueChange();\r\n  }\r\n\r\n  /** Deselects all of the options. */\r\n  deselectAll() {\r\n    this.options.forEach(option => option._setSelected(false));\r\n    this._reportValueChange();\r\n  }\r\n\r\n  /** Sets the focused option of the selection-list. */\r\n  _setFocusedOption(option: MatListOption) {\r\n    this._keyManager.updateActiveItemIndex(this._getOptionIndex(option));\r\n  }\r\n\r\n  /** Removes an option from the selection list and updates the active item. */\r\n  _removeOptionFromList(option: MatListOption) {\r\n    if (option._hasFocus) {\r\n      const optionIndex = this._getOptionIndex(option);\r\n\r\n      // Check whether the option is the last item\r\n      if (optionIndex > 0) {\r\n        this._keyManager.setPreviousItemActive();\r\n      } else if (optionIndex === 0 && this.options.length > 1) {\r\n        this._keyManager.setNextItemActive();\r\n      }\r\n    }\r\n  }\r\n\r\n  /** Passes relevant key presses to our key manager. */\r\n  _keydown(event: KeyboardEvent) {\r\n    switch (event.keyCode) {\r\n      case SPACE:\r\n      case ENTER:\r\n        if (!this.disabled) {\r\n          this._toggleSelectOnFocusedOption();\r\n\r\n          // Always prevent space from scrolling the page since the list has focus\r\n          event.preventDefault();\r\n        }\r\n        break;\r\n      case HOME:\r\n      case END:\r\n        event.keyCode === HOME ? this._keyManager.setFirstItemActive() :\r\n                                 this._keyManager.setLastItemActive();\r\n        event.preventDefault();\r\n        break;\r\n      default:\r\n        this._keyManager.onKeydown(event);\r\n    }\r\n  }\r\n\r\n  /** Reports a value change to the ControlValueAccessor */\r\n  _reportValueChange() {\r\n    if (this.options) {\r\n      this._onChange(this._getSelectedOptionValues());\r\n    }\r\n  }\r\n\r\n  /** Emits a change event if the selected state of an option changed. */\r\n  _emitChangeEvent(option: MatListOption) {\r\n    this.selectionChange.emit(new MatSelectionListChange(this, option));\r\n  }\r\n\r\n  /** Implemented as part of ControlValueAccessor. */\r\n  writeValue(values: string[]): void {\r\n    if (this.options) {\r\n      this._setOptionsFromValues(values || []);\r\n    } else {\r\n      this._tempValues = values;\r\n    }\r\n  }\r\n\r\n  /** Implemented as a part of ControlValueAccessor. */\r\n  setDisabledState(isDisabled: boolean): void {\r\n    if (this.options) {\r\n      this.options.forEach(option => option.disabled = isDisabled);\r\n    }\r\n  }\r\n\r\n  /** Implemented as part of ControlValueAccessor. */\r\n  registerOnChange(fn: (value: any) => void): void {\r\n    this._onChange = fn;\r\n  }\r\n\r\n  /** Implemented as part of ControlValueAccessor. */\r\n  registerOnTouched(fn: () => void): void {\r\n    this._onTouched = fn;\r\n  }\r\n\r\n  /** Returns the option with the specified value. */\r\n  private _getOptionByValue(value: string): MatListOption | undefined {\r\n    return this.options.find(option => option.value === value);\r\n  }\r\n\r\n  /** Sets the selected options based on the specified values. */\r\n  private _setOptionsFromValues(values: string[]) {\r\n    this.options.forEach(option => option._setSelected(false));\r\n\r\n    values\r\n      .map(value => this._getOptionByValue(value))\r\n      .filter(Boolean)\r\n      .forEach(option => option!._setSelected(true));\r\n  }\r\n\r\n  /** Returns the values of the selected options. */\r\n  private _getSelectedOptionValues(): string[] {\r\n    return this.options.filter(option => option.selected).map(option => option.value);\r\n  }\r\n\r\n  /** Toggles the selected state of the currently focused option. */\r\n  private _toggleSelectOnFocusedOption(): void {\r\n    let focusedIndex = this._keyManager.activeItemIndex;\r\n\r\n    if (focusedIndex != null && this._isValidIndex(focusedIndex)) {\r\n      let focusedOption: MatListOption = this.options.toArray()[focusedIndex];\r\n\r\n      if (focusedOption) {\r\n        focusedOption.toggle();\r\n\r\n        // Emit a change event because the focused option changed its state through user\r\n        // interaction.\r\n        this._emitChangeEvent(focusedOption);\r\n\r\n        // TODO: the `selectionChange` event on the option is deprecated. Remove that in the future.\r\n        focusedOption._emitDeprecatedChangeEvent();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Utility to ensure all indexes are valid.\r\n   * @param index The index to be checked.\r\n   * @returns True if the index is valid for our list of options.\r\n   */\r\n  private _isValidIndex(index: number): boolean {\r\n    return index >= 0 && index < this.options.length;\r\n  }\r\n\r\n  /** Returns the index of the specified list option. */\r\n  private _getOptionIndex(option: MatListOption): number {\r\n    return this.options.toArray().indexOf(option);\r\n  }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {\r\n  AfterContentInit,\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  ContentChild,\r\n  ContentChildren,\r\n  Directive,\r\n  ElementRef,\r\n  Optional,\r\n  QueryList,\r\n  ViewEncapsulation,\r\n} from '@angular/core';\r\nimport {CanDisableRipple, MatLine, MatLineSetter, mixinDisableRipple} from '@angular/material/core';\r\n\r\n// Boilerplate for applying mixins to MatList.\r\n/** @docs-private */\r\nexport class MatListBase {}\r\nexport const _MatListMixinBase = mixinDisableRipple(MatListBase);\r\n\r\n// Boilerplate for applying mixins to MatListItem.\r\n/** @docs-private */\r\nexport class MatListItemBase {}\r\nexport const _MatListItemMixinBase = mixinDisableRipple(MatListItemBase);\r\n\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'mat-nav-list',\r\n  exportAs: 'matNavList',\r\n  host: {\r\n    'role': 'navigation',\r\n    'class': 'mat-nav-list'\r\n  },\r\n  templateUrl: 'list.html',\r\n  styleUrls: ['list.css'],\r\n  inputs: ['disableRipple'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  preserveWhitespaces: false,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class MatNavList extends _MatListMixinBase implements CanDisableRipple {}\r\n\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'mat-list',\r\n  exportAs: 'matList',\r\n  templateUrl: 'list.html',\r\n  host: {'class': 'mat-list'},\r\n  styleUrls: ['list.css'],\r\n  inputs: ['disableRipple'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  preserveWhitespaces: false,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class MatList extends _MatListMixinBase implements CanDisableRipple {}\r\n\r\n/**\r\n * Directive whose purpose is to add the mat- CSS styling to this selector.\r\n * @docs-private\r\n */\r\n@Directive({\r\n  selector: '[mat-list-avatar], [matListAvatar]',\r\n  host: {'class': 'mat-list-avatar'}\r\n})\r\nexport class MatListAvatarCssMatStyler {}\r\n\r\n/**\r\n * Directive whose purpose is to add the mat- CSS styling to this selector.\r\n * @docs-private\r\n */\r\n@Directive({\r\n  selector: '[mat-list-icon], [matListIcon]',\r\n  host: {'class': 'mat-list-icon'}\r\n})\r\nexport class MatListIconCssMatStyler {}\r\n\r\n/**\r\n * Directive whose purpose is to add the mat- CSS styling to this selector.\r\n * @docs-private\r\n */\r\n@Directive({\r\n  selector: '[mat-subheader], [matSubheader]',\r\n  host: {'class': 'mat-subheader'}\r\n})\r\nexport class MatListSubheaderCssMatStyler {}\r\n\r\n/** An item within a Material Design list. */\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'mat-list-item, a[mat-list-item]',\r\n  exportAs: 'matListItem',\r\n  host: {\r\n    'class': 'mat-list-item',\r\n    // @deletion-target 7.0.0 Remove `mat-list-item-avatar` in favor of `mat-list-item-with-avatar`.\r\n    '[class.mat-list-item-avatar]': '_avatar',\r\n    '[class.mat-list-item-with-avatar]': '_avatar',\r\n    '(focus)': '_handleFocus()',\r\n    '(blur)': '_handleBlur()',\r\n  },\r\n  inputs: ['disableRipple'],\r\n  templateUrl: 'list-item.html',\r\n  encapsulation: ViewEncapsulation.None,\r\n  preserveWhitespaces: false,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class MatListItem extends _MatListItemMixinBase implements AfterContentInit,\r\n    CanDisableRipple {\r\n  private _isNavList: boolean = false;\r\n\r\n  @ContentChildren(MatLine) _lines: QueryList<MatLine>;\r\n  @ContentChild(MatListAvatarCssMatStyler) _avatar: MatListAvatarCssMatStyler;\r\n\r\n  constructor(private _element: ElementRef,\r\n              @Optional() private _navList: MatNavList) {\r\n    super();\r\n    this._isNavList = !!_navList;\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    // TODO: consider turning the setter into a function, it doesn't do anything as a class.\r\n    // tslint:disable-next-line:no-unused-expression\r\n    new MatLineSetter(this._lines, this._element);\r\n  }\r\n\r\n  /** Whether this list item should show a ripple effect when clicked. */\r\n  _isRippleDisabled() {\r\n    return !this._isNavList || this.disableRipple || this._navList.disableRipple;\r\n  }\r\n\r\n  _handleFocus() {\r\n    this._element.nativeElement.classList.add('mat-list-item-focus');\r\n  }\r\n\r\n  _handleBlur() {\r\n    this._element.nativeElement.classList.remove('mat-list-item-focus');\r\n  }\r\n\r\n  /** Retrieves the DOM element of the component host. */\r\n  _getHostElement(): HTMLElement {\r\n    return this._element.nativeElement;\r\n  }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {NgModule} from '@angular/core';\r\nimport {MatCommonModule} from '@angular/material/core';\r\nimport {MatIcon} from './icon';\r\nimport {ICON_REGISTRY_PROVIDER} from './icon-registry';\r\n\r\n\r\n@NgModule({\r\n  imports: [MatCommonModule],\r\n  exports: [MatIcon, MatCommonModule],\r\n  declarations: [MatIcon],\r\n  providers: [ICON_REGISTRY_PROVIDER],\r\n})\r\nexport class MatIconModule {}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {take} from 'rxjs/operators/take';\r\nimport {\r\n  Attribute,\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  ElementRef,\r\n  Input,\r\n  OnChanges,\r\n  OnInit,\r\n  SimpleChanges,\r\n  ViewEncapsulation,\r\n} from '@angular/core';\r\nimport {CanColor, mixinColor} from '@angular/material/core';\r\nimport {MatIconRegistry} from './icon-registry';\r\n\r\n\r\n// Boilerplate for applying mixins to MatIcon.\r\n/** @docs-private */\r\nexport class MatIconBase {\r\n  constructor(public _elementRef: ElementRef) {}\r\n}\r\nexport const _MatIconMixinBase = mixinColor(MatIconBase);\r\n\r\n\r\n/**\r\n * Component to display an icon. It can be used in the following ways:\r\n *\r\n * - Specify the svgIcon input to load an SVG icon from a URL previously registered with the\r\n *   addSvgIcon, addSvgIconInNamespace, addSvgIconSet, or addSvgIconSetInNamespace methods of\r\n *   MatIconRegistry. If the svgIcon value contains a colon it is assumed to be in the format\r\n *   \"[namespace]:[name]\", if not the value will be the name of an icon in the default namespace.\r\n *   Examples:\r\n *     `<mat-icon svgIcon=\"left-arrow\"></mat-icon>\r\n *     <mat-icon svgIcon=\"animals:cat\"></mat-icon>`\r\n *\r\n * - Use a font ligature as an icon by putting the ligature text in the content of the `<mat-icon>`\r\n *   component. By default the Material icons font is used as described at\r\n *   http://google.github.io/material-design-icons/#icon-font-for-the-web. You can specify an\r\n *   alternate font by setting the fontSet input to either the CSS class to apply to use the\r\n *   desired font, or to an alias previously registered with MatIconRegistry.registerFontClassAlias.\r\n *   Examples:\r\n *     `<mat-icon>home</mat-icon>\r\n *     <mat-icon fontSet=\"myfont\">sun</mat-icon>`\r\n *\r\n * - Specify a font glyph to be included via CSS rules by setting the fontSet input to specify the\r\n *   font, and the fontIcon input to specify the icon. Typically the fontIcon will specify a\r\n *   CSS class which causes the glyph to be displayed via a :before selector, as in\r\n *   https://fortawesome.github.io/Font-Awesome/examples/\r\n *   Example:\r\n *     `<mat-icon fontSet=\"fa\" fontIcon=\"alarm\"></mat-icon>`\r\n */\r\n@Component({\r\n  moduleId: module.id,\r\n  template: '<ng-content></ng-content>',\r\n  selector: 'mat-icon',\r\n  exportAs: 'matIcon',\r\n  styleUrls: ['icon.css'],\r\n  inputs: ['color'],\r\n  host: {\r\n    'role': 'img',\r\n    'class': 'mat-icon',\r\n  },\r\n  encapsulation: ViewEncapsulation.None,\r\n  preserveWhitespaces: false,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class MatIcon extends _MatIconMixinBase implements OnChanges, OnInit, CanColor {\r\n\r\n  /** Name of the icon in the SVG icon set. */\r\n  @Input() svgIcon: string;\r\n\r\n  /** Font set that the icon is a part of. */\r\n  @Input()\r\n  get fontSet(): string { return this._fontSet; }\r\n  set fontSet(value: string) {\r\n    this._fontSet = this._cleanupFontValue(value);\r\n  }\r\n  private _fontSet: string;\r\n\r\n  /** Name of an icon within a font set. */\r\n  @Input()\r\n  get fontIcon(): string { return this._fontIcon; }\r\n  set fontIcon(value: string) {\r\n    this._fontIcon = this._cleanupFontValue(value);\r\n  }\r\n  private _fontIcon: string;\r\n\r\n  private _previousFontSetClass: string;\r\n  private _previousFontIconClass: string;\r\n\r\n  constructor(\r\n      elementRef: ElementRef,\r\n      private _iconRegistry: MatIconRegistry,\r\n      @Attribute('aria-hidden') ariaHidden: string) {\r\n    super(elementRef);\r\n\r\n    // If the user has not explicitly set aria-hidden, mark the icon as hidden, as this is\r\n    // the right thing to do for the majority of icon use-cases.\r\n    if (!ariaHidden) {\r\n      elementRef.nativeElement.setAttribute('aria-hidden', 'true');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Splits an svgIcon binding value into its icon set and icon name components.\r\n   * Returns a 2-element array of [(icon set), (icon name)].\r\n   * The separator for the two fields is ':'. If there is no separator, an empty\r\n   * string is returned for the icon set and the entire value is returned for\r\n   * the icon name. If the argument is falsy, returns an array of two empty strings.\r\n   * Throws an error if the name contains two or more ':' separators.\r\n   * Examples:\r\n   *   `'social:cake' -> ['social', 'cake']\r\n   *   'penguin' -> ['', 'penguin']\r\n   *   null -> ['', '']\r\n   *   'a:b:c' -> (throws Error)`\r\n   */\r\n  private _splitIconName(iconName: string): [string, string] {\r\n    if (!iconName) {\r\n      return ['', ''];\r\n    }\r\n    const parts = iconName.split(':');\r\n    switch (parts.length) {\r\n      case 1: return ['', parts[0]]; // Use default namespace.\r\n      case 2: return <[string, string]>parts;\r\n      default: throw Error(`Invalid icon name: \"${iconName}\"`);\r\n    }\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    // Only update the inline SVG icon if the inputs changed, to avoid unnecessary DOM operations.\r\n    if (changes.svgIcon) {\r\n      if (this.svgIcon) {\r\n        const [namespace, iconName] = this._splitIconName(this.svgIcon);\r\n\r\n        this._iconRegistry.getNamedSvgIcon(iconName, namespace).pipe(take(1)).subscribe(\r\n          svg => this._setSvgElement(svg),\r\n          (err: Error) => console.log(`Error retrieving icon: ${err.message}`)\r\n        );\r\n      } else {\r\n        this._clearSvgElement();\r\n      }\r\n    }\r\n\r\n    if (this._usingFontIcon()) {\r\n      this._updateFontIconClasses();\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    // Update font classes because ngOnChanges won't be called if none of the inputs are present,\r\n    // e.g. <mat-icon>arrow</mat-icon> In this case we need to add a CSS class for the default font.\r\n    if (this._usingFontIcon()) {\r\n      this._updateFontIconClasses();\r\n    }\r\n  }\r\n\r\n  private _usingFontIcon(): boolean {\r\n    return !this.svgIcon;\r\n  }\r\n\r\n  private _setSvgElement(svg: SVGElement) {\r\n    this._clearSvgElement();\r\n    this._elementRef.nativeElement.appendChild(svg);\r\n  }\r\n\r\n  private _clearSvgElement() {\r\n    const layoutElement: HTMLElement = this._elementRef.nativeElement;\r\n    const childCount = layoutElement.childNodes.length;\r\n\r\n    // Remove existing child nodes and add the new SVG element. Note that we can't\r\n    // use innerHTML, because IE will throw if the element has a data binding.\r\n    for (let i = 0; i < childCount; i++) {\r\n      layoutElement.removeChild(layoutElement.childNodes[i]);\r\n    }\r\n  }\r\n\r\n  private _updateFontIconClasses() {\r\n    if (!this._usingFontIcon()) {\r\n      return;\r\n    }\r\n\r\n    const elem: HTMLElement = this._elementRef.nativeElement;\r\n    const fontSetClass = this.fontSet ?\r\n        this._iconRegistry.classNameForFontAlias(this.fontSet) :\r\n        this._iconRegistry.getDefaultFontSetClass();\r\n\r\n    if (fontSetClass != this._previousFontSetClass) {\r\n      if (this._previousFontSetClass) {\r\n        elem.classList.remove(this._previousFontSetClass);\r\n      }\r\n      if (fontSetClass) {\r\n        elem.classList.add(fontSetClass);\r\n      }\r\n      this._previousFontSetClass = fontSetClass;\r\n    }\r\n\r\n    if (this.fontIcon != this._previousFontIconClass) {\r\n      if (this._previousFontIconClass) {\r\n        elem.classList.remove(this._previousFontIconClass);\r\n      }\r\n      if (this.fontIcon) {\r\n        elem.classList.add(this.fontIcon);\r\n      }\r\n      this._previousFontIconClass = this.fontIcon;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Cleans up a value to be used as a fontIcon or fontSet.\r\n   * Since the value ends up being assigned as a CSS class, we\r\n   * have to trim the value and omit space-separated values.\r\n   */\r\n  private _cleanupFontValue(value: string) {\r\n    return typeof value === 'string' ? value.trim().split(' ')[0] : value;\r\n  }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {catchError} from 'rxjs/operators/catchError';\r\nimport {tap} from 'rxjs/operators/tap';\r\nimport {finalize} from 'rxjs/operators/finalize';\r\nimport {map} from 'rxjs/operators/map';\r\nimport {share} from 'rxjs/operators/share';\r\nimport {\r\n  Injectable,\r\n  Inject,\r\n  InjectionToken,\r\n  Optional,\r\n  SecurityContext,\r\n  SkipSelf,\r\n} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {DomSanitizer, SafeResourceUrl} from '@angular/platform-browser';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport {forkJoin} from 'rxjs/observable/forkJoin';\r\nimport {of as observableOf} from 'rxjs/observable/of';\r\nimport {_throw as observableThrow} from 'rxjs/observable/throw';\r\nimport {DOCUMENT} from '@angular/common';\r\n\r\n\r\n/**\r\n * Returns an exception to be thrown in the case when attempting to\r\n * load an icon with a name that cannot be found.\r\n * @docs-private\r\n */\r\nexport function getMatIconNameNotFoundError(iconName: string): Error {\r\n  return Error(`Unable to find icon with the name \"${iconName}\"`);\r\n}\r\n\r\n\r\n/**\r\n * Returns an exception to be thrown when the consumer attempts to use\r\n * `<mat-icon>` without including @angular/http.\r\n * @docs-private\r\n */\r\nexport function getMatIconNoHttpProviderError(): Error {\r\n  return Error('Could not find HttpClient provider for use with Angular Material icons. ' +\r\n               'Please include the HttpClientModule from @angular/common/http in your ' +\r\n               'app imports.');\r\n}\r\n\r\n\r\n/**\r\n * Returns an exception to be thrown when a URL couldn't be sanitized.\r\n * @param url URL that was attempted to be sanitized.\r\n * @docs-private\r\n */\r\nexport function getMatIconFailedToSanitizeError(url: SafeResourceUrl): Error {\r\n  return Error(`The URL provided to MatIconRegistry was not trusted as a resource URL ` +\r\n               `via Angular's DomSanitizer. Attempted URL was \"${url}\".`);\r\n}\r\n\r\n/**\r\n * Configuration for an icon, including the URL and possibly the cached SVG element.\r\n * @docs-private\r\n */\r\nclass SvgIconConfig {\r\n  svgElement: SVGElement | null = null;\r\n  constructor(public url: SafeResourceUrl) { }\r\n}\r\n\r\n/**\r\n * Service to register and display icons used by the `<mat-icon>` component.\r\n * - Registers icon URLs by namespace and name.\r\n * - Registers icon set URLs by namespace.\r\n * - Registers aliases for CSS classes, for use with icon fonts.\r\n * - Loads icons from URLs and extracts individual icons from icon sets.\r\n */\r\n@Injectable()\r\nexport class MatIconRegistry {\r\n  private _document: Document;\r\n\r\n  /**\r\n   * URLs and cached SVG elements for individual icons. Keys are of the format \"[namespace]:[icon]\".\r\n   */\r\n  private _svgIconConfigs = new Map<string, SvgIconConfig>();\r\n\r\n  /**\r\n   * SvgIconConfig objects and cached SVG elements for icon sets, keyed by namespace.\r\n   * Multiple icon sets can be registered under the same namespace.\r\n   */\r\n  private _iconSetConfigs = new Map<string, SvgIconConfig[]>();\r\n\r\n  /** Cache for icons loaded by direct URLs. */\r\n  private _cachedIconsByUrl = new Map<string, SVGElement>();\r\n\r\n  /** In-progress icon fetches. Used to coalesce multiple requests to the same URL. */\r\n  private _inProgressUrlFetches = new Map<string, Observable<string>>();\r\n\r\n  /** Map from font identifiers to their CSS class names. Used for icon fonts. */\r\n  private _fontCssClassesByAlias = new Map<string, string>();\r\n\r\n  /**\r\n   * The CSS class to apply when an `<mat-icon>` component has no icon name, url, or font specified.\r\n   * The default 'material-icons' value assumes that the material icon font has been loaded as\r\n   * described at http://google.github.io/material-design-icons/#icon-font-for-the-web\r\n   */\r\n  private _defaultFontSetClass = 'material-icons';\r\n\r\n  constructor(\r\n    @Optional() private _httpClient: HttpClient,\r\n    private _sanitizer: DomSanitizer,\r\n    @Optional() @Inject(DOCUMENT) document?: any) {\r\n      // TODO(crisbeto): make _document required next major release.\r\n      this._document = document;\r\n    }\r\n\r\n  /**\r\n   * Registers an icon by URL in the default namespace.\r\n   * @param iconName Name under which the icon should be registered.\r\n   * @param url\r\n   */\r\n  addSvgIcon(iconName: string, url: SafeResourceUrl): this {\r\n    return this.addSvgIconInNamespace('', iconName, url);\r\n  }\r\n\r\n  /**\r\n   * Registers an icon by URL in the specified namespace.\r\n   * @param namespace Namespace in which the icon should be registered.\r\n   * @param iconName Name under which the icon should be registered.\r\n   * @param url\r\n   */\r\n  addSvgIconInNamespace(namespace: string, iconName: string, url: SafeResourceUrl): this {\r\n    const key = iconKey(namespace, iconName);\r\n    this._svgIconConfigs.set(key, new SvgIconConfig(url));\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Registers an icon set by URL in the default namespace.\r\n   * @param url\r\n   */\r\n  addSvgIconSet(url: SafeResourceUrl): this {\r\n    return this.addSvgIconSetInNamespace('', url);\r\n  }\r\n\r\n  /**\r\n   * Registers an icon set by URL in the specified namespace.\r\n   * @param namespace Namespace in which to register the icon set.\r\n   * @param url\r\n   */\r\n  addSvgIconSetInNamespace(namespace: string, url: SafeResourceUrl): this {\r\n    const config = new SvgIconConfig(url);\r\n    const configNamespace = this._iconSetConfigs.get(namespace);\r\n\r\n    if (configNamespace) {\r\n      configNamespace.push(config);\r\n    } else {\r\n      this._iconSetConfigs.set(namespace, [config]);\r\n    }\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Defines an alias for a CSS class name to be used for icon fonts. Creating an matIcon\r\n   * component with the alias as the fontSet input will cause the class name to be applied\r\n   * to the `<mat-icon>` element.\r\n   *\r\n   * @param alias Alias for the font.\r\n   * @param className Class name override to be used instead of the alias.\r\n   */\r\n  registerFontClassAlias(alias: string, className: string = alias): this {\r\n    this._fontCssClassesByAlias.set(alias, className);\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Returns the CSS class name associated with the alias by a previous call to\r\n   * registerFontClassAlias. If no CSS class has been associated, returns the alias unmodified.\r\n   */\r\n  classNameForFontAlias(alias: string): string {\r\n    return this._fontCssClassesByAlias.get(alias) || alias;\r\n  }\r\n\r\n  /**\r\n   * Sets the CSS class name to be used for icon fonts when an `<mat-icon>` component does not\r\n   * have a fontSet input value, and is not loading an icon by name or URL.\r\n   *\r\n   * @param className\r\n   */\r\n  setDefaultFontSetClass(className: string): this {\r\n    this._defaultFontSetClass = className;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Returns the CSS class name to be used for icon fonts when an `<mat-icon>` component does not\r\n   * have a fontSet input value, and is not loading an icon by name or URL.\r\n   */\r\n  getDefaultFontSetClass(): string {\r\n    return this._defaultFontSetClass;\r\n  }\r\n\r\n  /**\r\n   * Returns an Observable that produces the icon (as an `<svg>` DOM element) from the given URL.\r\n   * The response from the URL may be cached so this will not always cause an HTTP request, but\r\n   * the produced element will always be a new copy of the originally fetched icon. (That is,\r\n   * it will not contain any modifications made to elements previously returned).\r\n   *\r\n   * @param safeUrl URL from which to fetch the SVG icon.\r\n   */\r\n  getSvgIconFromUrl(safeUrl: SafeResourceUrl): Observable<SVGElement> {\r\n    let url = this._sanitizer.sanitize(SecurityContext.RESOURCE_URL, safeUrl);\r\n\r\n    if (!url) {\r\n      throw getMatIconFailedToSanitizeError(safeUrl);\r\n    }\r\n\r\n    let cachedIcon = this._cachedIconsByUrl.get(url);\r\n\r\n    if (cachedIcon) {\r\n      return observableOf(cloneSvg(cachedIcon));\r\n    }\r\n\r\n    return this._loadSvgIconFromConfig(new SvgIconConfig(safeUrl)).pipe(\r\n      tap(svg => this._cachedIconsByUrl.set(url!, svg)),\r\n      map(svg => cloneSvg(svg)),\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Returns an Observable that produces the icon (as an `<svg>` DOM element) with the given name\r\n   * and namespace. The icon must have been previously registered with addIcon or addIconSet;\r\n   * if not, the Observable will throw an error.\r\n   *\r\n   * @param name Name of the icon to be retrieved.\r\n   * @param namespace Namespace in which to look for the icon.\r\n   */\r\n  getNamedSvgIcon(name: string, namespace: string = ''): Observable<SVGElement> {\r\n    // Return (copy of) cached icon if possible.\r\n    const key = iconKey(namespace, name);\r\n    const config = this._svgIconConfigs.get(key);\r\n\r\n    if (config) {\r\n      return this._getSvgFromConfig(config);\r\n    }\r\n\r\n    // See if we have any icon sets registered for the namespace.\r\n    const iconSetConfigs = this._iconSetConfigs.get(namespace);\r\n\r\n    if (iconSetConfigs) {\r\n      return this._getSvgFromIconSetConfigs(name, iconSetConfigs);\r\n    }\r\n\r\n    return observableThrow(getMatIconNameNotFoundError(key));\r\n  }\r\n\r\n  /**\r\n   * Returns the cached icon for a SvgIconConfig if available, or fetches it from its URL if not.\r\n   */\r\n  private _getSvgFromConfig(config: SvgIconConfig): Observable<SVGElement> {\r\n    if (config.svgElement) {\r\n      // We already have the SVG element for this icon, return a copy.\r\n      return observableOf(cloneSvg(config.svgElement));\r\n    } else {\r\n      // Fetch the icon from the config's URL, cache it, and return a copy.\r\n      return this._loadSvgIconFromConfig(config).pipe(\r\n        tap(svg => config.svgElement = svg),\r\n        map(svg => cloneSvg(svg)),\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Attempts to find an icon with the specified name in any of the SVG icon sets.\r\n   * First searches the available cached icons for a nested element with a matching name, and\r\n   * if found copies the element to a new `<svg>` element. If not found, fetches all icon sets\r\n   * that have not been cached, and searches again after all fetches are completed.\r\n   * The returned Observable produces the SVG element if possible, and throws\r\n   * an error if no icon with the specified name can be found.\r\n   */\r\n  private _getSvgFromIconSetConfigs(name: string, iconSetConfigs: SvgIconConfig[]):\r\n      Observable<SVGElement> {\r\n    // For all the icon set SVG elements we've fetched, see if any contain an icon with the\r\n    // requested name.\r\n    const namedIcon = this._extractIconWithNameFromAnySet(name, iconSetConfigs);\r\n\r\n    if (namedIcon) {\r\n      // We could cache namedIcon in _svgIconConfigs, but since we have to make a copy every\r\n      // time anyway, there's probably not much advantage compared to just always extracting\r\n      // it from the icon set.\r\n      return observableOf(namedIcon);\r\n    }\r\n\r\n    // Not found in any cached icon sets. If there are icon sets with URLs that we haven't\r\n    // fetched, fetch them now and look for iconName in the results.\r\n    const iconSetFetchRequests: Observable<SVGElement | null>[] = iconSetConfigs\r\n      .filter(iconSetConfig => !iconSetConfig.svgElement)\r\n      .map(iconSetConfig => {\r\n        return this._loadSvgIconSetFromConfig(iconSetConfig).pipe(\r\n          catchError((err: any): Observable<SVGElement | null> => {\r\n            let url = this._sanitizer.sanitize(SecurityContext.RESOURCE_URL, iconSetConfig.url);\r\n\r\n            // Swallow errors fetching individual URLs so the combined Observable won't\r\n            // necessarily fail.\r\n            console.log(`Loading icon set URL: ${url} failed: ${err}`);\r\n            return observableOf(null);\r\n          })\r\n        );\r\n      });\r\n\r\n    // Fetch all the icon set URLs. When the requests complete, every IconSet should have a\r\n    // cached SVG element (unless the request failed), and we can check again for the icon.\r\n    return forkJoin(iconSetFetchRequests).pipe(map(() => {\r\n      const foundIcon = this._extractIconWithNameFromAnySet(name, iconSetConfigs);\r\n\r\n      if (!foundIcon) {\r\n        throw getMatIconNameNotFoundError(name);\r\n      }\r\n\r\n      return foundIcon;\r\n    }));\r\n  }\r\n\r\n  /**\r\n   * Searches the cached SVG elements for the given icon sets for a nested icon element whose \"id\"\r\n   * tag matches the specified name. If found, copies the nested element to a new SVG element and\r\n   * returns it. Returns null if no matching element is found.\r\n   */\r\n  private _extractIconWithNameFromAnySet(iconName: string, iconSetConfigs: SvgIconConfig[]):\r\n      SVGElement | null {\r\n    // Iterate backwards, so icon sets added later have precedence.\r\n    for (let i = iconSetConfigs.length - 1; i >= 0; i--) {\r\n      const config = iconSetConfigs[i];\r\n      if (config.svgElement) {\r\n        const foundIcon = this._extractSvgIconFromSet(config.svgElement, iconName);\r\n        if (foundIcon) {\r\n          return foundIcon;\r\n        }\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * Loads the content of the icon URL specified in the SvgIconConfig and creates an SVG element\r\n   * from it.\r\n   */\r\n  private _loadSvgIconFromConfig(config: SvgIconConfig): Observable<SVGElement> {\r\n    return this._fetchUrl(config.url)\r\n        .pipe(map(svgText => this._createSvgElementForSingleIcon(svgText)));\r\n  }\r\n\r\n  /**\r\n   * Loads the content of the icon set URL specified in the SvgIconConfig and creates an SVG element\r\n   * from it.\r\n   */\r\n  private _loadSvgIconSetFromConfig(config: SvgIconConfig): Observable<SVGElement> {\r\n    // If the SVG for this icon set has already been parsed, do nothing.\r\n    if (config.svgElement) {\r\n      return observableOf(config.svgElement);\r\n    }\r\n\r\n    return this._fetchUrl(config.url).pipe(map(svgText => {\r\n      // It is possible that the icon set was parsed and cached by an earlier request, so parsing\r\n      // only needs to occur if the cache is yet unset.\r\n      if (!config.svgElement) {\r\n        config.svgElement = this._svgElementFromString(svgText);\r\n      }\r\n\r\n      return config.svgElement;\r\n    }));\r\n  }\r\n\r\n  /**\r\n   * Creates a DOM element from the given SVG string, and adds default attributes.\r\n   */\r\n  private _createSvgElementForSingleIcon(responseText: string): SVGElement {\r\n    const svg = this._svgElementFromString(responseText);\r\n    this._setSvgAttributes(svg);\r\n    return svg;\r\n  }\r\n\r\n  /**\r\n   * Searches the cached element of the given SvgIconConfig for a nested icon element whose \"id\"\r\n   * tag matches the specified name. If found, copies the nested element to a new SVG element and\r\n   * returns it. Returns null if no matching element is found.\r\n   */\r\n  private _extractSvgIconFromSet(iconSet: SVGElement, iconName: string): SVGElement | null {\r\n    const iconSource = iconSet.querySelector('#' + iconName);\r\n\r\n    if (!iconSource) {\r\n      return null;\r\n    }\r\n\r\n    // Clone the element and remove the ID to prevent multiple elements from being added\r\n    // to the page with the same ID.\r\n    const iconElement = iconSource.cloneNode(true) as Element;\r\n    iconElement.id = '';\r\n\r\n    // If the icon node is itself an <svg> node, clone and return it directly. If not, set it as\r\n    // the content of a new <svg> node.\r\n    if (iconElement.nodeName.toLowerCase() === 'svg') {\r\n      return this._setSvgAttributes(iconElement as SVGElement);\r\n    }\r\n\r\n    // If the node is a <symbol>, it won't be rendered so we have to convert it into <svg>. Note\r\n    // that the same could be achieved by referring to it via <use href=\"#id\">, however the <use>\r\n    // tag is problematic on Firefox, because it needs to include the current page path.\r\n    if (iconElement.nodeName.toLowerCase() === 'symbol') {\r\n      return this._setSvgAttributes(this._toSvgElement(iconElement));\r\n    }\r\n\r\n    // createElement('SVG') doesn't work as expected; the DOM ends up with\r\n    // the correct nodes, but the SVG content doesn't render. Instead we\r\n    // have to create an empty SVG node using innerHTML and append its content.\r\n    // Elements created using DOMParser.parseFromString have the same problem.\r\n    // http://stackoverflow.com/questions/23003278/svg-innerhtml-in-firefox-can-not-display\r\n    const svg = this._svgElementFromString('<svg></svg>');\r\n    // Clone the node so we don't remove it from the parent icon set element.\r\n    svg.appendChild(iconElement);\r\n\r\n    return this._setSvgAttributes(svg);\r\n  }\r\n\r\n  /**\r\n   * Creates a DOM element from the given SVG string.\r\n   */\r\n  private _svgElementFromString(str: string): SVGElement {\r\n    if (this._document || typeof document !== 'undefined') {\r\n      const div = (this._document || document).createElement('DIV');\r\n      div.innerHTML = str;\r\n      const svg = div.querySelector('svg') as SVGElement;\r\n      if (!svg) {\r\n        throw Error('<svg> tag not found');\r\n      }\r\n      return svg;\r\n    }\r\n\r\n    throw new Error('MatIconRegistry could not resolve document.');\r\n  }\r\n\r\n  /**\r\n   * Converts an element into an SVG node by cloning all of its children.\r\n   */\r\n  private _toSvgElement(element: Element): SVGElement {\r\n    let svg = this._svgElementFromString('<svg></svg>');\r\n\r\n    for (let i = 0; i < element.childNodes.length; i++) {\r\n      if (element.childNodes[i].nodeType === this._document.ELEMENT_NODE) {\r\n        svg.appendChild(element.childNodes[i].cloneNode(true));\r\n      }\r\n    }\r\n\r\n    return svg;\r\n  }\r\n\r\n  /**\r\n   * Sets the default attributes for an SVG element to be used as an icon.\r\n   */\r\n  private _setSvgAttributes(svg: SVGElement): SVGElement {\r\n    if (!svg.getAttribute('xmlns')) {\r\n      svg.setAttribute('xmlns', 'http://www.w3.org/2000/svg');\r\n    }\r\n    svg.setAttribute('fit', '');\r\n    svg.setAttribute('height', '100%');\r\n    svg.setAttribute('width', '100%');\r\n    svg.setAttribute('preserveAspectRatio', 'xMidYMid meet');\r\n    svg.setAttribute('focusable', 'false'); // Disable IE11 default behavior to make SVGs focusable.\r\n    return svg;\r\n  }\r\n\r\n  /**\r\n   * Returns an Observable which produces the string contents of the given URL. Results may be\r\n   * cached, so future calls with the same URL may not cause another HTTP request.\r\n   */\r\n  private _fetchUrl(safeUrl: SafeResourceUrl): Observable<string> {\r\n    if (!this._httpClient) {\r\n      throw getMatIconNoHttpProviderError();\r\n    }\r\n\r\n    const url = this._sanitizer.sanitize(SecurityContext.RESOURCE_URL, safeUrl);\r\n\r\n    if (!url) {\r\n      throw getMatIconFailedToSanitizeError(safeUrl);\r\n    }\r\n\r\n    // Store in-progress fetches to avoid sending a duplicate request for a URL when there is\r\n    // already a request in progress for that URL. It's necessary to call share() on the\r\n    // Observable returned by http.get() so that multiple subscribers don't cause multiple XHRs.\r\n    const inProgressFetch = this._inProgressUrlFetches.get(url);\r\n\r\n    if (inProgressFetch) {\r\n      return inProgressFetch;\r\n    }\r\n\r\n    // TODO(jelbourn): for some reason, the `finally` operator \"loses\" the generic type on the\r\n    // Observable. Figure out why and fix it.\r\n    const req = this._httpClient.get(url, {responseType: 'text'}).pipe(\r\n      finalize(() => this._inProgressUrlFetches.delete(url)),\r\n      share(),\r\n    );\r\n\r\n    this._inProgressUrlFetches.set(url, req);\r\n    return req;\r\n  }\r\n}\r\n\r\n/** @docs-private */\r\nexport function ICON_REGISTRY_PROVIDER_FACTORY(\r\n  parentRegistry: MatIconRegistry,\r\n  httpClient: HttpClient,\r\n  sanitizer: DomSanitizer,\r\n  document?: any) {\r\n  return parentRegistry || new MatIconRegistry(httpClient, sanitizer, document);\r\n}\r\n\r\n/** @docs-private */\r\nexport const ICON_REGISTRY_PROVIDER = {\r\n  // If there is already an MatIconRegistry available, use that. Otherwise, provide a new one.\r\n  provide: MatIconRegistry,\r\n  deps: [\r\n    [new Optional(), new SkipSelf(), MatIconRegistry],\r\n    [new Optional(), HttpClient],\r\n    DomSanitizer,\r\n    [new Optional(), DOCUMENT as InjectionToken<any>],\r\n  ],\r\n  useFactory: ICON_REGISTRY_PROVIDER_FACTORY,\r\n};\r\n\r\n/** Clones an SVGElement while preserving type information. */\r\nfunction cloneSvg(svg: SVGElement): SVGElement {\r\n  return svg.cloneNode(true) as SVGElement;\r\n}\r\n\r\n/** Returns the cache key to use for an icon namespace and name. */\r\nfunction iconKey(namespace: string, name: string) {\r\n  return namespace + ':' + name;\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {NgModule} from '@angular/core';\r\nimport {MatLineModule, MatCommonModule} from '@angular/material/core';\r\nimport {\r\n  MatGridTile, MatGridTileText, MatGridTileFooterCssMatStyler,\r\n  MatGridTileHeaderCssMatStyler, MatGridAvatarCssMatStyler\r\n} from './grid-tile';\r\nimport {MatGridList} from './grid-list';\r\n\r\n\r\n@NgModule({\r\n  imports: [MatLineModule, MatCommonModule],\r\n  exports: [\r\n    MatGridList,\r\n    MatGridTile,\r\n    MatGridTileText,\r\n    MatLineModule,\r\n    MatCommonModule,\r\n    MatGridTileHeaderCssMatStyler,\r\n    MatGridTileFooterCssMatStyler,\r\n    MatGridAvatarCssMatStyler\r\n  ],\r\n  declarations: [\r\n    MatGridList,\r\n    MatGridTile,\r\n    MatGridTileText,\r\n    MatGridTileHeaderCssMatStyler,\r\n    MatGridTileFooterCssMatStyler,\r\n    MatGridAvatarCssMatStyler\r\n  ],\r\n})\r\nexport class MatGridListModule {}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {\r\n  Component,\r\n  ViewEncapsulation,\r\n  AfterContentChecked,\r\n  OnInit,\r\n  Input,\r\n  ContentChildren,\r\n  QueryList,\r\n  ElementRef,\r\n  Optional,\r\n  ChangeDetectionStrategy,\r\n} from '@angular/core';\r\nimport {MatGridTile} from './grid-tile';\r\nimport {TileCoordinator} from './tile-coordinator';\r\nimport {TileStyler, FitTileStyler, RatioTileStyler, FixedTileStyler} from './tile-styler';\r\nimport {Directionality} from '@angular/cdk/bidi';\r\nimport {\r\n  coerceToString,\r\n  coerceToNumber,\r\n} from './grid-list-measure';\r\n\r\n\r\n// TODO(kara): Conditional (responsive) column count / row size.\r\n// TODO(kara): Re-layout on window resize / media change (debounced).\r\n// TODO(kara): gridTileHeader and gridTileFooter.\r\n\r\nconst MAT_FIT_MODE = 'fit';\r\n\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'mat-grid-list',\r\n  exportAs: 'matGridList',\r\n  templateUrl: 'grid-list.html',\r\n  styleUrls: ['grid-list.css'],\r\n  host: {\r\n    'class': 'mat-grid-list',\r\n  },\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  encapsulation: ViewEncapsulation.None,\r\n  preserveWhitespaces: false,\r\n})\r\nexport class MatGridList implements OnInit, AfterContentChecked {\r\n  /** Number of columns being rendered. */\r\n  private _cols: number;\r\n\r\n  /**\r\n   * Row height value passed in by user. This can be one of three types:\r\n   * - Number value (ex: \"100px\"):  sets a fixed row height to that value\r\n   * - Ratio value (ex: \"4:3\"): sets the row height based on width:height ratio\r\n   * - \"Fit\" mode (ex: \"fit\"): sets the row height to total height divided by number of rows\r\n   */\r\n  private _rowHeight: string;\r\n\r\n  /** The amount of space between tiles. This will be something like '5px' or '2em'. */\r\n  private _gutter: string = '1px';\r\n\r\n  /** Sets position and size styles for a tile */\r\n  private _tileStyler: TileStyler;\r\n\r\n  /** Query list of tiles that are being rendered. */\r\n  @ContentChildren(MatGridTile) _tiles: QueryList<MatGridTile>;\r\n\r\n  constructor(private _element: ElementRef, @Optional() private _dir: Directionality) {}\r\n\r\n  /** Amount of columns in the grid list. */\r\n  @Input()\r\n  get cols(): number { return this._cols; }\r\n  set cols(value: number) { this._cols = coerceToNumber(value); }\r\n\r\n  /** Size of the grid list's gutter in pixels. */\r\n  @Input()\r\n  get gutterSize(): string { return this._gutter; }\r\n  set gutterSize(value: string) { this._gutter = coerceToString(value); }\r\n\r\n  /** Set internal representation of row height from the user-provided value. */\r\n  @Input()\r\n  set rowHeight(value: string | number) {\r\n    const newValue = coerceToString(value);\r\n\r\n    if (newValue !== this._rowHeight) {\r\n      this._rowHeight = newValue;\r\n      this._setTileStyler(this._rowHeight);\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this._checkCols();\r\n    this._checkRowHeight();\r\n  }\r\n\r\n  /**\r\n   * The layout calculation is fairly cheap if nothing changes, so there's little cost\r\n   * to run it frequently.\r\n   */\r\n  ngAfterContentChecked() {\r\n    this._layoutTiles();\r\n  }\r\n\r\n  /** Throw a friendly error if cols property is missing */\r\n  private _checkCols() {\r\n    if (!this.cols) {\r\n      throw Error(`mat-grid-list: must pass in number of columns. ` +\r\n                  `Example: <mat-grid-list cols=\"3\">`);\r\n    }\r\n  }\r\n\r\n  /** Default to equal width:height if rowHeight property is missing */\r\n  private _checkRowHeight(): void {\r\n    if (!this._rowHeight) {\r\n      this._setTileStyler('1:1');\r\n    }\r\n  }\r\n\r\n  /** Creates correct Tile Styler subtype based on rowHeight passed in by user */\r\n  private _setTileStyler(rowHeight: string): void {\r\n    if (this._tileStyler) {\r\n      this._tileStyler.reset(this);\r\n    }\r\n\r\n    if (rowHeight === MAT_FIT_MODE) {\r\n      this._tileStyler = new FitTileStyler();\r\n    } else if (rowHeight && rowHeight.indexOf(':') > -1) {\r\n      this._tileStyler = new RatioTileStyler(rowHeight);\r\n    } else {\r\n      this._tileStyler = new FixedTileStyler(rowHeight);\r\n    }\r\n  }\r\n\r\n  /** Computes and applies the size and position for all children grid tiles. */\r\n  private _layoutTiles(): void {\r\n    const tracker = new TileCoordinator(this.cols, this._tiles);\r\n    const direction = this._dir ? this._dir.value : 'ltr';\r\n    this._tileStyler.init(this.gutterSize, tracker, this.cols, direction);\r\n\r\n    this._tiles.forEach((tile, index) => {\r\n      const pos = tracker.positions[index];\r\n      this._tileStyler.setStyle(tile, pos.row, pos.col);\r\n    });\r\n\r\n    this._setListStyle(this._tileStyler.getComputedHeight());\r\n  }\r\n\r\n  /** Sets style on the main grid-list element, given the style name and value. */\r\n  _setListStyle(style: [string, string | null] | null): void {\r\n    if (style) {\r\n      this._element.nativeElement.style[style[0]] = style[1];\r\n    }\r\n  }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {MatGridList} from './grid-list';\r\nimport {MatGridTile} from './grid-tile';\r\nimport {TileCoordinator} from './tile-coordinator';\r\n\r\n/**\r\n * Sets the style properties for an individual tile, given the position calculated by the\r\n * Tile Coordinator.\r\n * @docs-private\r\n */\r\nexport abstract class TileStyler {\r\n  _gutterSize: string;\r\n  _rows: number = 0;\r\n  _rowspan: number = 0;\r\n  _cols: number;\r\n  _direction: string;\r\n\r\n  /**\r\n   * Adds grid-list layout info once it is available. Cannot be processed in the constructor\r\n   * because these properties haven't been calculated by that point.\r\n   *\r\n   * @param gutterSize Size of the grid's gutter.\r\n   * @param tracker Instance of the TileCoordinator.\r\n   * @param cols Amount of columns in the grid.\r\n   * @param direction Layout direction of the grid.\r\n   */\r\n  init(gutterSize: string, tracker: TileCoordinator, cols: number, direction: string): void {\r\n    this._gutterSize = normalizeUnits(gutterSize);\r\n    this._rows = tracker.rowCount;\r\n    this._rowspan = tracker.rowspan;\r\n    this._cols = cols;\r\n    this._direction = direction;\r\n  }\r\n\r\n  /**\r\n   * Computes the amount of space a single 1x1 tile would take up (width or height).\r\n   * Used as a basis for other calculations.\r\n   * @param sizePercent Percent of the total grid-list space that one 1x1 tile would take up.\r\n   * @param gutterFraction Fraction of the gutter size taken up by one 1x1 tile.\r\n   * @return The size of a 1x1 tile as an expression that can be evaluated via CSS calc().\r\n   */\r\n  getBaseTileSize(sizePercent: number, gutterFraction: number): string {\r\n    // Take the base size percent (as would be if evenly dividing the size between cells),\r\n    // and then subtracting the size of one gutter. However, since there are no gutters on the\r\n    // edges, each tile only uses a fraction (gutterShare = numGutters / numCells) of the gutter\r\n    // size. (Imagine having one gutter per tile, and then breaking up the extra gutter on the\r\n    // edge evenly among the cells).\r\n    return `(${sizePercent}% - (${this._gutterSize} * ${gutterFraction}))`;\r\n  }\r\n\r\n\r\n  /**\r\n   * Gets The horizontal or vertical position of a tile, e.g., the 'top' or 'left' property value.\r\n   * @param offset Number of tiles that have already been rendered in the row/column.\r\n   * @param baseSize Base size of a 1x1 tile (as computed in getBaseTileSize).\r\n   * @return Position of the tile as a CSS calc() expression.\r\n   */\r\n  getTilePosition(baseSize: string, offset: number): string {\r\n    // The position comes the size of a 1x1 tile plus gutter for each previous tile in the\r\n    // row/column (offset).\r\n    return offset === 0 ? '0' : calc(`(${baseSize} + ${this._gutterSize}) * ${offset}`);\r\n  }\r\n\r\n\r\n  /**\r\n   * Gets the actual size of a tile, e.g., width or height, taking rowspan or colspan into account.\r\n   * @param baseSize Base size of a 1x1 tile (as computed in getBaseTileSize).\r\n   * @param span The tile's rowspan or colspan.\r\n   * @return Size of the tile as a CSS calc() expression.\r\n   */\r\n  getTileSize(baseSize: string, span: number): string {\r\n    return `(${baseSize} * ${span}) + (${span - 1} * ${this._gutterSize})`;\r\n  }\r\n\r\n\r\n  /**\r\n   * Sets the style properties to be applied to a tile for the given row and column index.\r\n   * @param tile Tile to which to apply the styling.\r\n   * @param rowIndex Index of the tile's row.\r\n   * @param colIndex Index of the tile's column.\r\n   */\r\n  setStyle(tile: MatGridTile, rowIndex: number, colIndex: number): void {\r\n    // Percent of the available horizontal space that one column takes up.\r\n    let percentWidthPerTile = 100 / this._cols;\r\n\r\n    // Fraction of the vertical gutter size that each column takes up.\r\n    // For example, if there are 5 columns, each column uses 4/5 = 0.8 times the gutter width.\r\n    let gutterWidthFractionPerTile = (this._cols - 1) / this._cols;\r\n\r\n    this.setColStyles(tile, colIndex, percentWidthPerTile, gutterWidthFractionPerTile);\r\n    this.setRowStyles(tile, rowIndex, percentWidthPerTile, gutterWidthFractionPerTile);\r\n  }\r\n\r\n  /** Sets the horizontal placement of the tile in the list. */\r\n  setColStyles(tile: MatGridTile, colIndex: number, percentWidth: number,\r\n               gutterWidth: number) {\r\n    // Base horizontal size of a column.\r\n    let baseTileWidth = this.getBaseTileSize(percentWidth, gutterWidth);\r\n\r\n    // The width and horizontal position of each tile is always calculated the same way, but the\r\n    // height and vertical position depends on the rowMode.\r\n    let side = this._direction === 'rtl' ? 'right' : 'left';\r\n    tile._setStyle(side, this.getTilePosition(baseTileWidth, colIndex));\r\n    tile._setStyle('width', calc(this.getTileSize(baseTileWidth, tile.colspan)));\r\n  }\r\n\r\n  /**\r\n   * Calculates the total size taken up by gutters across one axis of a list.\r\n   */\r\n  getGutterSpan(): string {\r\n    return `${this._gutterSize} * (${this._rowspan} - 1)`;\r\n  }\r\n\r\n  /**\r\n   * Calculates the total size taken up by tiles across one axis of a list.\r\n   * @param tileHeight Height of the tile.\r\n   */\r\n  getTileSpan(tileHeight: string): string {\r\n    return `${this._rowspan} * ${this.getTileSize(tileHeight, 1)}`;\r\n  }\r\n\r\n  /**\r\n   * Sets the vertical placement of the tile in the list.\r\n   * This method will be implemented by each type of TileStyler.\r\n   * @docs-private\r\n   */\r\n  abstract setRowStyles(tile: MatGridTile, rowIndex: number, percentWidth: number,\r\n                        gutterWidth: number);\r\n\r\n  /**\r\n   * Calculates the computed height and returns the correct style property to set.\r\n   * This method can be implemented by each type of TileStyler.\r\n   * @docs-private\r\n   */\r\n  getComputedHeight(): [string, string] | null { return null; }\r\n\r\n  /**\r\n   * Called when the tile styler is swapped out with a different one. To be used for cleanup.\r\n   * @param list Grid list that the styler was attached to.\r\n   * @docs-private\r\n   */\r\n  abstract reset(list: MatGridList);\r\n}\r\n\r\n\r\n/**\r\n * This type of styler is instantiated when the user passes in a fixed row height.\r\n * Example `<mat-grid-list cols=\"3\" rowHeight=\"100px\">`\r\n * @docs-private\r\n */\r\nexport class FixedTileStyler extends TileStyler {\r\n\r\n  constructor(public fixedRowHeight: string) { super(); }\r\n\r\n  init(gutterSize: string, tracker: TileCoordinator, cols: number, direction: string) {\r\n    super.init(gutterSize, tracker, cols, direction);\r\n    this.fixedRowHeight = normalizeUnits(this.fixedRowHeight);\r\n  }\r\n\r\n  setRowStyles(tile: MatGridTile, rowIndex: number): void {\r\n    tile._setStyle('top', this.getTilePosition(this.fixedRowHeight, rowIndex));\r\n    tile._setStyle('height', calc(this.getTileSize(this.fixedRowHeight, tile.rowspan)));\r\n  }\r\n\r\n  getComputedHeight(): [string, string] {\r\n    return [\r\n      'height', calc(`${this.getTileSpan(this.fixedRowHeight)} + ${this.getGutterSpan()}`)\r\n    ];\r\n  }\r\n\r\n  reset(list: MatGridList) {\r\n    list._setListStyle(['height', null]);\r\n\r\n    list._tiles.forEach(tile => {\r\n      tile._setStyle('top', null);\r\n      tile._setStyle('height', null);\r\n    });\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * This type of styler is instantiated when the user passes in a width:height ratio\r\n * for the row height.  Example `<mat-grid-list cols=\"3\" rowHeight=\"3:1\">`\r\n * @docs-private\r\n */\r\nexport class RatioTileStyler extends TileStyler {\r\n\r\n  /** Ratio width:height given by user to determine row height. */\r\n  rowHeightRatio: number;\r\n  baseTileHeight: string;\r\n\r\n  constructor(value: string) {\r\n    super();\r\n    this._parseRatio(value);\r\n  }\r\n\r\n  setRowStyles(tile: MatGridTile, rowIndex: number, percentWidth: number,\r\n               gutterWidth: number): void {\r\n    let percentHeightPerTile = percentWidth / this.rowHeightRatio;\r\n    this.baseTileHeight = this.getBaseTileSize(percentHeightPerTile, gutterWidth);\r\n\r\n    // Use padding-top and margin-top to maintain the given aspect ratio, as\r\n    // a percentage-based value for these properties is applied versus the *width* of the\r\n    // containing block. See http://www.w3.org/TR/CSS2/box.html#margin-properties\r\n    tile._setStyle('marginTop', this.getTilePosition(this.baseTileHeight, rowIndex));\r\n    tile._setStyle('paddingTop', calc(this.getTileSize(this.baseTileHeight, tile.rowspan)));\r\n  }\r\n\r\n  getComputedHeight(): [string, string] {\r\n    return [\r\n      'paddingBottom', calc(`${this.getTileSpan(this.baseTileHeight)} + ${this.getGutterSpan()}`)\r\n    ];\r\n  }\r\n\r\n  reset(list: MatGridList) {\r\n    list._setListStyle(['paddingBottom', null]);\r\n\r\n    list._tiles.forEach(tile => {\r\n      tile._setStyle('marginTop', null);\r\n      tile._setStyle('paddingTop', null);\r\n    });\r\n  }\r\n\r\n  private _parseRatio(value: string): void {\r\n    const ratioParts = value.split(':');\r\n\r\n    if (ratioParts.length !== 2) {\r\n      throw Error(`mat-grid-list: invalid ratio given for row-height: \"${value}\"`);\r\n    }\r\n\r\n    this.rowHeightRatio = parseFloat(ratioParts[0]) / parseFloat(ratioParts[1]);\r\n  }\r\n}\r\n\r\n/**\r\n * This type of styler is instantiated when the user selects a \"fit\" row height mode.\r\n * In other words, the row height will reflect the total height of the container divided\r\n * by the number of rows.  Example `<mat-grid-list cols=\"3\" rowHeight=\"fit\">`\r\n *\r\n * @docs-private\r\n */\r\nexport class FitTileStyler extends TileStyler {\r\n\r\n  setRowStyles(tile: MatGridTile, rowIndex: number): void {\r\n    // Percent of the available vertical space that one row takes up.\r\n    let percentHeightPerTile = 100 / this._rowspan;\r\n\r\n    // Fraction of the horizontal gutter size that each column takes up.\r\n    let gutterHeightPerTile = (this._rows - 1) / this._rows;\r\n\r\n    // Base vertical size of a column.\r\n    let baseTileHeight = this.getBaseTileSize(percentHeightPerTile, gutterHeightPerTile);\r\n\r\n    tile._setStyle('top', this.getTilePosition(baseTileHeight, rowIndex));\r\n    tile._setStyle('height', calc(this.getTileSize(baseTileHeight, tile.rowspan)));\r\n  }\r\n\r\n  reset(list: MatGridList) {\r\n    list._tiles.forEach(tile => {\r\n      tile._setStyle('top', null);\r\n      tile._setStyle('height', null);\r\n    });\r\n  }\r\n}\r\n\r\n\r\n/** Wraps a CSS string in a calc function */\r\nfunction calc(exp: string): string { return `calc(${exp})`; }\r\n\r\n\r\n/** Appends pixels to a CSS string if no units are given. */\r\nfunction normalizeUnits(value: string): string {\r\n  return (value.match(/px|em|rem/)) ? value : value + 'px';\r\n}\r\n\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {QueryList} from '@angular/core';\r\nimport {MatGridTile} from './grid-tile';\r\n\r\n/**\r\n * Class for determining, from a list of tiles, the (row, col) position of each of those tiles\r\n * in the grid. This is necessary (rather than just rendering the tiles in normal document flow)\r\n * because the tiles can have a rowspan.\r\n *\r\n * The positioning algorithm greedily places each tile as soon as it encounters a gap in the grid\r\n * large enough to accommodate it so that the tiles still render in the same order in which they\r\n * are given.\r\n *\r\n * The basis of the algorithm is the use of an array to track the already placed tiles. Each\r\n * element of the array corresponds to a column, and the value indicates how many cells in that\r\n * column are already occupied; zero indicates an empty cell. Moving \"down\" to the next row\r\n * decrements each value in the tracking array (indicating that the column is one cell closer to\r\n * being free).\r\n *\r\n * @docs-private\r\n */\r\nexport class TileCoordinator {\r\n  /** Tracking array (see class description). */\r\n  tracker: number[];\r\n\r\n  /** Index at which the search for the next gap will start. */\r\n  columnIndex: number = 0;\r\n\r\n  /** The current row index. */\r\n  rowIndex: number = 0;\r\n\r\n  /** Gets the total number of rows occupied by tiles */\r\n  get rowCount(): number { return this.rowIndex + 1; }\r\n\r\n  /**\r\n   * Gets the total span of rows occupied by tiles.\r\n   * Ex: A list with 1 row that contains a tile with rowspan 2 will have a total rowspan of 2.\r\n   */\r\n  get rowspan() {\r\n    let lastRowMax = Math.max(...this.tracker);\r\n    // if any of the tiles has a rowspan that pushes it beyond the total row count,\r\n    // add the difference to the rowcount\r\n    return lastRowMax > 1 ? this.rowCount + lastRowMax - 1 : this.rowCount;\r\n  }\r\n\r\n  /** The computed (row, col) position of each tile (the output). */\r\n  positions: TilePosition[];\r\n\r\n  constructor(numColumns: number, tiles: QueryList<MatGridTile>) {\r\n    this.tracker = new Array(numColumns);\r\n    this.tracker.fill(0, 0, this.tracker.length);\r\n\r\n    this.positions = tiles.map(tile => this._trackTile(tile));\r\n  }\r\n\r\n  /** Calculates the row and col position of a tile. */\r\n  private _trackTile(tile: MatGridTile): TilePosition {\r\n    // Find a gap large enough for this tile.\r\n    let gapStartIndex = this._findMatchingGap(tile.colspan);\r\n\r\n    // Place tile in the resulting gap.\r\n    this._markTilePosition(gapStartIndex, tile);\r\n\r\n    // The next time we look for a gap, the search will start at columnIndex, which should be\r\n    // immediately after the tile that has just been placed.\r\n    this.columnIndex = gapStartIndex + tile.colspan;\r\n\r\n    return new TilePosition(this.rowIndex, gapStartIndex);\r\n  }\r\n\r\n  /** Finds the next available space large enough to fit the tile. */\r\n  private _findMatchingGap(tileCols: number): number {\r\n    if (tileCols > this.tracker.length) {\r\n      throw Error(`mat-grid-list: tile with colspan ${tileCols} is wider than ` +\r\n                      `grid with cols=\"${this.tracker.length}\".`);\r\n    }\r\n\r\n    // Start index is inclusive, end index is exclusive.\r\n    let gapStartIndex = -1;\r\n    let gapEndIndex = -1;\r\n\r\n    // Look for a gap large enough to fit the given tile. Empty spaces are marked with a zero.\r\n    do {\r\n      // If we've reached the end of the row, go to the next row.\r\n      if (this.columnIndex + tileCols > this.tracker.length) {\r\n        this._nextRow();\r\n        continue;\r\n      }\r\n\r\n      gapStartIndex = this.tracker.indexOf(0, this.columnIndex);\r\n\r\n      // If there are no more empty spaces in this row at all, move on to the next row.\r\n      if (gapStartIndex == -1) {\r\n        this._nextRow();\r\n        continue;\r\n      }\r\n\r\n      gapEndIndex = this._findGapEndIndex(gapStartIndex);\r\n\r\n      // If a gap large enough isn't found, we want to start looking immediately after the current\r\n      // gap on the next iteration.\r\n      this.columnIndex = gapStartIndex + 1;\r\n\r\n      // Continue iterating until we find a gap wide enough for this tile.\r\n    } while (gapEndIndex - gapStartIndex < tileCols);\r\n\r\n    // If we still didn't manage to find a gap, ensure that the index is\r\n    // at least zero so the tile doesn't get pulled out of the grid.\r\n    return Math.max(gapStartIndex, 0);\r\n  }\r\n\r\n  /** Move \"down\" to the next row. */\r\n  private _nextRow(): void {\r\n    this.columnIndex = 0;\r\n    this.rowIndex++;\r\n\r\n    // Decrement all spaces by one to reflect moving down one row.\r\n    for (let i = 0; i < this.tracker.length; i++) {\r\n      this.tracker[i] = Math.max(0, this.tracker[i] - 1);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Finds the end index (exclusive) of a gap given the index from which to start looking.\r\n   * The gap ends when a non-zero value is found.\r\n   */\r\n  private _findGapEndIndex(gapStartIndex: number): number {\r\n    for (let i = gapStartIndex + 1; i < this.tracker.length; i++) {\r\n      if (this.tracker[i] != 0) {\r\n        return i;\r\n      }\r\n    }\r\n\r\n    // The gap ends with the end of the row.\r\n    return this.tracker.length;\r\n  }\r\n\r\n  /** Update the tile tracker to account for the given tile in the given space. */\r\n  private _markTilePosition(start: number, tile: MatGridTile): void {\r\n    for (let i = 0; i < tile.colspan; i++) {\r\n      this.tracker[start + i] = tile.rowspan;\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Simple data structure for tile position (row, col).\r\n * @docs-private\r\n */\r\nexport class TilePosition {\r\n  constructor(public row: number, public col: number) {}\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {\r\n  Component,\r\n  ViewEncapsulation,\r\n  ElementRef,\r\n  Input,\r\n  ContentChildren,\r\n  QueryList,\r\n  AfterContentInit,\r\n  Directive,\r\n  ChangeDetectionStrategy,\r\n} from '@angular/core';\r\nimport {MatLine, MatLineSetter} from '@angular/material/core';\r\nimport {coerceToNumber} from './grid-list-measure';\r\n\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'mat-grid-tile',\r\n  exportAs: 'matGridTile',\r\n  host: {\r\n    'class': 'mat-grid-tile',\r\n  },\r\n  templateUrl: 'grid-tile.html',\r\n  styleUrls: ['grid-list.css'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  preserveWhitespaces: false,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class MatGridTile {\r\n  _rowspan: number = 1;\r\n  _colspan: number = 1;\r\n\r\n  constructor(private _element: ElementRef) {}\r\n\r\n  /** Amount of rows that the grid tile takes up. */\r\n  @Input()\r\n  get rowspan(): number { return this._rowspan; }\r\n  set rowspan(value: number) { this._rowspan = coerceToNumber(value); }\r\n\r\n  /** Amount of columns that the grid tile takes up. */\r\n  @Input()\r\n  get colspan(): number { return this._colspan; }\r\n  set colspan(value: number) { this._colspan = coerceToNumber(value); }\r\n\r\n  /**\r\n   * Sets the style of the grid-tile element.  Needs to be set manually to avoid\r\n   * \"Changed after checked\" errors that would occur with HostBinding.\r\n   */\r\n  _setStyle(property: string, value: any): void {\r\n    this._element.nativeElement.style[property] = value;\r\n  }\r\n}\r\n\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'mat-grid-tile-header, mat-grid-tile-footer',\r\n  templateUrl: 'grid-tile-text.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  encapsulation: ViewEncapsulation.None,\r\n  preserveWhitespaces: false,\r\n})\r\nexport class MatGridTileText implements AfterContentInit {\r\n  /**\r\n   *  Helper that watches the number of lines in a text area and sets\r\n   * a class on the host element that matches the line count.\r\n   */\r\n  _lineSetter: MatLineSetter;\r\n  @ContentChildren(MatLine) _lines: QueryList<MatLine>;\r\n\r\n  constructor(private _element: ElementRef) {}\r\n\r\n  ngAfterContentInit() {\r\n    this._lineSetter = new MatLineSetter(this._lines, this._element);\r\n  }\r\n}\r\n\r\n/**\r\n * Directive whose purpose is to add the mat- CSS styling to this selector.\r\n * @docs-private\r\n */\r\n@Directive({\r\n  selector: '[mat-grid-avatar], [matGridAvatar]',\r\n  host: {'class': 'mat-grid-avatar'}\r\n})\r\nexport class MatGridAvatarCssMatStyler {}\r\n\r\n/**\r\n * Directive whose purpose is to add the mat- CSS styling to this selector.\r\n * @docs-private\r\n */\r\n@Directive({\r\n  selector: 'mat-grid-tile-header',\r\n  host: {'class': 'mat-grid-tile-header'}\r\n})\r\nexport class MatGridTileHeaderCssMatStyler {}\r\n\r\n/**\r\n * Directive whose purpose is to add the mat- CSS styling to this selector.\r\n * @docs-private\r\n */\r\n@Directive({\r\n  selector: 'mat-grid-tile-footer',\r\n  host: {'class': 'mat-grid-tile-footer'}\r\n})\r\nexport class MatGridTileFooterCssMatStyler {}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\n/**\r\n * Converts values into strings. Falsy values become empty strings.\r\n * @docs-private\r\n */\r\nexport function coerceToString(value: string | number): string {\r\n  return `${value || ''}`;\r\n}\r\n\r\n/**\r\n * Converts a value that might be a string into a number.\r\n * @docs-private\r\n */\r\nexport function coerceToNumber(value: string | number): number {\r\n  return typeof value === 'string' ? parseInt(value, 10) : value;\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {CommonModule} from '@angular/common';\r\nimport {NgModule} from '@angular/core';\r\nimport {UNIQUE_SELECTION_DISPATCHER_PROVIDER} from '@angular/cdk/collections';\r\nimport {CdkAccordionModule} from '@angular/cdk/accordion';\r\nimport {A11yModule} from '@angular/cdk/a11y';\r\nimport {PortalModule} from '@angular/cdk/portal';\r\nimport {MatAccordion} from './accordion';\r\nimport {MatExpansionPanelContent} from './expansion-panel-content';\r\nimport {\r\n  MatExpansionPanel,\r\n  MatExpansionPanelActionRow\r\n} from './expansion-panel';\r\nimport {\r\n  MatExpansionPanelDescription,\r\n  MatExpansionPanelHeader,\r\n  MatExpansionPanelTitle,\r\n} from './expansion-panel-header';\r\n\r\n\r\n@NgModule({\r\n  imports: [CommonModule, A11yModule, CdkAccordionModule, PortalModule],\r\n  exports: [\r\n    MatAccordion,\r\n    MatExpansionPanel,\r\n    MatExpansionPanelActionRow,\r\n    MatExpansionPanelHeader,\r\n    MatExpansionPanelTitle,\r\n    MatExpansionPanelDescription,\r\n    MatExpansionPanelContent,\r\n  ],\r\n  declarations: [\r\n    MatAccordion,\r\n    MatExpansionPanel,\r\n    MatExpansionPanelActionRow,\r\n    MatExpansionPanelHeader,\r\n    MatExpansionPanelTitle,\r\n    MatExpansionPanelDescription,\r\n    MatExpansionPanelContent,\r\n  ],\r\n  providers: [UNIQUE_SELECTION_DISPATCHER_PROVIDER]\r\n})\r\nexport class MatExpansionModule {}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {FocusMonitor} from '@angular/cdk/a11y';\r\nimport {ENTER, SPACE} from '@angular/cdk/keycodes';\r\nimport {filter} from 'rxjs/operators/filter';\r\nimport {\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  Directive,\r\n  ElementRef,\r\n  Host,\r\n  Input,\r\n  OnDestroy,\r\n  ViewEncapsulation,\r\n} from '@angular/core';\r\nimport {merge} from 'rxjs/observable/merge';\r\nimport {Subscription} from 'rxjs/Subscription';\r\nimport {MatExpansionPanel} from './expansion-panel';\r\nimport {matExpansionAnimations} from './expansion-animations';\r\n\r\n\r\n/**\r\n * `<mat-expansion-panel-header>`\r\n *\r\n * This component corresponds to the header element of an `<mat-expansion-panel>`.\r\n */\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'mat-expansion-panel-header',\r\n  styleUrls: ['./expansion-panel-header.css'],\r\n  templateUrl: './expansion-panel-header.html',\r\n  encapsulation: ViewEncapsulation.None,\r\n  preserveWhitespaces: false,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  animations: [\r\n    matExpansionAnimations.indicatorRotate,\r\n    matExpansionAnimations.expansionHeaderHeight\r\n  ],\r\n  host: {\r\n    'class': 'mat-expansion-panel-header',\r\n    'role': 'button',\r\n    '[attr.id]': 'panel._headerId',\r\n    '[attr.tabindex]': 'panel.disabled ? -1 : 0',\r\n    '[attr.aria-controls]': '_getPanelId()',\r\n    '[attr.aria-expanded]': '_isExpanded()',\r\n    '[attr.aria-disabled]': 'panel.disabled',\r\n    '[class.mat-expanded]': '_isExpanded()',\r\n    '(click)': '_toggle()',\r\n    '(keydown)': '_keydown($event)',\r\n    '[@expansionHeight]': `{\r\n        value: _getExpandedState(),\r\n        params: {\r\n          collapsedHeight: collapsedHeight,\r\n          expandedHeight: expandedHeight\r\n        }\r\n    }`,\r\n  },\r\n})\r\nexport class MatExpansionPanelHeader implements OnDestroy {\r\n  private _parentChangeSubscription = Subscription.EMPTY;\r\n\r\n  constructor(\r\n    @Host() public panel: MatExpansionPanel,\r\n    private _element: ElementRef,\r\n    private _focusMonitor: FocusMonitor,\r\n    private _changeDetectorRef: ChangeDetectorRef) {\r\n\r\n    // Since the toggle state depends on an @Input on the panel, we\r\n    // need to  subscribe and trigger change detection manually.\r\n    this._parentChangeSubscription = merge(\r\n      panel.opened,\r\n      panel.closed,\r\n      panel._inputChanges.pipe(filter(changes => !!(changes.hideToggle || changes.disabled)))\r\n    )\r\n    .subscribe(() => this._changeDetectorRef.markForCheck());\r\n\r\n    _focusMonitor.monitor(_element.nativeElement);\r\n  }\r\n\r\n  /** Height of the header while the panel is expanded. */\r\n  @Input() expandedHeight: string;\r\n\r\n  /** Height of the header while the panel is collapsed. */\r\n  @Input() collapsedHeight: string;\r\n\r\n  /** Toggles the expanded state of the panel. */\r\n  _toggle(): void {\r\n    this.panel.toggle();\r\n  }\r\n\r\n  /** Gets whether the panel is expanded. */\r\n  _isExpanded(): boolean {\r\n    return this.panel.expanded;\r\n  }\r\n\r\n  /** Gets the expanded state string of the panel. */\r\n  _getExpandedState(): string {\r\n    return this.panel._getExpandedState();\r\n  }\r\n\r\n  /** Gets the panel id. */\r\n  _getPanelId(): string {\r\n    return this.panel.id;\r\n  }\r\n\r\n  /** Gets whether the expand indicator should be shown. */\r\n  _showToggle(): boolean {\r\n    return !this.panel.hideToggle && !this.panel.disabled;\r\n  }\r\n\r\n  /** Handle keydown event calling to toggle() if appropriate. */\r\n  _keydown(event: KeyboardEvent) {\r\n    switch (event.keyCode) {\r\n      // Toggle for space and enter keys.\r\n      case SPACE:\r\n      case ENTER:\r\n        event.preventDefault();\r\n        this._toggle();\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this._parentChangeSubscription.unsubscribe();\r\n    this._focusMonitor.stopMonitoring(this._element.nativeElement);\r\n  }\r\n}\r\n\r\n/**\r\n * `<mat-panel-description>`\r\n *\r\n * This direction is to be used inside of the MatExpansionPanelHeader component.\r\n */\r\n@Directive({\r\n  selector: 'mat-panel-description',\r\n  host : {\r\n    class: 'mat-expansion-panel-header-description'\r\n  }\r\n})\r\nexport class MatExpansionPanelDescription {}\r\n\r\n/**\r\n * `<mat-panel-title>`\r\n *\r\n * This direction is to be used inside of the MatExpansionPanelHeader component.\r\n */\r\n@Directive({\r\n  selector: 'mat-panel-title',\r\n  host : {\r\n    class: 'mat-expansion-panel-header-title'\r\n  }\r\n})\r\nexport class MatExpansionPanelTitle {}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {AnimationEvent} from '@angular/animations';\r\nimport {\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  Directive,\r\n  Host,\r\n  Input,\r\n  OnChanges,\r\n  OnDestroy,\r\n  Optional,\r\n  SimpleChanges,\r\n  ViewEncapsulation,\r\n  ViewContainerRef,\r\n  AfterContentInit,\r\n  ContentChild,\r\n} from '@angular/core';\r\nimport {CdkAccordionItem} from '@angular/cdk/accordion';\r\nimport {UniqueSelectionDispatcher} from '@angular/cdk/collections';\r\nimport {TemplatePortal} from '@angular/cdk/portal';\r\nimport {Subject} from 'rxjs/Subject';\r\nimport {take} from 'rxjs/operators/take';\r\nimport {filter} from 'rxjs/operators/filter';\r\nimport {startWith} from 'rxjs/operators/startWith';\r\nimport {MatAccordion} from './accordion';\r\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\r\nimport {MatExpansionPanelContent} from './expansion-panel-content';\r\nimport {matExpansionAnimations} from './expansion-animations';\r\n\r\n/** MatExpansionPanel's states. */\r\nexport type MatExpansionPanelState = 'expanded' | 'collapsed';\r\n\r\n/** Counter for generating unique element ids. */\r\nlet uniqueId = 0;\r\n\r\n/**\r\n * `<mat-expansion-panel>`\r\n *\r\n * This component can be used as a single element to show expandable content, or as one of\r\n * multiple children of an element with the MdAccordion directive attached.\r\n */\r\n@Component({\r\n  moduleId: module.id,\r\n  styleUrls: ['./expansion-panel.css'],\r\n  selector: 'mat-expansion-panel',\r\n  exportAs: 'matExpansionPanel',\r\n  templateUrl: './expansion-panel.html',\r\n  encapsulation: ViewEncapsulation.None,\r\n  preserveWhitespaces: false,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  inputs: ['disabled', 'expanded'],\r\n  outputs: ['opened', 'closed', 'expandedChange'],\r\n  animations: [matExpansionAnimations.bodyExpansion],\r\n  host: {\r\n    'class': 'mat-expansion-panel',\r\n    '[class.mat-expanded]': 'expanded',\r\n    '[class.mat-expansion-panel-spacing]': '_hasSpacing()',\r\n  }\r\n})\r\nexport class MatExpansionPanel extends CdkAccordionItem\r\n    implements AfterContentInit, OnChanges, OnDestroy {\r\n  /** Whether the toggle indicator should be hidden. */\r\n  @Input()\r\n  get hideToggle(): boolean { return this._hideToggle; }\r\n  set hideToggle(value: boolean) {\r\n    this._hideToggle = coerceBooleanProperty(value);\r\n  }\r\n  private _hideToggle = false;\r\n\r\n  /** Stream that emits for changes in `@Input` properties. */\r\n  readonly _inputChanges = new Subject<SimpleChanges>();\r\n\r\n  /** Optionally defined accordion the expansion panel belongs to. */\r\n  accordion: MatAccordion;\r\n\r\n  /** Content that will be rendered lazily. */\r\n  @ContentChild(MatExpansionPanelContent) _lazyContent: MatExpansionPanelContent;\r\n\r\n  /** Portal holding the user's content. */\r\n  _portal: TemplatePortal;\r\n\r\n  /** ID for the associated header element. Used for a11y labelling. */\r\n  _headerId = `mat-expansion-panel-header-${uniqueId++}`;\r\n\r\n  constructor(@Optional() @Host() accordion: MatAccordion,\r\n              _changeDetectorRef: ChangeDetectorRef,\r\n              _uniqueSelectionDispatcher: UniqueSelectionDispatcher,\r\n              private _viewContainerRef: ViewContainerRef) {\r\n    super(accordion, _changeDetectorRef, _uniqueSelectionDispatcher);\r\n    this.accordion = accordion;\r\n  }\r\n\r\n  /** Whether the expansion indicator should be hidden. */\r\n  _getHideToggle(): boolean {\r\n    if (this.accordion) {\r\n      return this.accordion.hideToggle;\r\n    }\r\n    return this.hideToggle;\r\n  }\r\n\r\n  /** Determines whether the expansion panel should have spacing between it and its siblings. */\r\n  _hasSpacing(): boolean {\r\n    if (this.accordion) {\r\n      return (this.expanded ? this.accordion.displayMode : this._getExpandedState()) === 'default';\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /** Gets the expanded state string. */\r\n  _getExpandedState(): MatExpansionPanelState {\r\n    return this.expanded ? 'expanded' : 'collapsed';\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    if (this._lazyContent) {\r\n      // Render the content as soon as the panel becomes open.\r\n      this.opened.pipe(\r\n        startWith(null!),\r\n        filter(() => this.expanded && !this._portal),\r\n        take(1)\r\n      ).subscribe(() => {\r\n        this._portal = new TemplatePortal(this._lazyContent._template, this._viewContainerRef);\r\n      });\r\n    }\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    this._inputChanges.next(changes);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    super.ngOnDestroy();\r\n    this._inputChanges.complete();\r\n  }\r\n\r\n  _bodyAnimation(event: AnimationEvent) {\r\n    const classList = event.element.classList;\r\n    const cssClass = 'mat-expanded';\r\n    const {phaseName, toState} = event;\r\n\r\n    // Toggle the body's `overflow: hidden` class when closing starts or when expansion ends in\r\n    // order to prevent the cases where switching too early would cause the animation to jump.\r\n    // Note that we do it directly on the DOM element to avoid the slight delay that comes\r\n    // with doing it via change detection.\r\n    if (phaseName === 'done' && toState === 'expanded') {\r\n      classList.add(cssClass);\r\n    } else if (phaseName === 'start' && toState === 'collapsed') {\r\n      classList.remove(cssClass);\r\n    }\r\n  }\r\n}\r\n\r\n@Directive({\r\n  selector: 'mat-action-row',\r\n  host: {\r\n    class: 'mat-action-row'\r\n  }\r\n})\r\nexport class MatExpansionPanelActionRow {}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\nimport {\r\n  animate,\r\n  state,\r\n  style,\r\n  transition,\r\n  trigger,\r\n  AnimationTriggerMetadata,\r\n} from '@angular/animations';\r\n\r\n/** Time and timing curve for expansion panel animations. */\r\nexport const EXPANSION_PANEL_ANIMATION_TIMING = '225ms cubic-bezier(0.4,0.0,0.2,1)';\r\n\r\n/** Animations used by the Material expansion panel. */\r\nexport const matExpansionAnimations: {\r\n  readonly indicatorRotate: AnimationTriggerMetadata;\r\n  readonly expansionHeaderHeight: AnimationTriggerMetadata;\r\n  readonly bodyExpansion: AnimationTriggerMetadata;\r\n} = {\r\n  /** Animation that rotates the indicator arrow. */\r\n  indicatorRotate: trigger('indicatorRotate', [\r\n    state('collapsed', style({transform: 'rotate(0deg)'})),\r\n    state('expanded', style({transform: 'rotate(180deg)'})),\r\n    transition('expanded <=> collapsed', animate(EXPANSION_PANEL_ANIMATION_TIMING)),\r\n  ]),\r\n\r\n  /** Animation that expands and collapses the panel header height. */\r\n  expansionHeaderHeight: trigger('expansionHeight', [\r\n    state('collapsed', style({\r\n      height: '{{collapsedHeight}}',\r\n    }), {\r\n      params: {collapsedHeight: '48px'},\r\n    }),\r\n    state('expanded', style({\r\n      height: '{{expandedHeight}}'\r\n    }), {\r\n      params: {expandedHeight: '64px'}\r\n    }),\r\n    transition('expanded <=> collapsed', animate(EXPANSION_PANEL_ANIMATION_TIMING)),\r\n  ]),\r\n\r\n  /** Animation that expands and collapses the panel content. */\r\n  bodyExpansion: trigger('bodyExpansion', [\r\n    state('collapsed', style({height: '0px', visibility: 'hidden'})),\r\n    state('expanded', style({height: '*', visibility: 'visible'})),\r\n    transition('expanded <=> collapsed', animate(EXPANSION_PANEL_ANIMATION_TIMING)),\r\n  ])\r\n};\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {Directive, TemplateRef} from '@angular/core';\r\n\r\n/**\r\n * Expansion panel content that will be rendered lazily\r\n * after the panel is opened for the first time.\r\n */\r\n@Directive({\r\n  selector: 'ng-template[matExpansionPanelContent]'\r\n})\r\nexport class MatExpansionPanelContent {\r\n  constructor(public _template: TemplateRef<any>) {}\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {Directive, Input} from '@angular/core';\r\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\r\nimport {CdkAccordion} from '@angular/cdk/accordion';\r\n\r\n/** MatAccordion's display modes. */\r\nexport type MatAccordionDisplayMode = 'default' | 'flat';\r\n\r\n/**\r\n * Directive for a Material Design Accordion.\r\n */\r\n@Directive({\r\n  selector: 'mat-accordion',\r\n  exportAs: 'matAccordion',\r\n  host: {\r\n    class: 'mat-accordion'\r\n  }\r\n})\r\nexport class MatAccordion extends CdkAccordion {\r\n  /** Whether the expansion indicator should be hidden. */\r\n  @Input()\r\n  get hideToggle(): boolean { return this._hideToggle; }\r\n  set hideToggle(show: boolean) { this._hideToggle = coerceBooleanProperty(show); }\r\n  private _hideToggle: boolean = false;\r\n\r\n  /**\r\n   * The display mode used for all expansion panels in the accordion. Currently two display\r\n   * modes exist:\r\n   *   default - a gutter-like spacing is placed around any expanded panel, placing the expanded\r\n   *     panel at a different elevation from the reset of the accordion.\r\n   *  flat - no spacing is placed around expanded panels, showing all panels at the same\r\n   *     elevation.\r\n   */\r\n  @Input() displayMode: MatAccordionDisplayMode = 'default';\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {MatCommonModule} from '@angular/material/core';\r\nimport {MatDivider} from './divider';\r\n\r\n\r\n@NgModule({\r\n  imports: [MatCommonModule, CommonModule],\r\n  exports: [\r\n    MatDivider,\r\n    MatCommonModule,\r\n  ],\r\n  declarations: [\r\n    MatDivider,\r\n  ],\r\n})\r\nexport class MatDividerModule {}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {ChangeDetectionStrategy, Component, Input, ViewEncapsulation} from '@angular/core';\r\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\r\n\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'mat-divider',\r\n  host: {\r\n    'role': 'separator',\r\n    '[attr.aria-orientation]': 'vertical ? \"vertical\" : \"horizontal\"',\r\n    '[class.mat-divider-vertical]': 'vertical',\r\n    '[class.mat-divider-inset]': 'inset',\r\n    'class': 'mat-divider'\r\n  },\r\n  template: '',\r\n  styleUrls: ['divider.css'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  preserveWhitespaces: false,\r\n})\r\nexport class MatDivider {\r\n  /** Whether the divider is vertically aligned. */\r\n  @Input()\r\n  get vertical(): boolean { return this._vertical; }\r\n  set vertical(value: boolean) { this._vertical = coerceBooleanProperty(value); }\r\n  private _vertical: boolean = false;\r\n\r\n  /** Whether the divider is an inset divider. */\r\n  @Input()\r\n  get inset(): boolean { return this._inset; }\r\n  set inset(value: boolean) { this._inset = coerceBooleanProperty(value); }\r\n  private _inset: boolean = false;\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {A11yModule} from '@angular/cdk/a11y';\r\nimport {OverlayModule} from '@angular/cdk/overlay';\r\nimport {CommonModule} from '@angular/common';\r\nimport {NgModule} from '@angular/core';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport {MatCalendar} from './calendar';\r\nimport {MatCalendarBody} from './calendar-body';\r\nimport {\r\n  MAT_DATEPICKER_SCROLL_STRATEGY_PROVIDER,\r\n  MatDatepicker,\r\n  MatDatepickerContent,\r\n} from './datepicker';\r\nimport {MatDatepickerInput} from './datepicker-input';\r\nimport {MatDatepickerIntl} from './datepicker-intl';\r\nimport {MatDatepickerToggle, MatDatepickerToggleIcon} from './datepicker-toggle';\r\nimport {MatMonthView} from './month-view';\r\nimport {MatMultiYearView} from './multi-year-view';\r\nimport {MatYearView} from './year-view';\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    MatButtonModule,\r\n    MatDialogModule,\r\n    OverlayModule,\r\n    A11yModule,\r\n  ],\r\n  exports: [\r\n    MatCalendar,\r\n    MatCalendarBody,\r\n    MatDatepicker,\r\n    MatDatepickerContent,\r\n    MatDatepickerInput,\r\n    MatDatepickerToggle,\r\n    MatDatepickerToggleIcon,\r\n    MatMonthView,\r\n    MatYearView,\r\n    MatMultiYearView,\r\n  ],\r\n  declarations: [\r\n    MatCalendar,\r\n    MatCalendarBody,\r\n    MatDatepicker,\r\n    MatDatepickerContent,\r\n    MatDatepickerInput,\r\n    MatDatepickerToggle,\r\n    MatDatepickerToggleIcon,\r\n    MatMonthView,\r\n    MatYearView,\r\n    MatMultiYearView,\r\n  ],\r\n  providers: [\r\n    MatDatepickerIntl,\r\n    MAT_DATEPICKER_SCROLL_STRATEGY_PROVIDER,\r\n  ],\r\n  entryComponents: [\r\n    MatDatepickerContent,\r\n  ]\r\n})\r\nexport class MatDatepickerModule {}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\r\nimport {\r\n  AfterContentInit,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  Input,\r\n  OnChanges,\r\n  OnDestroy,\r\n  SimpleChanges,\r\n  ViewEncapsulation,\r\n  Directive,\r\n  ContentChild,\r\n} from '@angular/core';\r\nimport {merge} from 'rxjs/observable/merge';\r\nimport {of as observableOf} from 'rxjs/observable/of';\r\nimport {Subscription} from 'rxjs/Subscription';\r\nimport {MatDatepicker} from './datepicker';\r\nimport {MatDatepickerIntl} from './datepicker-intl';\r\n\r\n\r\n/** Can be used to override the icon of a `matDatepickerToggle`. */\r\n@Directive({\r\n  selector: '[matDatepickerToggleIcon]'\r\n})\r\nexport class MatDatepickerToggleIcon {}\r\n\r\n\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'mat-datepicker-toggle',\r\n  templateUrl: 'datepicker-toggle.html',\r\n  styleUrls: ['datepicker-toggle.css'],\r\n  host: {\r\n    'class': 'mat-datepicker-toggle',\r\n    '[class.mat-datepicker-toggle-active]': 'datepicker && datepicker.opened',\r\n  },\r\n  exportAs: 'matDatepickerToggle',\r\n  encapsulation: ViewEncapsulation.None,\r\n  preserveWhitespaces: false,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class MatDatepickerToggle<D> implements AfterContentInit, OnChanges, OnDestroy {\r\n  private _stateChanges = Subscription.EMPTY;\r\n\r\n  /** Datepicker instance that the button will toggle. */\r\n  @Input('for') datepicker: MatDatepicker<D>;\r\n\r\n  /** Whether the toggle button is disabled. */\r\n  @Input()\r\n  get disabled(): boolean {\r\n    return this._disabled === undefined ? this.datepicker.disabled : !!this._disabled;\r\n  }\r\n  set disabled(value: boolean) {\r\n    this._disabled = coerceBooleanProperty(value);\r\n  }\r\n  private _disabled: boolean;\r\n\r\n  /** Custom icon set by the consumer. */\r\n  @ContentChild(MatDatepickerToggleIcon) _customIcon: MatDatepickerToggleIcon;\r\n\r\n  constructor(public _intl: MatDatepickerIntl, private _changeDetectorRef: ChangeDetectorRef) {}\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.datepicker) {\r\n      this._watchStateChanges();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this._stateChanges.unsubscribe();\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    this._watchStateChanges();\r\n  }\r\n\r\n  _open(event: Event): void {\r\n    if (this.datepicker && !this.disabled) {\r\n      this.datepicker.open();\r\n      event.stopPropagation();\r\n    }\r\n  }\r\n\r\n  private _watchStateChanges() {\r\n    const datepickerDisabled = this.datepicker ? this.datepicker._disabledChange : observableOf();\r\n    const inputDisabled = this.datepicker && this.datepicker._datepickerInput ?\r\n        this.datepicker._datepickerInput._disabledChange : observableOf();\r\n    const datepickerToggled = this.datepicker ?\r\n        merge(this.datepicker.openedStream, this.datepicker.closedStream) :\r\n        observableOf();\r\n\r\n    this._stateChanges.unsubscribe();\r\n    this._stateChanges = merge(\r\n      this._intl.changes,\r\n      datepickerDisabled,\r\n      inputDisabled,\r\n      datepickerToggled\r\n    ).subscribe(() => this._changeDetectorRef.markForCheck());\r\n  }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\r\nimport {DOWN_ARROW} from '@angular/cdk/keycodes';\r\nimport {\r\n  AfterContentInit,\r\n  Directive,\r\n  ElementRef,\r\n  EventEmitter,\r\n  forwardRef,\r\n  Inject,\r\n  Input,\r\n  OnDestroy,\r\n  Optional,\r\n  Output,\r\n} from '@angular/core';\r\nimport {\r\n  AbstractControl,\r\n  ControlValueAccessor,\r\n  NG_VALIDATORS,\r\n  NG_VALUE_ACCESSOR,\r\n  ValidationErrors,\r\n  Validator,\r\n  ValidatorFn,\r\n  Validators\r\n} from '@angular/forms';\r\nimport {DateAdapter, MAT_DATE_FORMATS, MatDateFormats} from '@angular/material/core';\r\nimport {MatFormField} from '@angular/material/form-field';\r\nimport {MAT_INPUT_VALUE_ACCESSOR} from '@angular/material/input';\r\nimport {Subscription} from 'rxjs/Subscription';\r\nimport {MatDatepicker} from './datepicker';\r\nimport {createMissingDateImplError} from './datepicker-errors';\r\n\r\n\r\nexport const MAT_DATEPICKER_VALUE_ACCESSOR: any = {\r\n  provide: NG_VALUE_ACCESSOR,\r\n  useExisting: forwardRef(() => MatDatepickerInput),\r\n  multi: true\r\n};\r\n\r\n\r\nexport const MAT_DATEPICKER_VALIDATORS: any = {\r\n  provide: NG_VALIDATORS,\r\n  useExisting: forwardRef(() => MatDatepickerInput),\r\n  multi: true\r\n};\r\n\r\n\r\n/**\r\n * An event used for datepicker input and change events. We don't always have access to a native\r\n * input or change event because the event may have been triggered by the user clicking on the\r\n * calendar popup. For consistency, we always use MatDatepickerInputEvent instead.\r\n */\r\nexport class MatDatepickerInputEvent<D> {\r\n  /** The new value for the target datepicker input. */\r\n  value: D | null;\r\n\r\n  constructor(\r\n    /** Reference to the datepicker input component that emitted the event. */\r\n    public target: MatDatepickerInput<D>,\r\n    /** Reference to the native input element associated with the datepicker input. */\r\n    public targetElement: HTMLElement) {\r\n    this.value = this.target.value;\r\n  }\r\n}\r\n\r\n\r\n/** Directive used to connect an input to a MatDatepicker. */\r\n@Directive({\r\n  selector: 'input[matDatepicker]',\r\n  providers: [\r\n    MAT_DATEPICKER_VALUE_ACCESSOR,\r\n    MAT_DATEPICKER_VALIDATORS,\r\n    {provide: MAT_INPUT_VALUE_ACCESSOR, useExisting: MatDatepickerInput},\r\n  ],\r\n  host: {\r\n    '[attr.aria-haspopup]': 'true',\r\n    '[attr.aria-owns]': '(_datepicker?.opened && _datepicker.id) || null',\r\n    '[attr.min]': 'min ? _dateAdapter.toIso8601(min) : null',\r\n    '[attr.max]': 'max ? _dateAdapter.toIso8601(max) : null',\r\n    '[disabled]': 'disabled',\r\n    '(input)': '_onInput($event.target.value)',\r\n    '(change)': '_onChange()',\r\n    '(blur)': '_onTouched()',\r\n    '(keydown)': '_onKeydown($event)',\r\n  },\r\n  exportAs: 'matDatepickerInput',\r\n})\r\nexport class MatDatepickerInput<D> implements AfterContentInit, ControlValueAccessor, OnDestroy,\r\n    Validator {\r\n  /** The datepicker that this input is associated with. */\r\n  @Input()\r\n  set matDatepicker(value: MatDatepicker<D>) {\r\n    this.registerDatepicker(value);\r\n  }\r\n  _datepicker: MatDatepicker<D>;\r\n\r\n  private registerDatepicker(value: MatDatepicker<D>) {\r\n    if (value) {\r\n      this._datepicker = value;\r\n      this._datepicker._registerInput(this);\r\n    }\r\n  }\r\n\r\n  /** Function that can be used to filter out dates within the datepicker. */\r\n  @Input()\r\n  set matDatepickerFilter(value: (date: D | null) => boolean) {\r\n    this._dateFilter = value;\r\n    this._validatorOnChange();\r\n  }\r\n  _dateFilter: (date: D | null) => boolean;\r\n\r\n  /** The value of the input. */\r\n  @Input()\r\n  get value(): D | null { return this._value; }\r\n  set value(value: D | null) {\r\n    value = this._dateAdapter.deserialize(value);\r\n    this._lastValueValid = !value || this._dateAdapter.isValid(value);\r\n    value = this._getValidDateOrNull(value);\r\n    let oldDate = this.value;\r\n    this._value = value;\r\n    this._elementRef.nativeElement.value =\r\n        value ? this._dateAdapter.format(value, this._dateFormats.display.dateInput) : '';\r\n    if (!this._dateAdapter.sameDate(oldDate, value)) {\r\n      this._valueChange.emit(value);\r\n    }\r\n  }\r\n  private _value: D | null;\r\n\r\n  /** The minimum valid date. */\r\n  @Input()\r\n  get min(): D | null { return this._min; }\r\n  set min(value: D | null) {\r\n    this._min = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\r\n    this._validatorOnChange();\r\n  }\r\n  private _min: D | null;\r\n\r\n  /** The maximum valid date. */\r\n  @Input()\r\n  get max(): D | null { return this._max; }\r\n  set max(value: D | null) {\r\n    this._max = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\r\n    this._validatorOnChange();\r\n  }\r\n  private _max: D | null;\r\n\r\n  /** Whether the datepicker-input is disabled. */\r\n  @Input()\r\n  get disabled(): boolean { return !!this._disabled; }\r\n  set disabled(value: boolean) {\r\n    const newValue = coerceBooleanProperty(value);\r\n\r\n    if (this._disabled !== newValue) {\r\n      this._disabled = newValue;\r\n      this._disabledChange.emit(newValue);\r\n    }\r\n\r\n    if (newValue) {\r\n      // Normally, native input elements automatically blur if they turn disabled. This behavior\r\n      // is problematic, because it would mean that it triggers another change detection cycle,\r\n      // which then causes a changed after checked error if the input element was focused before.\r\n      this._elementRef.nativeElement.blur();\r\n    }\r\n  }\r\n  private _disabled: boolean;\r\n\r\n  /** Emits when a `change` event is fired on this `<input>`. */\r\n  @Output() readonly dateChange: EventEmitter<MatDatepickerInputEvent<D>> =\r\n      new EventEmitter<MatDatepickerInputEvent<D>>();\r\n\r\n  /** Emits when an `input` event is fired on this `<input>`. */\r\n  @Output() readonly dateInput: EventEmitter<MatDatepickerInputEvent<D>> =\r\n      new EventEmitter<MatDatepickerInputEvent<D>>();\r\n\r\n  /** Emits when the value changes (either due to user input or programmatic change). */\r\n  _valueChange = new EventEmitter<D | null>();\r\n\r\n  /** Emits when the disabled state has changed */\r\n  _disabledChange = new EventEmitter<boolean>();\r\n\r\n  _onTouched = () => {};\r\n\r\n  private _cvaOnChange: (value: any) => void = () => {};\r\n\r\n  private _validatorOnChange = () => {};\r\n\r\n  private _datepickerSubscription = Subscription.EMPTY;\r\n\r\n  private _localeSubscription = Subscription.EMPTY;\r\n\r\n  /** The form control validator for whether the input parses. */\r\n  private _parseValidator: ValidatorFn = (): ValidationErrors | null => {\r\n    return this._lastValueValid ?\r\n        null : {'matDatepickerParse': {'text': this._elementRef.nativeElement.value}};\r\n  }\r\n\r\n  /** The form control validator for the min date. */\r\n  private _minValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\r\n    const controlValue = this._getValidDateOrNull(this._dateAdapter.deserialize(control.value));\r\n    return (!this.min || !controlValue ||\r\n        this._dateAdapter.compareDate(this.min, controlValue) <= 0) ?\r\n        null : {'matDatepickerMin': {'min': this.min, 'actual': controlValue}};\r\n  }\r\n\r\n  /** The form control validator for the max date. */\r\n  private _maxValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\r\n    const controlValue = this._getValidDateOrNull(this._dateAdapter.deserialize(control.value));\r\n    return (!this.max || !controlValue ||\r\n        this._dateAdapter.compareDate(this.max, controlValue) >= 0) ?\r\n        null : {'matDatepickerMax': {'max': this.max, 'actual': controlValue}};\r\n  }\r\n\r\n  /** The form control validator for the date filter. */\r\n  private _filterValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\r\n    const controlValue = this._getValidDateOrNull(this._dateAdapter.deserialize(control.value));\r\n    return !this._dateFilter || !controlValue || this._dateFilter(controlValue) ?\r\n        null : {'matDatepickerFilter': true};\r\n  }\r\n\r\n  /** The combined form control validator for this input. */\r\n  private _validator: ValidatorFn | null =\r\n      Validators.compose(\r\n          [this._parseValidator, this._minValidator, this._maxValidator, this._filterValidator]);\r\n\r\n  /** Whether the last value set on the input was valid. */\r\n  private _lastValueValid = false;\r\n\r\n  constructor(\r\n      private _elementRef: ElementRef,\r\n      @Optional() public _dateAdapter: DateAdapter<D>,\r\n      @Optional() @Inject(MAT_DATE_FORMATS) private _dateFormats: MatDateFormats,\r\n      @Optional() private _formField: MatFormField) {\r\n    if (!this._dateAdapter) {\r\n      throw createMissingDateImplError('DateAdapter');\r\n    }\r\n    if (!this._dateFormats) {\r\n      throw createMissingDateImplError('MAT_DATE_FORMATS');\r\n    }\r\n\r\n    // Update the displayed date when the locale changes.\r\n    this._localeSubscription = _dateAdapter.localeChanges.subscribe(() => {\r\n      this.value = this.value;\r\n    });\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    if (this._datepicker) {\r\n      this._datepickerSubscription =\r\n          this._datepicker.selectedChanged.subscribe((selected: D) => {\r\n            this.value = selected;\r\n            this._cvaOnChange(selected);\r\n            this._onTouched();\r\n            this.dateInput.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));\r\n            this.dateChange.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));\r\n          });\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this._datepickerSubscription.unsubscribe();\r\n    this._localeSubscription.unsubscribe();\r\n    this._valueChange.complete();\r\n    this._disabledChange.complete();\r\n  }\r\n\r\n  /** @docs-private */\r\n  registerOnValidatorChange(fn: () => void): void {\r\n    this._validatorOnChange = fn;\r\n  }\r\n\r\n  /** @docs-private */\r\n  validate(c: AbstractControl): ValidationErrors | null {\r\n    return this._validator ? this._validator(c) : null;\r\n  }\r\n\r\n  /**\r\n   * Gets the element that the datepicker popup should be connected to.\r\n   * @return The element to connect the popup to.\r\n   */\r\n  getPopupConnectionElementRef(): ElementRef {\r\n    return this._formField ? this._formField.underlineRef : this._elementRef;\r\n  }\r\n\r\n  /**\r\n   * Determines the offset to be used when the calendar goes into a fallback position.\r\n   * Primarily used to prevent the calendar from overlapping the input.\r\n   */\r\n  _getPopupFallbackOffset(): number {\r\n    return this._formField ? -this._formField._inputContainerRef.nativeElement.clientHeight : 0;\r\n  }\r\n\r\n  // Implemented as part of ControlValueAccessor.\r\n  writeValue(value: D): void {\r\n    this.value = value;\r\n  }\r\n\r\n  // Implemented as part of ControlValueAccessor.\r\n  registerOnChange(fn: (value: any) => void): void {\r\n    this._cvaOnChange = fn;\r\n  }\r\n\r\n  // Implemented as part of ControlValueAccessor.\r\n  registerOnTouched(fn: () => void): void {\r\n    this._onTouched = fn;\r\n  }\r\n\r\n  // Implemented as part of ControlValueAccessor.\r\n  setDisabledState(isDisabled: boolean): void {\r\n    this.disabled = isDisabled;\r\n  }\r\n\r\n  _onKeydown(event: KeyboardEvent) {\r\n    if (event.altKey && event.keyCode === DOWN_ARROW) {\r\n      this._datepicker.open();\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  _onInput(value: string) {\r\n    let date = this._dateAdapter.parse(value, this._dateFormats.parse.dateInput);\r\n    this._lastValueValid = !date || this._dateAdapter.isValid(date);\r\n    date = this._getValidDateOrNull(date);\r\n    this._value = date;\r\n    this._cvaOnChange(date);\r\n    this._valueChange.emit(date);\r\n    this.dateInput.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));\r\n  }\r\n\r\n  _onChange() {\r\n    this.dateChange.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));\r\n  }\r\n\r\n  /**\r\n   * @param obj The object to check.\r\n   * @returns The given object if it is both a date instance and valid, otherwise null.\r\n   */\r\n  private _getValidDateOrNull(obj: any): D | null {\r\n    return (this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj)) ? obj : null;\r\n  }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {Directionality} from '@angular/cdk/bidi';\r\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\r\nimport {ESCAPE} from '@angular/cdk/keycodes';\r\nimport {\r\n  Overlay,\r\n  OverlayConfig,\r\n  OverlayRef,\r\n  PositionStrategy,\r\n  RepositionScrollStrategy,\r\n  ScrollStrategy,\r\n} from '@angular/cdk/overlay';\r\nimport {ComponentPortal} from '@angular/cdk/portal';\r\nimport {take} from 'rxjs/operators/take';\r\nimport {filter} from 'rxjs/operators/filter';\r\nimport {\r\n  AfterContentInit,\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  ComponentRef,\r\n  EventEmitter,\r\n  Inject,\r\n  InjectionToken,\r\n  Input,\r\n  NgZone,\r\n  OnDestroy,\r\n  Optional,\r\n  Output,\r\n  ViewChild,\r\n  ViewContainerRef,\r\n  ViewEncapsulation,\r\n} from '@angular/core';\r\nimport {DateAdapter} from '@angular/material/core';\r\nimport {MatDialog, MatDialogRef} from '@angular/material/dialog';\r\nimport {DOCUMENT} from '@angular/common';\r\nimport {Subject} from 'rxjs/Subject';\r\nimport {Subscription} from 'rxjs/Subscription';\r\nimport {merge} from 'rxjs/observable/merge';\r\nimport {MatCalendar} from './calendar';\r\nimport {createMissingDateImplError} from './datepicker-errors';\r\nimport {MatDatepickerInput} from './datepicker-input';\r\n\r\n\r\n/** Used to generate a unique ID for each datepicker instance. */\r\nlet datepickerUid = 0;\r\n\r\n/** Injection token that determines the scroll handling while the calendar is open. */\r\nexport const MAT_DATEPICKER_SCROLL_STRATEGY =\r\n    new InjectionToken<() => ScrollStrategy>('mat-datepicker-scroll-strategy');\r\n\r\n/** @docs-private */\r\nexport function MAT_DATEPICKER_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay: Overlay):\r\n    () => RepositionScrollStrategy {\r\n  return () => overlay.scrollStrategies.reposition();\r\n}\r\n\r\n/** @docs-private */\r\nexport const MAT_DATEPICKER_SCROLL_STRATEGY_PROVIDER = {\r\n  provide: MAT_DATEPICKER_SCROLL_STRATEGY,\r\n  deps: [Overlay],\r\n  useFactory: MAT_DATEPICKER_SCROLL_STRATEGY_PROVIDER_FACTORY,\r\n};\r\n\r\n\r\n/**\r\n * Component used as the content for the datepicker dialog and popup. We use this instead of using\r\n * MatCalendar directly as the content so we can control the initial focus. This also gives us a\r\n * place to put additional features of the popup that are not part of the calendar itself in the\r\n * future. (e.g. confirmation buttons).\r\n * @docs-private\r\n */\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'mat-datepicker-content',\r\n  templateUrl: 'datepicker-content.html',\r\n  styleUrls: ['datepicker-content.css'],\r\n  host: {\r\n    'class': 'mat-datepicker-content',\r\n    '[class.mat-datepicker-content-touch]': 'datepicker.touchUi',\r\n  },\r\n  exportAs: 'matDatepickerContent',\r\n  encapsulation: ViewEncapsulation.None,\r\n  preserveWhitespaces: false,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class MatDatepickerContent<D> implements AfterContentInit {\r\n  datepicker: MatDatepicker<D>;\r\n\r\n  @ViewChild(MatCalendar) _calendar: MatCalendar<D>;\r\n\r\n  ngAfterContentInit() {\r\n    this._calendar._focusActiveCell();\r\n  }\r\n}\r\n\r\n\r\n// TODO(mmalerba): We use a component instead of a directive here so the user can use implicit\r\n// template reference variables (e.g. #d vs #d=\"matDatepicker\"). We can change this to a directive\r\n// if angular adds support for `exportAs: '$implicit'` on directives.\r\n/** Component responsible for managing the datepicker popup/dialog. */\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'mat-datepicker',\r\n  template: '',\r\n  exportAs: 'matDatepicker',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  encapsulation: ViewEncapsulation.None,\r\n  preserveWhitespaces: false,\r\n})\r\nexport class MatDatepicker<D> implements OnDestroy {\r\n  /** The date to open the calendar to initially. */\r\n  @Input()\r\n  get startAt(): D | null {\r\n    // If an explicit startAt is set we start there, otherwise we start at whatever the currently\r\n    // selected value is.\r\n    return this._startAt || (this._datepickerInput ? this._datepickerInput.value : null);\r\n  }\r\n  set startAt(value: D | null) {\r\n    this._startAt = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\r\n  }\r\n  private _startAt: D | null;\r\n\r\n  /** The view that the calendar should start in. */\r\n  @Input() startView: 'month' | 'year' = 'month';\r\n\r\n  /**\r\n   * Whether the calendar UI is in touch mode. In touch mode the calendar opens in a dialog rather\r\n   * than a popup and elements have more padding to allow for bigger touch targets.\r\n   */\r\n  @Input()\r\n  get touchUi(): boolean { return this._touchUi; }\r\n  set touchUi(value: boolean) {\r\n    this._touchUi = coerceBooleanProperty(value);\r\n  }\r\n  private _touchUi = false;\r\n\r\n  /** Whether the datepicker pop-up should be disabled. */\r\n  @Input()\r\n  get disabled(): boolean {\r\n    return this._disabled === undefined && this._datepickerInput ?\r\n        this._datepickerInput.disabled : !!this._disabled;\r\n  }\r\n  set disabled(value: boolean) {\r\n    const newValue = coerceBooleanProperty(value);\r\n\r\n    if (newValue !== this._disabled) {\r\n      this._disabled = newValue;\r\n      this._disabledChange.next(newValue);\r\n    }\r\n  }\r\n  private _disabled: boolean;\r\n\r\n  /**\r\n   * Emits new selected date when selected date changes.\r\n   * @deprecated Switch to the `dateChange` and `dateInput` binding on the input element.\r\n   * @deletion-target 6.0.0\r\n   */\r\n  @Output() readonly selectedChanged: EventEmitter<D> = new EventEmitter<D>();\r\n\r\n  /** Classes to be passed to the date picker panel. Supports the same syntax as `ngClass`. */\r\n  @Input() panelClass: string | string[];\r\n\r\n  /** Emits when the datepicker has been opened. */\r\n  @Output('opened') openedStream: EventEmitter<void> = new EventEmitter<void>();\r\n\r\n  /** Emits when the datepicker has been closed. */\r\n  @Output('closed') closedStream: EventEmitter<void> = new EventEmitter<void>();\r\n\r\n  /** Whether the calendar is open. */\r\n  @Input()\r\n  get opened(): boolean { return this._opened; }\r\n  set opened(value: boolean) { value ? this.open() : this.close(); }\r\n  private _opened = false;\r\n\r\n  /** The id for the datepicker calendar. */\r\n  id: string = `mat-datepicker-${datepickerUid++}`;\r\n\r\n  /** The currently selected date. */\r\n  get _selected(): D | null { return this._validSelected; }\r\n  set _selected(value: D | null) { this._validSelected = value; }\r\n  private _validSelected: D | null = null;\r\n\r\n  /** The minimum selectable date. */\r\n  get _minDate(): D | null {\r\n    return this._datepickerInput && this._datepickerInput.min;\r\n  }\r\n\r\n  /** The maximum selectable date. */\r\n  get _maxDate(): D | null {\r\n    return this._datepickerInput && this._datepickerInput.max;\r\n  }\r\n\r\n  get _dateFilter(): (date: D | null) => boolean {\r\n    return this._datepickerInput && this._datepickerInput._dateFilter;\r\n  }\r\n\r\n  /** A reference to the overlay when the calendar is opened as a popup. */\r\n  private _popupRef: OverlayRef;\r\n\r\n  /** A reference to the dialog when the calendar is opened as a dialog. */\r\n  private _dialogRef: MatDialogRef<any> | null;\r\n\r\n  /** A portal containing the calendar for this datepicker. */\r\n  private _calendarPortal: ComponentPortal<MatDatepickerContent<D>>;\r\n\r\n  /** The element that was focused before the datepicker was opened. */\r\n  private _focusedElementBeforeOpen: HTMLElement | null = null;\r\n\r\n  private _inputSubscription = Subscription.EMPTY;\r\n\r\n  /** The input element this datepicker is associated with. */\r\n  _datepickerInput: MatDatepickerInput<D>;\r\n\r\n  /** Emits when the datepicker is disabled. */\r\n  readonly _disabledChange = new Subject<boolean>();\r\n\r\n  constructor(private _dialog: MatDialog,\r\n              private _overlay: Overlay,\r\n              private _ngZone: NgZone,\r\n              private _viewContainerRef: ViewContainerRef,\r\n              @Inject(MAT_DATEPICKER_SCROLL_STRATEGY) private _scrollStrategy,\r\n              @Optional() private _dateAdapter: DateAdapter<D>,\r\n              @Optional() private _dir: Directionality,\r\n              @Optional() @Inject(DOCUMENT) private _document: any) {\r\n    if (!this._dateAdapter) {\r\n      throw createMissingDateImplError('DateAdapter');\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.close();\r\n    this._inputSubscription.unsubscribe();\r\n    this._disabledChange.complete();\r\n\r\n    if (this._popupRef) {\r\n      this._popupRef.dispose();\r\n    }\r\n  }\r\n\r\n  /** Selects the given date */\r\n  _select(date: D): void {\r\n    let oldValue = this._selected;\r\n    this._selected = date;\r\n    if (!this._dateAdapter.sameDate(oldValue, this._selected)) {\r\n      this.selectedChanged.emit(date);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Register an input with this datepicker.\r\n   * @param input The datepicker input to register with this datepicker.\r\n   */\r\n  _registerInput(input: MatDatepickerInput<D>): void {\r\n    if (this._datepickerInput) {\r\n      throw Error('A MatDatepicker can only be associated with a single input.');\r\n    }\r\n    this._datepickerInput = input;\r\n    this._inputSubscription =\r\n        this._datepickerInput._valueChange.subscribe((value: D | null) => this._selected = value);\r\n  }\r\n\r\n  /** Open the calendar. */\r\n  open(): void {\r\n    if (this._opened || this.disabled) {\r\n      return;\r\n    }\r\n    if (!this._datepickerInput) {\r\n      throw Error('Attempted to open an MatDatepicker with no associated input.');\r\n    }\r\n    if (this._document) {\r\n      this._focusedElementBeforeOpen = this._document.activeElement;\r\n    }\r\n\r\n    this.touchUi ? this._openAsDialog() : this._openAsPopup();\r\n    this._opened = true;\r\n    this.openedStream.emit();\r\n  }\r\n\r\n  /** Close the calendar. */\r\n  close(): void {\r\n    if (!this._opened) {\r\n      return;\r\n    }\r\n    if (this._popupRef && this._popupRef.hasAttached()) {\r\n      this._popupRef.detach();\r\n    }\r\n    if (this._dialogRef) {\r\n      this._dialogRef.close();\r\n      this._dialogRef = null;\r\n    }\r\n    if (this._calendarPortal && this._calendarPortal.isAttached) {\r\n      this._calendarPortal.detach();\r\n    }\r\n\r\n    const completeClose = () => {\r\n      // The `_opened` could've been reset already if\r\n      // we got two events in quick succession.\r\n      if (this._opened) {\r\n        this._opened = false;\r\n        this.closedStream.emit();\r\n        this._focusedElementBeforeOpen = null;\r\n      }\r\n    };\r\n\r\n    if (this._focusedElementBeforeOpen &&\r\n      typeof this._focusedElementBeforeOpen.focus === 'function') {\r\n      // Because IE moves focus asynchronously, we can't count on it being restored before we've\r\n      // marked the datepicker as closed. If the event fires out of sequence and the element that\r\n      // we're refocusing opens the datepicker on focus, the user could be stuck with not being\r\n      // able to close the calendar at all. We work around it by making the logic, that marks\r\n      // the datepicker as closed, async as well.\r\n      this._focusedElementBeforeOpen.focus();\r\n      setTimeout(completeClose);\r\n    } else {\r\n      completeClose();\r\n    }\r\n  }\r\n\r\n  /** Open the calendar as a dialog. */\r\n  private _openAsDialog(): void {\r\n    this._dialogRef = this._dialog.open(MatDatepickerContent, {\r\n      direction: this._dir ? this._dir.value : 'ltr',\r\n      viewContainerRef: this._viewContainerRef,\r\n      panelClass: 'mat-datepicker-dialog',\r\n    });\r\n    this._dialogRef.afterClosed().subscribe(() => this.close());\r\n    this._dialogRef.componentInstance.datepicker = this;\r\n  }\r\n\r\n  /** Open the calendar as a popup. */\r\n  private _openAsPopup(): void {\r\n    if (!this._calendarPortal) {\r\n      this._calendarPortal = new ComponentPortal(MatDatepickerContent, this._viewContainerRef);\r\n    }\r\n\r\n    if (!this._popupRef) {\r\n      this._createPopup();\r\n    }\r\n\r\n    if (!this._popupRef.hasAttached()) {\r\n      let componentRef: ComponentRef<MatDatepickerContent<D>> =\r\n          this._popupRef.attach(this._calendarPortal);\r\n      componentRef.instance.datepicker = this;\r\n\r\n      // Update the position once the calendar has rendered.\r\n      this._ngZone.onStable.asObservable().pipe(take(1)).subscribe(() => {\r\n        this._popupRef.updatePosition();\r\n      });\r\n    }\r\n  }\r\n\r\n  /** Create the popup. */\r\n  private _createPopup(): void {\r\n    const overlayConfig = new OverlayConfig({\r\n      positionStrategy: this._createPopupPositionStrategy(),\r\n      hasBackdrop: true,\r\n      backdropClass: 'mat-overlay-transparent-backdrop',\r\n      direction: this._dir ? this._dir.value : 'ltr',\r\n      scrollStrategy: this._scrollStrategy(),\r\n      panelClass: 'mat-datepicker-popup',\r\n    });\r\n\r\n    this._popupRef = this._overlay.create(overlayConfig);\r\n\r\n    merge(\r\n      this._popupRef.backdropClick(),\r\n      this._popupRef.detachments(),\r\n      this._popupRef.keydownEvents().pipe(filter(event => event.keyCode === ESCAPE))\r\n    ).subscribe(() => this.close());\r\n  }\r\n\r\n  /** Create the popup PositionStrategy. */\r\n  private _createPopupPositionStrategy(): PositionStrategy {\r\n    const fallbackOffset = this._datepickerInput._getPopupFallbackOffset();\r\n\r\n    return this._overlay.position()\r\n      .connectedTo(this._datepickerInput.getPopupConnectionElementRef(),\r\n        {originX: 'start', originY: 'bottom'},\r\n        {overlayX: 'start', overlayY: 'top'}\r\n      )\r\n      .withFallbackPosition(\r\n        {originX: 'start', originY: 'top'},\r\n        {overlayX: 'start', overlayY: 'bottom'},\r\n        undefined,\r\n        fallbackOffset\r\n      )\r\n      .withFallbackPosition(\r\n        {originX: 'end', originY: 'bottom'},\r\n        {overlayX: 'end', overlayY: 'top'}\r\n      )\r\n      .withFallbackPosition(\r\n        {originX: 'end', originY: 'top'},\r\n        {overlayX: 'end', overlayY: 'bottom'},\r\n        undefined,\r\n        fallbackOffset\r\n      );\r\n  }\r\n\r\n  /**\r\n   * @param obj The object to check.\r\n   * @returns The given object if it is both a date instance and valid, otherwise null.\r\n   */\r\n  private _getValidDateOrNull(obj: any): D | null {\r\n    return (this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj)) ? obj : null;\r\n  }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {\r\n  DOWN_ARROW,\r\n  END,\r\n  ENTER,\r\n  HOME,\r\n  LEFT_ARROW,\r\n  PAGE_DOWN,\r\n  PAGE_UP,\r\n  RIGHT_ARROW,\r\n  UP_ARROW,\r\n} from '@angular/cdk/keycodes';\r\nimport {\r\n  AfterContentInit,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Inject,\r\n  Input,\r\n  NgZone,\r\n  OnChanges,\r\n  OnDestroy,\r\n  Optional,\r\n  Output,\r\n  SimpleChanges,\r\n  ViewChild,\r\n  ViewEncapsulation,\r\n} from '@angular/core';\r\nimport {DateAdapter, MAT_DATE_FORMATS, MatDateFormats} from '@angular/material/core';\r\nimport {take} from 'rxjs/operators/take';\r\nimport {Subscription} from 'rxjs/Subscription';\r\nimport {createMissingDateImplError} from './datepicker-errors';\r\nimport {MatDatepickerIntl} from './datepicker-intl';\r\nimport {MatMonthView} from './month-view';\r\nimport {MatMultiYearView, yearsPerPage, yearsPerRow} from './multi-year-view';\r\nimport {MatYearView} from './year-view';\r\nimport {Directionality} from '@angular/cdk/bidi';\r\n\r\n\r\n/**\r\n * A calendar that is used as part of the datepicker.\r\n * @docs-private\r\n */\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'mat-calendar',\r\n  templateUrl: 'calendar.html',\r\n  styleUrls: ['calendar.css'],\r\n  host: {\r\n    'class': 'mat-calendar',\r\n  },\r\n  exportAs: 'matCalendar',\r\n  encapsulation: ViewEncapsulation.None,\r\n  preserveWhitespaces: false,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class MatCalendar<D> implements AfterContentInit, OnDestroy, OnChanges {\r\n  private _intlChanges: Subscription;\r\n\r\n  /** A date representing the period (month or year) to start the calendar in. */\r\n  @Input()\r\n  get startAt(): D | null { return this._startAt; }\r\n  set startAt(value: D | null) {\r\n    this._startAt = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\r\n  }\r\n  private _startAt: D | null;\r\n\r\n  /** Whether the calendar should be started in month or year view. */\r\n  @Input() startView: 'month' | 'year' | 'multi-year' = 'month';\r\n\r\n  /** The currently selected date. */\r\n  @Input()\r\n  get selected(): D | null { return this._selected; }\r\n  set selected(value: D | null) {\r\n    this._selected = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\r\n  }\r\n  private _selected: D | null;\r\n\r\n  /** The minimum selectable date. */\r\n  @Input()\r\n  get minDate(): D | null { return this._minDate; }\r\n  set minDate(value: D | null) {\r\n    this._minDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\r\n  }\r\n  private _minDate: D | null;\r\n\r\n  /** The maximum selectable date. */\r\n  @Input()\r\n  get maxDate(): D | null { return this._maxDate; }\r\n  set maxDate(value: D | null) {\r\n    this._maxDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\r\n  }\r\n  private _maxDate: D | null;\r\n\r\n  /** A function used to filter which dates are selectable. */\r\n  @Input() dateFilter: (date: D) => boolean;\r\n\r\n  /** Emits when the currently selected date changes. */\r\n  @Output() readonly selectedChange: EventEmitter<D> = new EventEmitter<D>();\r\n\r\n  /** Emits when any date is selected. */\r\n  @Output() readonly _userSelection: EventEmitter<void> = new EventEmitter<void>();\r\n\r\n  /** Reference to the current month view component. */\r\n  @ViewChild(MatMonthView) monthView: MatMonthView<D>;\r\n\r\n  /** Reference to the current year view component. */\r\n  @ViewChild(MatYearView) yearView: MatYearView<D>;\r\n\r\n  /** Reference to the current multi-year view component. */\r\n  @ViewChild(MatMultiYearView) multiYearView: MatMultiYearView<D>;\r\n\r\n  /**\r\n   * The current active date. This determines which time period is shown and which date is\r\n   * highlighted when using keyboard navigation.\r\n   */\r\n  get _activeDate(): D { return this._clampedActiveDate; }\r\n  set _activeDate(value: D) {\r\n    this._clampedActiveDate = this._dateAdapter.clampDate(value, this.minDate, this.maxDate);\r\n  }\r\n  private _clampedActiveDate: D;\r\n\r\n  /** Whether the calendar is in month view. */\r\n  _currentView: 'month' | 'year' | 'multi-year';\r\n\r\n  /** The label for the current calendar view. */\r\n  get _periodButtonText(): string {\r\n    if (this._currentView == 'month') {\r\n      return this._dateAdapter.format(this._activeDate, this._dateFormats.display.monthYearLabel)\r\n          .toLocaleUpperCase();\r\n    }\r\n    if (this._currentView == 'year') {\r\n      return this._dateAdapter.getYearName(this._activeDate);\r\n    }\r\n    const activeYear = this._dateAdapter.getYear(this._activeDate);\r\n    const firstYearInView = this._dateAdapter.getYearName(\r\n        this._dateAdapter.createDate(activeYear - activeYear % 24, 0, 1));\r\n    const lastYearInView = this._dateAdapter.getYearName(\r\n        this._dateAdapter.createDate(activeYear + yearsPerPage - 1 - activeYear % 24, 0, 1));\r\n    return `${firstYearInView} \\u2013 ${lastYearInView}`;\r\n  }\r\n\r\n  get _periodButtonLabel(): string {\r\n    return this._currentView == 'month' ?\r\n        this._intl.switchToMultiYearViewLabel : this._intl.switchToMonthViewLabel;\r\n  }\r\n\r\n  /** The label for the the previous button. */\r\n  get _prevButtonLabel(): string {\r\n    return {\r\n      'month': this._intl.prevMonthLabel,\r\n      'year': this._intl.prevYearLabel,\r\n      'multi-year': this._intl.prevMultiYearLabel\r\n    }[this._currentView];\r\n  }\r\n\r\n  /** The label for the the next button. */\r\n  get _nextButtonLabel(): string {\r\n    return {\r\n      'month': this._intl.nextMonthLabel,\r\n      'year': this._intl.nextYearLabel,\r\n      'multi-year': this._intl.nextMultiYearLabel\r\n    }[this._currentView];\r\n  }\r\n\r\n  constructor(private _elementRef: ElementRef,\r\n              private _intl: MatDatepickerIntl,\r\n              private _ngZone: NgZone,\r\n              @Optional() private _dateAdapter: DateAdapter<D>,\r\n              @Optional() @Inject(MAT_DATE_FORMATS) private _dateFormats: MatDateFormats,\r\n              changeDetectorRef: ChangeDetectorRef,\r\n              @Optional() private _dir?: Directionality) {\r\n\r\n    if (!this._dateAdapter) {\r\n      throw createMissingDateImplError('DateAdapter');\r\n    }\r\n\r\n    if (!this._dateFormats) {\r\n      throw createMissingDateImplError('MAT_DATE_FORMATS');\r\n    }\r\n\r\n    this._intlChanges = _intl.changes.subscribe(() => changeDetectorRef.markForCheck());\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    this._activeDate = this.startAt || this._dateAdapter.today();\r\n    this._focusActiveCell();\r\n    this._currentView = this.startView;\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this._intlChanges.unsubscribe();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    const change = changes.minDate || changes.maxDate || changes.dateFilter;\r\n\r\n    if (change && !change.firstChange) {\r\n      const view = this.monthView || this.yearView || this.multiYearView;\r\n\r\n      if (view) {\r\n        view._init();\r\n      }\r\n    }\r\n  }\r\n\r\n  /** Handles date selection in the month view. */\r\n  _dateSelected(date: D): void {\r\n    if (!this._dateAdapter.sameDate(date, this.selected)) {\r\n      this.selectedChange.emit(date);\r\n    }\r\n  }\r\n\r\n  _userSelected(): void {\r\n    this._userSelection.emit();\r\n  }\r\n\r\n  /** Handles month selection in the multi-year view. */\r\n  _goToDateInView(date: D, view: 'month' | 'year' | 'multi-year'): void {\r\n    this._activeDate = date;\r\n    this._currentView = view;\r\n  }\r\n\r\n  /** Handles user clicks on the period label. */\r\n  _currentPeriodClicked(): void {\r\n    this._currentView = this._currentView == 'month' ? 'multi-year' : 'month';\r\n  }\r\n\r\n  /** Handles user clicks on the previous button. */\r\n  _previousClicked(): void {\r\n    this._activeDate = this._currentView == 'month' ?\r\n        this._dateAdapter.addCalendarMonths(this._activeDate, -1) :\r\n        this._dateAdapter.addCalendarYears(\r\n            this._activeDate, this._currentView == 'year' ? -1 : -yearsPerPage);\r\n  }\r\n\r\n  /** Handles user clicks on the next button. */\r\n  _nextClicked(): void {\r\n    this._activeDate = this._currentView == 'month' ?\r\n        this._dateAdapter.addCalendarMonths(this._activeDate, 1) :\r\n        this._dateAdapter.addCalendarYears(\r\n            this._activeDate, this._currentView == 'year' ? 1 : yearsPerPage);\r\n  }\r\n\r\n  /** Whether the previous period button is enabled. */\r\n  _previousEnabled(): boolean {\r\n    if (!this.minDate) {\r\n      return true;\r\n    }\r\n    return !this.minDate || !this._isSameView(this._activeDate, this.minDate);\r\n  }\r\n\r\n  /** Whether the next period button is enabled. */\r\n  _nextEnabled(): boolean {\r\n    return !this.maxDate || !this._isSameView(this._activeDate, this.maxDate);\r\n  }\r\n\r\n  /** Handles keydown events on the calendar body. */\r\n  _handleCalendarBodyKeydown(event: KeyboardEvent): void {\r\n    // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\r\n    // disabled ones from being selected. This may not be ideal, we should look into whether\r\n    // navigation should skip over disabled dates, and if so, how to implement that efficiently.\r\n    if (this._currentView == 'month') {\r\n      this._handleCalendarBodyKeydownInMonthView(event);\r\n    } else if (this._currentView == 'year') {\r\n      this._handleCalendarBodyKeydownInYearView(event);\r\n    } else {\r\n      this._handleCalendarBodyKeydownInMultiYearView(event);\r\n    }\r\n  }\r\n\r\n  /** Focuses the active cell after the microtask queue is empty. */\r\n  _focusActiveCell() {\r\n    this._ngZone.runOutsideAngular(() => {\r\n      this._ngZone.onStable.asObservable().pipe(take(1)).subscribe(() => {\r\n        this._elementRef.nativeElement.querySelector('.mat-calendar-body-active').focus();\r\n      });\r\n    });\r\n  }\r\n\r\n  /** Whether the two dates represent the same view in the current view mode (month or year). */\r\n  private _isSameView(date1: D, date2: D): boolean {\r\n    if (this._currentView == 'month') {\r\n      return this._dateAdapter.getYear(date1) == this._dateAdapter.getYear(date2) &&\r\n          this._dateAdapter.getMonth(date1) == this._dateAdapter.getMonth(date2);\r\n    }\r\n    if (this._currentView == 'year') {\r\n      return this._dateAdapter.getYear(date1) == this._dateAdapter.getYear(date2);\r\n    }\r\n    // Otherwise we are in 'multi-year' view.\r\n    return Math.floor(this._dateAdapter.getYear(date1) / yearsPerPage) ==\r\n        Math.floor(this._dateAdapter.getYear(date2) / yearsPerPage);\r\n  }\r\n\r\n  /** Handles keydown events on the calendar body when calendar is in month view. */\r\n  private _handleCalendarBodyKeydownInMonthView(event: KeyboardEvent): void {\r\n    const isRtl = this._isRtl();\r\n\r\n    switch (event.keyCode) {\r\n      case LEFT_ARROW:\r\n        this._activeDate = this._dateAdapter.addCalendarDays(this._activeDate, isRtl ? 1 : -1);\r\n        break;\r\n      case RIGHT_ARROW:\r\n        this._activeDate = this._dateAdapter.addCalendarDays(this._activeDate, isRtl ? -1 : 1);\r\n        break;\r\n      case UP_ARROW:\r\n        this._activeDate = this._dateAdapter.addCalendarDays(this._activeDate, -7);\r\n        break;\r\n      case DOWN_ARROW:\r\n        this._activeDate = this._dateAdapter.addCalendarDays(this._activeDate, 7);\r\n        break;\r\n      case HOME:\r\n        this._activeDate = this._dateAdapter.addCalendarDays(this._activeDate,\r\n            1 - this._dateAdapter.getDate(this._activeDate));\r\n        break;\r\n      case END:\r\n        this._activeDate = this._dateAdapter.addCalendarDays(this._activeDate,\r\n            (this._dateAdapter.getNumDaysInMonth(this._activeDate) -\r\n             this._dateAdapter.getDate(this._activeDate)));\r\n        break;\r\n      case PAGE_UP:\r\n        this._activeDate = event.altKey ?\r\n            this._dateAdapter.addCalendarYears(this._activeDate, -1) :\r\n            this._dateAdapter.addCalendarMonths(this._activeDate, -1);\r\n        break;\r\n      case PAGE_DOWN:\r\n        this._activeDate = event.altKey ?\r\n            this._dateAdapter.addCalendarYears(this._activeDate, 1) :\r\n            this._dateAdapter.addCalendarMonths(this._activeDate, 1);\r\n        break;\r\n      case ENTER:\r\n        if (!this.dateFilter || this.dateFilter(this._activeDate)) {\r\n          this._dateSelected(this._activeDate);\r\n          this._userSelected();\r\n          // Prevent unexpected default actions such as form submission.\r\n          event.preventDefault();\r\n        }\r\n        return;\r\n      default:\r\n        // Don't prevent default or focus active cell on keys that we don't explicitly handle.\r\n        return;\r\n    }\r\n\r\n    this._focusActiveCell();\r\n    // Prevent unexpected default actions such as form submission.\r\n    event.preventDefault();\r\n  }\r\n\r\n  /** Handles keydown events on the calendar body when calendar is in year view. */\r\n  private _handleCalendarBodyKeydownInYearView(event: KeyboardEvent): void {\r\n    const isRtl = this._isRtl();\r\n\r\n    switch (event.keyCode) {\r\n      case LEFT_ARROW:\r\n        this._activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, isRtl ? 1 : -1);\r\n        break;\r\n      case RIGHT_ARROW:\r\n        this._activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, isRtl ? -1 : 1);\r\n        break;\r\n      case UP_ARROW:\r\n        this._activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, -4);\r\n        break;\r\n      case DOWN_ARROW:\r\n        this._activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, 4);\r\n        break;\r\n      case HOME:\r\n        this._activeDate = this._dateAdapter.addCalendarMonths(this._activeDate,\r\n            -this._dateAdapter.getMonth(this._activeDate));\r\n        break;\r\n      case END:\r\n        this._activeDate = this._dateAdapter.addCalendarMonths(this._activeDate,\r\n            11 - this._dateAdapter.getMonth(this._activeDate));\r\n        break;\r\n      case PAGE_UP:\r\n        this._activeDate =\r\n            this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? -10 : -1);\r\n        break;\r\n      case PAGE_DOWN:\r\n        this._activeDate =\r\n            this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? 10 : 1);\r\n        break;\r\n      case ENTER:\r\n        this._goToDateInView(this._activeDate, 'month');\r\n        break;\r\n      default:\r\n        // Don't prevent default or focus active cell on keys that we don't explicitly handle.\r\n        return;\r\n    }\r\n\r\n    this._focusActiveCell();\r\n    // Prevent unexpected default actions such as form submission.\r\n    event.preventDefault();\r\n  }\r\n\r\n  /** Handles keydown events on the calendar body when calendar is in multi-year view. */\r\n  private _handleCalendarBodyKeydownInMultiYearView(event: KeyboardEvent): void {\r\n    switch (event.keyCode) {\r\n      case LEFT_ARROW:\r\n        this._activeDate = this._dateAdapter.addCalendarYears(this._activeDate, -1);\r\n        break;\r\n      case RIGHT_ARROW:\r\n        this._activeDate = this._dateAdapter.addCalendarYears(this._activeDate, 1);\r\n        break;\r\n      case UP_ARROW:\r\n        this._activeDate = this._dateAdapter.addCalendarYears(this._activeDate, -yearsPerRow);\r\n        break;\r\n      case DOWN_ARROW:\r\n        this._activeDate = this._dateAdapter.addCalendarYears(this._activeDate, yearsPerRow);\r\n        break;\r\n      case HOME:\r\n        this._activeDate = this._dateAdapter.addCalendarYears(this._activeDate,\r\n            -this._dateAdapter.getYear(this._activeDate) % yearsPerPage);\r\n        break;\r\n      case END:\r\n        this._activeDate = this._dateAdapter.addCalendarYears(this._activeDate,\r\n            yearsPerPage - this._dateAdapter.getYear(this._activeDate) % yearsPerPage - 1);\r\n        break;\r\n      case PAGE_UP:\r\n        this._activeDate =\r\n            this._dateAdapter.addCalendarYears(\r\n                this._activeDate, event.altKey ? -yearsPerPage * 10 : -yearsPerPage);\r\n        break;\r\n      case PAGE_DOWN:\r\n        this._activeDate =\r\n            this._dateAdapter.addCalendarYears(\r\n                this._activeDate, event.altKey ? yearsPerPage * 10 : yearsPerPage);\r\n        break;\r\n      case ENTER:\r\n        this._goToDateInView(this._activeDate, 'year');\r\n        break;\r\n      default:\r\n        // Don't prevent default or focus active cell on keys that we don't explicitly handle.\r\n        return;\r\n    }\r\n\r\n    this._focusActiveCell();\r\n    // Prevent unexpected default actions such as form submission.\r\n    event.preventDefault();\r\n  }\r\n\r\n  /**\r\n   * @param obj The object to check.\r\n   * @returns The given object if it is both a date instance and valid, otherwise null.\r\n   */\r\n  private _getValidDateOrNull(obj: any): D | null {\r\n    return (this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj)) ? obj : null;\r\n  }\r\n\r\n  /** Determines whether the user has the RTL layout direction. */\r\n  private _isRtl() {\r\n    return this._dir && this._dir.value === 'rtl';\r\n  }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {\r\n  AfterContentInit,\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  EventEmitter,\r\n  Inject,\r\n  Input,\r\n  Optional,\r\n  Output,\r\n  ViewEncapsulation,\r\n  ChangeDetectorRef,\r\n} from '@angular/core';\r\nimport {DateAdapter, MAT_DATE_FORMATS, MatDateFormats} from '@angular/material/core';\r\nimport {MatCalendarCell} from './calendar-body';\r\nimport {createMissingDateImplError} from './datepicker-errors';\r\n\r\n\r\n/**\r\n * An internal component used to display a single year in the datepicker.\r\n * @docs-private\r\n */\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'mat-year-view',\r\n  templateUrl: 'year-view.html',\r\n  exportAs: 'matYearView',\r\n  encapsulation: ViewEncapsulation.None,\r\n  preserveWhitespaces: false,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class MatYearView<D> implements AfterContentInit {\r\n  /** The date to display in this year view (everything other than the year is ignored). */\r\n  @Input()\r\n  get activeDate(): D { return this._activeDate; }\r\n  set activeDate(value: D) {\r\n    let oldActiveDate = this._activeDate;\r\n    this._activeDate =\r\n        this._getValidDateOrNull(this._dateAdapter.deserialize(value)) || this._dateAdapter.today();\r\n    if (this._dateAdapter.getYear(oldActiveDate) != this._dateAdapter.getYear(this._activeDate)) {\r\n      this._init();\r\n    }\r\n  }\r\n  private _activeDate: D;\r\n\r\n  /** The currently selected date. */\r\n  @Input()\r\n  get selected(): D | null { return this._selected; }\r\n  set selected(value: D | null) {\r\n    this._selected = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\r\n    this._selectedMonth = this._getMonthInCurrentYear(this._selected);\r\n  }\r\n  private _selected: D | null;\r\n\r\n  /** The minimum selectable date. */\r\n  @Input()\r\n  get minDate(): D | null { return this._minDate; }\r\n  set minDate(value: D | null) {\r\n    this._minDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\r\n  }\r\n  private _minDate: D | null;\r\n\r\n  /** The maximum selectable date. */\r\n  @Input()\r\n  get maxDate(): D | null { return this._maxDate; }\r\n  set maxDate(value: D | null) {\r\n    this._maxDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\r\n  }\r\n  private _maxDate: D | null;\r\n\r\n  /** A function used to filter which dates are selectable. */\r\n  @Input() dateFilter: (date: D) => boolean;\r\n\r\n  /** Emits when a new month is selected. */\r\n  @Output() readonly selectedChange: EventEmitter<D> = new EventEmitter<D>();\r\n\r\n  /** Grid of calendar cells representing the months of the year. */\r\n  _months: MatCalendarCell[][];\r\n\r\n  /** The label for this year (e.g. \"2017\"). */\r\n  _yearLabel: string;\r\n\r\n  /** The month in this year that today falls on. Null if today is in a different year. */\r\n  _todayMonth: number | null;\r\n\r\n  /**\r\n   * The month in this year that the selected Date falls on.\r\n   * Null if the selected Date is in a different year.\r\n   */\r\n  _selectedMonth: number | null;\r\n\r\n  constructor(@Optional() public _dateAdapter: DateAdapter<D>,\r\n              @Optional() @Inject(MAT_DATE_FORMATS) private _dateFormats: MatDateFormats,\r\n              private _changeDetectorRef: ChangeDetectorRef) {\r\n    if (!this._dateAdapter) {\r\n      throw createMissingDateImplError('DateAdapter');\r\n    }\r\n    if (!this._dateFormats) {\r\n      throw createMissingDateImplError('MAT_DATE_FORMATS');\r\n    }\r\n\r\n    this._activeDate = this._dateAdapter.today();\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    this._init();\r\n  }\r\n\r\n  /** Handles when a new month is selected. */\r\n  _monthSelected(month: number) {\r\n    let daysInMonth = this._dateAdapter.getNumDaysInMonth(\r\n        this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), month, 1));\r\n    this.selectedChange.emit(this._dateAdapter.createDate(\r\n        this._dateAdapter.getYear(this.activeDate), month,\r\n        Math.min(this._dateAdapter.getDate(this.activeDate), daysInMonth)));\r\n  }\r\n\r\n  /** Initializes this year view. */\r\n  _init() {\r\n    this._selectedMonth = this._getMonthInCurrentYear(this.selected);\r\n    this._todayMonth = this._getMonthInCurrentYear(this._dateAdapter.today());\r\n    this._yearLabel = this._dateAdapter.getYearName(this.activeDate);\r\n\r\n    let monthNames = this._dateAdapter.getMonthNames('short');\r\n    // First row of months only contains 5 elements so we can fit the year label on the same row.\r\n    this._months = [[0, 1, 2, 3], [4, 5, 6, 7], [8, 9, 10, 11]].map(row => row.map(\r\n        month => this._createCellForMonth(month, monthNames[month])));\r\n    this._changeDetectorRef.markForCheck();\r\n  }\r\n\r\n  /**\r\n   * Gets the month in this year that the given Date falls on.\r\n   * Returns null if the given Date is in another year.\r\n   */\r\n  private _getMonthInCurrentYear(date: D | null) {\r\n    return date && this._dateAdapter.getYear(date) == this._dateAdapter.getYear(this.activeDate) ?\r\n        this._dateAdapter.getMonth(date) : null;\r\n  }\r\n\r\n  /** Creates an MatCalendarCell for the given month. */\r\n  private _createCellForMonth(month: number, monthName: string) {\r\n    let ariaLabel = this._dateAdapter.format(\r\n        this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), month, 1),\r\n        this._dateFormats.display.monthYearA11yLabel);\r\n    return new MatCalendarCell(\r\n        month, monthName.toLocaleUpperCase(), ariaLabel, this._shouldEnableMonth(month));\r\n  }\r\n\r\n  /** Whether the given month is enabled. */\r\n  private _shouldEnableMonth(month: number) {\r\n\r\n    const activeYear = this._dateAdapter.getYear(this.activeDate);\r\n\r\n    if (month === undefined || month === null ||\r\n        this._isYearAndMonthAfterMaxDate(activeYear, month) ||\r\n        this._isYearAndMonthBeforeMinDate(activeYear, month)) {\r\n      return false;\r\n    }\r\n\r\n    if (!this.dateFilter) {\r\n      return true;\r\n    }\r\n\r\n    const firstOfMonth = this._dateAdapter.createDate(activeYear, month, 1);\r\n\r\n    // If any date in the month is enabled count the month as enabled.\r\n    for (let date = firstOfMonth; this._dateAdapter.getMonth(date) == month;\r\n         date = this._dateAdapter.addCalendarDays(date, 1)) {\r\n      if (this.dateFilter(date)) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Tests whether the combination month/year is after this.maxDate, considering\r\n   * just the month and year of this.maxDate\r\n   */\r\n  private _isYearAndMonthAfterMaxDate(year: number, month: number) {\r\n    if (this.maxDate) {\r\n      const maxYear = this._dateAdapter.getYear(this.maxDate);\r\n      const maxMonth = this._dateAdapter.getMonth(this.maxDate);\r\n\r\n      return year > maxYear || (year === maxYear && month > maxMonth);\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Tests whether the combination month/year is before this.minDate, considering\r\n   * just the month and year of this.minDate\r\n   */\r\n  private _isYearAndMonthBeforeMinDate(year: number, month: number) {\r\n    if (this.minDate) {\r\n      const minYear = this._dateAdapter.getYear(this.minDate);\r\n      const minMonth = this._dateAdapter.getMonth(this.minDate);\r\n\r\n      return year < minYear || (year === minYear && month < minMonth);\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * @param obj The object to check.\r\n   * @returns The given object if it is both a date instance and valid, otherwise null.\r\n   */\r\n  private _getValidDateOrNull(obj: any): D | null {\r\n    return (this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj)) ? obj : null;\r\n  }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {\r\n  AfterContentInit,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  Optional,\r\n  Output,\r\n  ViewEncapsulation\r\n} from '@angular/core';\r\nimport {DateAdapter} from '@angular/material/core';\r\nimport {MatCalendarCell} from './calendar-body';\r\nimport {createMissingDateImplError} from './datepicker-errors';\r\n\r\n\r\nexport const yearsPerPage = 24;\r\n\r\nexport const yearsPerRow = 4;\r\n\r\n\r\n/**\r\n * An internal component used to display a year selector in the datepicker.\r\n * @docs-private\r\n */\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'mat-multi-year-view',\r\n  templateUrl: 'multi-year-view.html',\r\n  exportAs: 'matMultiYearView',\r\n  encapsulation: ViewEncapsulation.None,\r\n  preserveWhitespaces: false,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class MatMultiYearView<D> implements AfterContentInit {\r\n  /** The date to display in this multi-year view (everything other than the year is ignored). */\r\n  @Input()\r\n  get activeDate(): D { return this._activeDate; }\r\n  set activeDate(value: D) {\r\n    let oldActiveDate = this._activeDate;\r\n    this._activeDate =\r\n        this._getValidDateOrNull(this._dateAdapter.deserialize(value)) || this._dateAdapter.today();\r\n    if (Math.floor(this._dateAdapter.getYear(oldActiveDate) / yearsPerPage) !=\r\n        Math.floor(this._dateAdapter.getYear(this._activeDate) / yearsPerPage)) {\r\n      this._init();\r\n    }\r\n  }\r\n  private _activeDate: D;\r\n\r\n  /** The currently selected date. */\r\n  @Input()\r\n  get selected(): D | null { return this._selected; }\r\n  set selected(value: D | null) {\r\n    this._selected = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\r\n    this._selectedYear = this._selected && this._dateAdapter.getYear(this._selected);\r\n  }\r\n  private _selected: D | null;\r\n\r\n  /** The minimum selectable date. */\r\n  @Input()\r\n  get minDate(): D | null { return this._minDate; }\r\n  set minDate(value: D | null) {\r\n    this._minDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\r\n  }\r\n  private _minDate: D | null;\r\n\r\n  /** The maximum selectable date. */\r\n  @Input()\r\n  get maxDate(): D | null { return this._maxDate; }\r\n  set maxDate(value: D | null) {\r\n    this._maxDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\r\n  }\r\n  private _maxDate: D | null;\r\n\r\n  /** A function used to filter which dates are selectable. */\r\n  @Input() dateFilter: (date: D) => boolean;\r\n\r\n  /** Emits when a new month is selected. */\r\n  @Output() readonly selectedChange: EventEmitter<D> = new EventEmitter<D>();\r\n\r\n  /** Grid of calendar cells representing the currently displayed years. */\r\n  _years: MatCalendarCell[][];\r\n\r\n  /** The year that today falls on. */\r\n  _todayYear: number;\r\n\r\n  /** The year of the selected date. Null if the selected date is null. */\r\n  _selectedYear: number | null;\r\n\r\n  constructor(@Optional() public _dateAdapter: DateAdapter<D>,\r\n              private _changeDetectorRef: ChangeDetectorRef) {\r\n    if (!this._dateAdapter) {\r\n      throw createMissingDateImplError('DateAdapter');\r\n    }\r\n\r\n    this._activeDate = this._dateAdapter.today();\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    this._init();\r\n  }\r\n\r\n  /** Initializes this multi-year view. */\r\n  _init() {\r\n    this._todayYear = this._dateAdapter.getYear(this._dateAdapter.today());\r\n    let activeYear = this._dateAdapter.getYear(this._activeDate);\r\n    let activeOffset = activeYear % yearsPerPage;\r\n    this._years = [];\r\n    for (let i = 0, row: number[] = []; i < yearsPerPage; i++) {\r\n      row.push(activeYear - activeOffset + i);\r\n      if (row.length == yearsPerRow) {\r\n        this._years.push(row.map(year => this._createCellForYear(year)));\r\n        row = [];\r\n      }\r\n    }\r\n    this._changeDetectorRef.markForCheck();\r\n  }\r\n\r\n  /** Handles when a new year is selected. */\r\n  _yearSelected(year: number) {\r\n    let month = this._dateAdapter.getMonth(this.activeDate);\r\n    let daysInMonth =\r\n        this._dateAdapter.getNumDaysInMonth(this._dateAdapter.createDate(year, month, 1));\r\n    this.selectedChange.emit(this._dateAdapter.createDate(year, month,\r\n        Math.min(this._dateAdapter.getDate(this.activeDate), daysInMonth)));\r\n  }\r\n\r\n  _getActiveCell(): number {\r\n    return this._dateAdapter.getYear(this.activeDate) % yearsPerPage;\r\n  }\r\n\r\n  /** Creates an MatCalendarCell for the given year. */\r\n  private _createCellForYear(year: number) {\r\n    let yearName = this._dateAdapter.getYearName(this._dateAdapter.createDate(year, 0, 1));\r\n    return new MatCalendarCell(year, yearName, yearName, this._shouldEnableYear(year));\r\n  }\r\n\r\n  /** Whether the given year is enabled. */\r\n  private _shouldEnableYear(year: number) {\r\n    // disable if the year is greater than maxDate lower than minDate\r\n    if (year === undefined || year === null ||\r\n        (this.maxDate && year > this._dateAdapter.getYear(this.maxDate)) ||\r\n        (this.minDate && year < this._dateAdapter.getYear(this.minDate))) {\r\n      return false;\r\n    }\r\n\r\n    // enable if it reaches here and there's no filter defined\r\n    if (!this.dateFilter) {\r\n      return true;\r\n    }\r\n\r\n    const firstOfYear = this._dateAdapter.createDate(year, 0, 1);\r\n\r\n    // If any date in the year is enabled count the year as enabled.\r\n    for (let date = firstOfYear; this._dateAdapter.getYear(date) == year;\r\n      date = this._dateAdapter.addCalendarDays(date, 1)) {\r\n      if (this.dateFilter(date)) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * @param obj The object to check.\r\n   * @returns The given object if it is both a date instance and valid, otherwise null.\r\n   */\r\n  private _getValidDateOrNull(obj: any): D | null {\r\n    return (this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj)) ? obj : null;\r\n  }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {\r\n  AfterContentInit,\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  EventEmitter,\r\n  Inject,\r\n  Input,\r\n  Optional,\r\n  Output,\r\n  ViewEncapsulation,\r\n  ChangeDetectorRef,\r\n} from '@angular/core';\r\nimport {DateAdapter, MAT_DATE_FORMATS, MatDateFormats} from '@angular/material/core';\r\nimport {MatCalendarCell} from './calendar-body';\r\nimport {createMissingDateImplError} from './datepicker-errors';\r\n\r\n\r\nconst DAYS_PER_WEEK = 7;\r\n\r\n\r\n/**\r\n * An internal component used to display a single month in the datepicker.\r\n * @docs-private\r\n */\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'mat-month-view',\r\n  templateUrl: 'month-view.html',\r\n  exportAs: 'matMonthView',\r\n  encapsulation: ViewEncapsulation.None,\r\n  preserveWhitespaces: false,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class MatMonthView<D> implements AfterContentInit {\r\n  /**\r\n   * The date to display in this month view (everything other than the month and year is ignored).\r\n   */\r\n  @Input()\r\n  get activeDate(): D { return this._activeDate; }\r\n  set activeDate(value: D) {\r\n    let oldActiveDate = this._activeDate;\r\n    this._activeDate =\r\n        this._getValidDateOrNull(this._dateAdapter.deserialize(value)) || this._dateAdapter.today();\r\n    if (!this._hasSameMonthAndYear(oldActiveDate, this._activeDate)) {\r\n      this._init();\r\n    }\r\n  }\r\n  private _activeDate: D;\r\n\r\n  /** The currently selected date. */\r\n  @Input()\r\n  get selected(): D | null { return this._selected; }\r\n  set selected(value: D | null) {\r\n    this._selected = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\r\n    this._selectedDate = this._getDateInCurrentMonth(this._selected);\r\n  }\r\n  private _selected: D | null;\r\n\r\n  /** The minimum selectable date. */\r\n  @Input()\r\n  get minDate(): D | null { return this._minDate; }\r\n  set minDate(value: D | null) {\r\n    this._minDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\r\n  }\r\n  private _minDate: D | null;\r\n\r\n  /** The maximum selectable date. */\r\n  @Input()\r\n  get maxDate(): D | null { return this._maxDate; }\r\n  set maxDate(value: D | null) {\r\n    this._maxDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\r\n  }\r\n  private _maxDate: D | null;\r\n\r\n  /** A function used to filter which dates are selectable. */\r\n  @Input() dateFilter: (date: D) => boolean;\r\n\r\n  /** Emits when a new date is selected. */\r\n  @Output() readonly selectedChange: EventEmitter<D | null> = new EventEmitter<D | null>();\r\n\r\n  /** Emits when any date is selected. */\r\n  @Output() readonly _userSelection: EventEmitter<void> = new EventEmitter<void>();\r\n\r\n  /** The label for this month (e.g. \"January 2017\"). */\r\n  _monthLabel: string;\r\n\r\n  /** Grid of calendar cells representing the dates of the month. */\r\n  _weeks: MatCalendarCell[][];\r\n\r\n  /** The number of blank cells in the first row before the 1st of the month. */\r\n  _firstWeekOffset: number;\r\n\r\n  /**\r\n   * The date of the month that the currently selected Date falls on.\r\n   * Null if the currently selected Date is in another month.\r\n   */\r\n  _selectedDate: number | null;\r\n\r\n  /** The date of the month that today falls on. Null if today is in another month. */\r\n  _todayDate: number | null;\r\n\r\n  /** The names of the weekdays. */\r\n  _weekdays: {long: string, narrow: string}[];\r\n\r\n  constructor(@Optional() public _dateAdapter: DateAdapter<D>,\r\n              @Optional() @Inject(MAT_DATE_FORMATS) private _dateFormats: MatDateFormats,\r\n              private _changeDetectorRef: ChangeDetectorRef) {\r\n    if (!this._dateAdapter) {\r\n      throw createMissingDateImplError('DateAdapter');\r\n    }\r\n    if (!this._dateFormats) {\r\n      throw createMissingDateImplError('MAT_DATE_FORMATS');\r\n    }\r\n\r\n    const firstDayOfWeek = this._dateAdapter.getFirstDayOfWeek();\r\n    const narrowWeekdays = this._dateAdapter.getDayOfWeekNames('narrow');\r\n    const longWeekdays = this._dateAdapter.getDayOfWeekNames('long');\r\n\r\n    // Rotate the labels for days of the week based on the configured first day of the week.\r\n    let weekdays = longWeekdays.map((long, i) => {\r\n      return {long, narrow: narrowWeekdays[i]};\r\n    });\r\n    this._weekdays = weekdays.slice(firstDayOfWeek).concat(weekdays.slice(0, firstDayOfWeek));\r\n\r\n    this._activeDate = this._dateAdapter.today();\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    this._init();\r\n  }\r\n\r\n  /** Handles when a new date is selected. */\r\n  _dateSelected(date: number) {\r\n    if (this._selectedDate != date) {\r\n      const selectedYear = this._dateAdapter.getYear(this.activeDate);\r\n      const selectedMonth = this._dateAdapter.getMonth(this.activeDate);\r\n      const selectedDate = this._dateAdapter.createDate(selectedYear, selectedMonth, date);\r\n\r\n      this.selectedChange.emit(selectedDate);\r\n    }\r\n\r\n    this._userSelection.emit();\r\n  }\r\n\r\n  /** Initializes this month view. */\r\n  _init() {\r\n    this._selectedDate = this._getDateInCurrentMonth(this.selected);\r\n    this._todayDate = this._getDateInCurrentMonth(this._dateAdapter.today());\r\n    this._monthLabel =\r\n        this._dateAdapter.getMonthNames('short')[this._dateAdapter.getMonth(this.activeDate)]\r\n            .toLocaleUpperCase();\r\n\r\n    let firstOfMonth = this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate),\r\n        this._dateAdapter.getMonth(this.activeDate), 1);\r\n    this._firstWeekOffset =\r\n        (DAYS_PER_WEEK + this._dateAdapter.getDayOfWeek(firstOfMonth) -\r\n         this._dateAdapter.getFirstDayOfWeek()) % DAYS_PER_WEEK;\r\n\r\n    this._createWeekCells();\r\n    this._changeDetectorRef.markForCheck();\r\n  }\r\n\r\n  /** Creates MatCalendarCells for the dates in this month. */\r\n  private _createWeekCells() {\r\n    const daysInMonth = this._dateAdapter.getNumDaysInMonth(this.activeDate);\r\n    const dateNames = this._dateAdapter.getDateNames();\r\n    this._weeks = [[]];\r\n    for (let i = 0, cell = this._firstWeekOffset; i < daysInMonth; i++, cell++) {\r\n      if (cell == DAYS_PER_WEEK) {\r\n        this._weeks.push([]);\r\n        cell = 0;\r\n      }\r\n      const date = this._dateAdapter.createDate(\r\n            this._dateAdapter.getYear(this.activeDate),\r\n            this._dateAdapter.getMonth(this.activeDate), i + 1);\r\n      const enabled = this._shouldEnableDate(date);\r\n      const ariaLabel = this._dateAdapter.format(date, this._dateFormats.display.dateA11yLabel);\r\n      this._weeks[this._weeks.length - 1]\r\n          .push(new MatCalendarCell(i + 1, dateNames[i], ariaLabel, enabled));\r\n    }\r\n  }\r\n\r\n  /** Date filter for the month */\r\n  private _shouldEnableDate(date: D): boolean {\r\n    return !!date &&\r\n        (!this.dateFilter || this.dateFilter(date)) &&\r\n        (!this.minDate || this._dateAdapter.compareDate(date, this.minDate) >= 0) &&\r\n        (!this.maxDate || this._dateAdapter.compareDate(date, this.maxDate) <= 0);\r\n  }\r\n\r\n  /**\r\n   * Gets the date in this month that the given Date falls on.\r\n   * Returns null if the given Date is in another month.\r\n   */\r\n  private _getDateInCurrentMonth(date: D | null): number | null {\r\n    return date && this._hasSameMonthAndYear(date, this.activeDate) ?\r\n        this._dateAdapter.getDate(date) : null;\r\n  }\r\n\r\n  /** Checks whether the 2 dates are non-null and fall within the same month of the same year. */\r\n  private _hasSameMonthAndYear(d1: D | null, d2: D | null): boolean {\r\n    return !!(d1 && d2 && this._dateAdapter.getMonth(d1) == this._dateAdapter.getMonth(d2) &&\r\n              this._dateAdapter.getYear(d1) == this._dateAdapter.getYear(d2));\r\n  }\r\n\r\n  /**\r\n   * @param obj The object to check.\r\n   * @returns The given object if it is both a date instance and valid, otherwise null.\r\n   */\r\n  private _getValidDateOrNull(obj: any): D | null {\r\n    return (this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj)) ? obj : null;\r\n  }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  Output,\r\n  ViewEncapsulation\r\n} from '@angular/core';\r\n\r\n\r\n/**\r\n * An internal class that represents the data corresponding to a single calendar cell.\r\n * @docs-private\r\n */\r\nexport class MatCalendarCell {\r\n  constructor(public value: number,\r\n              public displayValue: string,\r\n              public ariaLabel: string,\r\n              public enabled: boolean) {}\r\n}\r\n\r\n\r\n/**\r\n * An internal component used to display calendar data in a table.\r\n * @docs-private\r\n */\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: '[mat-calendar-body]',\r\n  templateUrl: 'calendar-body.html',\r\n  styleUrls: ['calendar-body.css'],\r\n  host: {\r\n    'class': 'mat-calendar-body',\r\n    'role': 'grid',\r\n    'attr.aria-readonly': 'true'\r\n  },\r\n  exportAs: 'matCalendarBody',\r\n  encapsulation: ViewEncapsulation.None,\r\n  preserveWhitespaces: false,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class MatCalendarBody {\r\n  /** The label for the table. (e.g. \"Jan 2017\"). */\r\n  @Input() label: string;\r\n\r\n  /** The cells to display in the table. */\r\n  @Input() rows: MatCalendarCell[][];\r\n\r\n  /** The value in the table that corresponds to today. */\r\n  @Input() todayValue: number;\r\n\r\n  /** The value in the table that is currently selected. */\r\n  @Input() selectedValue: number;\r\n\r\n  /** The minimum number of free cells needed to fit the label in the first row. */\r\n  @Input() labelMinRequiredCells: number;\r\n\r\n  /** The number of columns in the table. */\r\n  @Input() numCols = 7;\r\n\r\n  /** Whether to allow selection of disabled cells. */\r\n  @Input() allowDisabledSelection = false;\r\n\r\n  /** The cell number of the active cell in the table. */\r\n  @Input() activeCell = 0;\r\n\r\n  /**\r\n   * The aspect ratio (width / height) to use for the cells in the table. This aspect ratio will be\r\n   * maintained even as the table resizes.\r\n   */\r\n  @Input() cellAspectRatio = 1;\r\n\r\n  /** Emits when a new value is selected. */\r\n  @Output() readonly selectedValueChange: EventEmitter<number> = new EventEmitter<number>();\r\n\r\n  _cellClicked(cell: MatCalendarCell): void {\r\n    if (!this.allowDisabledSelection && !cell.enabled) {\r\n      return;\r\n    }\r\n    this.selectedValueChange.emit(cell.value);\r\n  }\r\n\r\n  /** The number of blank cells to put at the beginning for the first row. */\r\n  get _firstRowOffset(): number {\r\n    return this.rows && this.rows.length && this.rows[0].length ?\r\n        this.numCols - this.rows[0].length : 0;\r\n  }\r\n\r\n  _isActiveCell(rowIndex: number, colIndex: number): boolean {\r\n    let cellNumber = rowIndex * this.numCols + colIndex;\r\n\r\n    // Account for the fact that the first row may not have as many cells.\r\n    if (rowIndex) {\r\n      cellNumber -= this._firstRowOffset;\r\n    }\r\n\r\n    return cellNumber == this.activeCell;\r\n  }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {Injectable} from '@angular/core';\r\nimport {Subject} from 'rxjs/Subject';\r\n\r\n\r\n/** Datepicker data that requires internationalization. */\r\n@Injectable()\r\nexport class MatDatepickerIntl {\r\n  /**\r\n   * Stream that emits whenever the labels here are changed. Use this to notify\r\n   * components if the labels have changed after initialization.\r\n   */\r\n  readonly changes: Subject<void> = new Subject<void>();\r\n\r\n  /** A label for the calendar popup (used by screen readers). */\r\n  calendarLabel: string = 'Calendar';\r\n\r\n  /** A label for the button used to open the calendar popup (used by screen readers). */\r\n  openCalendarLabel: string = 'Open calendar';\r\n\r\n  /** A label for the previous month button (used by screen readers). */\r\n  prevMonthLabel: string = 'Previous month';\r\n\r\n  /** A label for the next month button (used by screen readers). */\r\n  nextMonthLabel: string = 'Next month';\r\n\r\n  /** A label for the previous year button (used by screen readers). */\r\n  prevYearLabel: string = 'Previous year';\r\n\r\n  /** A label for the next year button (used by screen readers). */\r\n  nextYearLabel: string = 'Next year';\r\n\r\n  /** A label for the previous multi-year button (used by screen readers). */\r\n  prevMultiYearLabel: string = 'Previous 20 years';\r\n\r\n  /** A label for the next multi-year button (used by screen readers). */\r\n  nextMultiYearLabel: string = 'Next 20 years';\r\n\r\n  /** A label for the 'switch to month view' button (used by screen readers). */\r\n  switchToMonthViewLabel: string = 'Choose date';\r\n\r\n  /** A label for the 'switch to year view' button (used by screen readers). */\r\n  switchToMultiYearViewLabel: string = 'Choose month and year';\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\n/** @docs-private */\r\nexport function createMissingDateImplError(provider: string) {\r\n  return Error(\r\n      `MatDatepicker: No provider found for ${provider}. You must import one of the following ` +\r\n      `modules at your application root: MatNativeDateModule, MatMomentDateModule, or provide a ` +\r\n      `custom implementation.`);\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {PlatformModule} from '@angular/cdk/platform';\r\nimport {CommonModule} from '@angular/common';\r\nimport {NgModule} from '@angular/core';\r\nimport {MatFormFieldModule} from '@angular/material/form-field';\r\nimport {MatTextareaAutosize} from './autosize';\r\nimport {MatInput} from './input';\r\nimport {ErrorStateMatcher} from '@angular/material/core';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    MatInput,\r\n    MatTextareaAutosize,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    MatFormFieldModule,\r\n    PlatformModule,\r\n  ],\r\n  exports: [\r\n    // We re-export the `MatFormFieldModule` since `MatInput` will almost always\r\n    // be used together with `MatFormField`.\r\n    MatFormFieldModule,\r\n    MatInput,\r\n    MatTextareaAutosize,\r\n  ],\r\n  providers: [ErrorStateMatcher],\r\n})\r\nexport class MatInputModule {}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\r\nimport {getSupportedInputTypes, Platform} from '@angular/cdk/platform';\r\nimport {\r\n  Directive,\r\n  DoCheck,\r\n  ElementRef,\r\n  Inject,\r\n  Input,\r\n  OnChanges,\r\n  OnDestroy,\r\n  Optional,\r\n  Self,\r\n} from '@angular/core';\r\nimport {FormGroupDirective, NgControl, NgForm} from '@angular/forms';\r\nimport {ErrorStateMatcher, mixinErrorState, CanUpdateErrorState} from '@angular/material/core';\r\nimport {MatFormFieldControl} from '@angular/material/form-field';\r\nimport {Subject} from 'rxjs/Subject';\r\nimport {getMatInputUnsupportedTypeError} from './input-errors';\r\nimport {MAT_INPUT_VALUE_ACCESSOR} from './input-value-accessor';\r\n\r\n\r\n// Invalid input type. Using one of these will throw an MatInputUnsupportedTypeError.\r\nconst MAT_INPUT_INVALID_TYPES = [\r\n  'button',\r\n  'checkbox',\r\n  'file',\r\n  'hidden',\r\n  'image',\r\n  'radio',\r\n  'range',\r\n  'reset',\r\n  'submit'\r\n];\r\n\r\nlet nextUniqueId = 0;\r\n\r\n// Boilerplate for applying mixins to MatInput.\r\n/** @docs-private */\r\nexport class MatInputBase {\r\n  constructor(public _defaultErrorStateMatcher: ErrorStateMatcher,\r\n              public _parentForm: NgForm,\r\n              public _parentFormGroup: FormGroupDirective,\r\n              /** @docs-private */\r\n              public ngControl: NgControl) {}\r\n}\r\nexport const _MatInputMixinBase = mixinErrorState(MatInputBase);\r\n\r\n/** Directive that allows a native input to work inside a `MatFormField`. */\r\n@Directive({\r\n  selector: `input[matInput], textarea[matInput]`,\r\n  exportAs: 'matInput',\r\n  host: {\r\n    'class': 'mat-input-element mat-form-field-autofill-control',\r\n    '[class.mat-input-server]': '_isServer',\r\n    // Native input properties that are overwritten by Angular inputs need to be synced with\r\n    // the native input element. Otherwise property bindings for those don't work.\r\n    '[attr.id]': 'id',\r\n    '[placeholder]': 'placeholder',\r\n    '[disabled]': 'disabled',\r\n    '[required]': 'required',\r\n    '[readonly]': 'readonly',\r\n    '[attr.aria-describedby]': '_ariaDescribedby || null',\r\n    '[attr.aria-invalid]': 'errorState',\r\n    '[attr.aria-required]': 'required.toString()',\r\n    '(blur)': '_focusChanged(false)',\r\n    '(focus)': '_focusChanged(true)',\r\n    '(input)': '_onInput()',\r\n  },\r\n  providers: [{provide: MatFormFieldControl, useExisting: MatInput}],\r\n})\r\nexport class MatInput extends _MatInputMixinBase implements MatFormFieldControl<any>, OnChanges,\r\n    OnDestroy, DoCheck, CanUpdateErrorState {\r\n  protected _uid = `mat-input-${nextUniqueId++}`;\r\n  protected _previousNativeValue: any;\r\n  private _inputValueAccessor: {value: any};\r\n  /** The aria-describedby attribute on the input for improved a11y. */\r\n  _ariaDescribedby: string;\r\n\r\n  /** Whether the component is being rendered on the server. */\r\n  _isServer = false;\r\n\r\n  /**\r\n   * Implemented as part of MatFormFieldControl.\r\n   * @docs-private\r\n   */\r\n  focused: boolean = false;\r\n\r\n  /**\r\n   * Implemented as part of MatFormFieldControl.\r\n   * @docs-private\r\n   */\r\n  readonly stateChanges: Subject<void> = new Subject<void>();\r\n\r\n  /**\r\n   * Implemented as part of MatFormFieldControl.\r\n   * @docs-private\r\n   */\r\n  controlType: string = 'mat-input';\r\n\r\n  /**\r\n   * Implemented as part of MatFormFieldControl.\r\n   * @docs-private\r\n   */\r\n  @Input()\r\n  get disabled(): boolean {\r\n    if (this.ngControl && this.ngControl.disabled !== null) {\r\n      return this.ngControl.disabled;\r\n    }\r\n    return this._disabled;\r\n  }\r\n  set disabled(value: boolean) {\r\n    this._disabled = coerceBooleanProperty(value);\r\n\r\n    // Browsers may not fire the blur event if the input is disabled too quickly.\r\n    // Reset from here to ensure that the element doesn't become stuck.\r\n    if (this.focused) {\r\n      this.focused = false;\r\n      this.stateChanges.next();\r\n    }\r\n  }\r\n  protected _disabled = false;\r\n\r\n  /**\r\n   * Implemented as part of MatFormFieldControl.\r\n   * @docs-private\r\n   */\r\n  @Input()\r\n  get id(): string { return this._id; }\r\n  set id(value: string) { this._id = value || this._uid; }\r\n  protected _id: string;\r\n\r\n  /**\r\n   * Implemented as part of MatFormFieldControl.\r\n   * @docs-private\r\n   */\r\n  @Input() placeholder: string = '';\r\n\r\n  /**\r\n   * Implemented as part of MatFormFieldControl.\r\n   * @docs-private\r\n   */\r\n  @Input()\r\n  get required(): boolean { return this._required; }\r\n  set required(value: boolean) { this._required = coerceBooleanProperty(value); }\r\n  protected _required = false;\r\n\r\n  /** Input type of the element. */\r\n  @Input()\r\n  get type(): string { return this._type; }\r\n  set type(value: string) {\r\n    this._type = value || 'text';\r\n    this._validateType();\r\n\r\n    // When using Angular inputs, developers are no longer able to set the properties on the native\r\n    // input element. To ensure that bindings for `type` work, we need to sync the setter\r\n    // with the native property. Textarea elements don't support the type property or attribute.\r\n    if (!this._isTextarea() && getSupportedInputTypes().has(this._type)) {\r\n      this._elementRef.nativeElement.type = this._type;\r\n    }\r\n  }\r\n  protected _type = 'text';\r\n\r\n  /** An object used to control when error messages are shown. */\r\n  @Input() errorStateMatcher: ErrorStateMatcher;\r\n\r\n  /**\r\n   * Implemented as part of MatFormFieldControl.\r\n   * @docs-private\r\n   */\r\n  @Input()\r\n  get value(): string { return this._inputValueAccessor.value; }\r\n  set value(value: string) {\r\n    if (value !== this.value) {\r\n      this._inputValueAccessor.value = value;\r\n      this.stateChanges.next();\r\n    }\r\n  }\r\n\r\n  /** Whether the element is readonly. */\r\n  @Input()\r\n  get readonly(): boolean { return this._readonly; }\r\n  set readonly(value: boolean) { this._readonly = coerceBooleanProperty(value); }\r\n  private _readonly = false;\r\n\r\n  protected _neverEmptyInputTypes = [\r\n    'date',\r\n    'datetime',\r\n    'datetime-local',\r\n    'month',\r\n    'time',\r\n    'week'\r\n  ].filter(t => getSupportedInputTypes().has(t));\r\n\r\n  constructor(protected _elementRef: ElementRef,\r\n              protected _platform: Platform,\r\n              /** @docs-private */\r\n              @Optional() @Self() public ngControl: NgControl,\r\n              @Optional() _parentForm: NgForm,\r\n              @Optional() _parentFormGroup: FormGroupDirective,\r\n              _defaultErrorStateMatcher: ErrorStateMatcher,\r\n              @Optional() @Self() @Inject(MAT_INPUT_VALUE_ACCESSOR) inputValueAccessor: any) {\r\n    super(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\r\n    // If no input value accessor was explicitly specified, use the element as the input value\r\n    // accessor.\r\n    this._inputValueAccessor = inputValueAccessor || this._elementRef.nativeElement;\r\n\r\n    this._previousNativeValue = this.value;\r\n\r\n    // Force setter to be called in case id was not specified.\r\n    this.id = this.id;\r\n\r\n    // On some versions of iOS the caret gets stuck in the wrong place when holding down the delete\r\n    // key. In order to get around this we need to \"jiggle\" the caret loose. Since this bug only\r\n    // exists on iOS, we only bother to install the listener on iOS.\r\n    if (_platform.IOS) {\r\n      _elementRef.nativeElement.addEventListener('keyup', (event: Event) => {\r\n        let el = event.target as HTMLInputElement;\r\n        if (!el.value && !el.selectionStart && !el.selectionEnd) {\r\n          // Note: Just setting `0, 0` doesn't fix the issue. Setting `1, 1` fixes it for the first\r\n          // time that you type text and then hold delete. Toggling to `1, 1` and then back to\r\n          // `0, 0` seems to completely fix it.\r\n          el.setSelectionRange(1, 1);\r\n          el.setSelectionRange(0, 0);\r\n        }\r\n      });\r\n    }\r\n\r\n    this._isServer = !this._platform.isBrowser;\r\n  }\r\n\r\n  ngOnChanges() {\r\n    this.stateChanges.next();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.stateChanges.complete();\r\n  }\r\n\r\n  ngDoCheck() {\r\n    if (this.ngControl) {\r\n      // We need to re-evaluate this on every change detection cycle, because there are some\r\n      // error triggers that we can't subscribe to (e.g. parent form submissions). This means\r\n      // that whatever logic is in here has to be super lean or we risk destroying the performance.\r\n      this.updateErrorState();\r\n    }\r\n\r\n    // We need to dirty-check the native element's value, because there are some cases where\r\n    // we won't be notified when it changes (e.g. the consumer isn't using forms or they're\r\n    // updating the value using `emitEvent: false`).\r\n    this._dirtyCheckNativeValue();\r\n  }\r\n\r\n  /** Focuses the input. */\r\n  focus(): void { this._elementRef.nativeElement.focus(); }\r\n\r\n  /** Callback for the cases where the focused state of the input changes. */\r\n  _focusChanged(isFocused: boolean) {\r\n    if (isFocused !== this.focused && !this.readonly) {\r\n      this.focused = isFocused;\r\n      this.stateChanges.next();\r\n    }\r\n  }\r\n\r\n  _onInput() {\r\n    // This is a noop function and is used to let Angular know whenever the value changes.\r\n    // Angular will run a new change detection each time the `input` event has been dispatched.\r\n    // It's necessary that Angular recognizes the value change, because when floatingLabel\r\n    // is set to false and Angular forms aren't used, the placeholder won't recognize the\r\n    // value changes and will not disappear.\r\n    // Listening to the input event wouldn't be necessary when the input is using the\r\n    // FormsModule or ReactiveFormsModule, because Angular forms also listens to input events.\r\n  }\r\n\r\n  /** Does some manual dirty checking on the native input `value` property. */\r\n  protected _dirtyCheckNativeValue() {\r\n    const newValue = this.value;\r\n\r\n    if (this._previousNativeValue !== newValue) {\r\n      this._previousNativeValue = newValue;\r\n      this.stateChanges.next();\r\n    }\r\n  }\r\n\r\n  /** Make sure the input is a supported type. */\r\n  protected _validateType() {\r\n    if (MAT_INPUT_INVALID_TYPES.indexOf(this._type) > -1) {\r\n      throw getMatInputUnsupportedTypeError(this._type);\r\n    }\r\n  }\r\n\r\n  /** Checks whether the input type is one of the types that are never empty. */\r\n  protected _isNeverEmpty() {\r\n    return this._neverEmptyInputTypes.indexOf(this._type) > -1;\r\n  }\r\n\r\n  /** Checks whether the input is invalid based on the native validation. */\r\n  protected _isBadInput() {\r\n    // The `validity` property won't be present on platform-server.\r\n    let validity = (this._elementRef.nativeElement as HTMLInputElement).validity;\r\n    return validity && validity.badInput;\r\n  }\r\n\r\n  /** Determines if the component host is a textarea. If not recognizable it returns false. */\r\n  protected _isTextarea() {\r\n    let nativeElement = this._elementRef.nativeElement;\r\n\r\n    // In Universal, we don't have access to `nodeName`, but the same can be achieved with `name`.\r\n    // Note that this shouldn't be necessary once Angular switches to an API that resembles the\r\n    // DOM closer.\r\n    let nodeName = this._platform.isBrowser ? nativeElement.nodeName : nativeElement.name;\r\n    return nodeName ? nodeName.toLowerCase() === 'textarea' : false;\r\n  }\r\n\r\n  /**\r\n   * Implemented as part of MatFormFieldControl.\r\n   * @docs-private\r\n   */\r\n  get empty(): boolean {\r\n    return !this._isNeverEmpty() && !this._elementRef.nativeElement.value && !this._isBadInput();\r\n  }\r\n\r\n  /**\r\n   * Implemented as part of MatFormFieldControl.\r\n   * @docs-private\r\n   */\r\n  get shouldLabelFloat(): boolean { return this.focused || !this.empty; }\r\n\r\n  /**\r\n   * Implemented as part of MatFormFieldControl.\r\n   * @docs-private\r\n   */\r\n  setDescribedByIds(ids: string[]) { this._ariaDescribedby = ids.join(' '); }\r\n\r\n  /**\r\n   * Implemented as part of MatFormFieldControl.\r\n   * @docs-private\r\n   */\r\n  onContainerClick() { this.focus(); }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {InjectionToken} from '@angular/core';\r\n\r\n\r\n/**\r\n * This token is used to inject the object whose value should be set into `MatInput`. If none is\r\n * provided, the native `HTMLInputElement` is used. Directives like `MatDatepickerInput` can provide\r\n * themselves for this token, in order to make `MatInput` delegate the getting and setting of the\r\n * value to them.\r\n */\r\nexport const MAT_INPUT_VALUE_ACCESSOR =\r\n    new InjectionToken<{value: any}>('MAT_INPUT_VALUE_ACCESSOR');\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\n/** @docs-private */\r\nexport function getMatInputUnsupportedTypeError(type: string): Error {\r\n  return Error(`Input type \"${type}\" isn't supported by matInput.`);\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {\r\n  Directive,\r\n  ElementRef,\r\n  Input,\r\n  AfterViewInit,\r\n  DoCheck,\r\n  OnDestroy,\r\n  NgZone,\r\n} from '@angular/core';\r\nimport {Platform} from '@angular/cdk/platform';\r\nimport {fromEvent} from 'rxjs/observable/fromEvent';\r\nimport {auditTime} from 'rxjs/operators/auditTime';\r\nimport {takeUntil} from 'rxjs/operators/takeUntil';\r\nimport {Subject} from 'rxjs/Subject';\r\n\r\n\r\n/**\r\n * Directive to automatically resize a textarea to fit its content.\r\n */\r\n@Directive({\r\n  selector: `textarea[mat-autosize], textarea[matTextareaAutosize]`,\r\n  exportAs: 'matTextareaAutosize',\r\n  host: {\r\n    'class': 'mat-autosize',\r\n    // Textarea elements that have the directive applied should have a single row by default.\r\n    // Browsers normally show two rows by default and therefore this limits the minRows binding.\r\n    'rows': '1',\r\n  },\r\n})\r\nexport class MatTextareaAutosize implements AfterViewInit, DoCheck, OnDestroy {\r\n  /** Keep track of the previous textarea value to avoid resizing when the value hasn't changed. */\r\n  private _previousValue: string;\r\n  private readonly _destroyed = new Subject<void>();\r\n\r\n  private _minRows: number;\r\n  private _maxRows: number;\r\n\r\n  /** Minimum amount of rows in the textarea. */\r\n  @Input('matAutosizeMinRows')\r\n  set minRows(value: number) {\r\n    this._minRows = value;\r\n    this._setMinHeight();\r\n  }\r\n  get minRows(): number { return this._minRows; }\r\n\r\n  /** Maximum amount of rows in the textarea. */\r\n  @Input('matAutosizeMaxRows')\r\n  get maxRows(): number { return this._maxRows; }\r\n  set maxRows(value: number) {\r\n    this._maxRows = value;\r\n    this._setMaxHeight();\r\n  }\r\n\r\n  /** Cached height of a textarea with a single row. */\r\n  private _cachedLineHeight: number;\r\n\r\n  constructor(\r\n    private _elementRef: ElementRef,\r\n    private _platform: Platform,\r\n    private _ngZone?: NgZone) {}\r\n\r\n  // TODO(crisbeto): make the `_ngZone` a required param in the next major version.\r\n\r\n  /** Sets the minimum height of the textarea as determined by minRows. */\r\n  _setMinHeight(): void {\r\n    const minHeight = this.minRows && this._cachedLineHeight ?\r\n        `${this.minRows * this._cachedLineHeight}px` : null;\r\n\r\n    if (minHeight)  {\r\n      this._setTextareaStyle('minHeight', minHeight);\r\n    }\r\n  }\r\n\r\n  /** Sets the maximum height of the textarea as determined by maxRows. */\r\n  _setMaxHeight(): void {\r\n    const maxHeight = this.maxRows && this._cachedLineHeight ?\r\n        `${this.maxRows * this._cachedLineHeight}px` : null;\r\n\r\n    if (maxHeight) {\r\n      this._setTextareaStyle('maxHeight', maxHeight);\r\n    }\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this._platform.isBrowser) {\r\n      this.resizeToFitContent();\r\n\r\n      if (this._ngZone) {\r\n        this._ngZone.runOutsideAngular(() => {\r\n          fromEvent(window, 'resize')\r\n            .pipe(auditTime(16), takeUntil(this._destroyed))\r\n            .subscribe(() => this.resizeToFitContent(true));\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this._destroyed.next();\r\n    this._destroyed.complete();\r\n  }\r\n\r\n  /** Sets a style property on the textarea element. */\r\n  private _setTextareaStyle(property: string, value: string): void {\r\n    const textarea = this._elementRef.nativeElement as HTMLTextAreaElement;\r\n    textarea.style[property] = value;\r\n  }\r\n\r\n  /**\r\n   * Cache the height of a single-row textarea if it has not already been cached.\r\n   *\r\n   * We need to know how large a single \"row\" of a textarea is in order to apply minRows and\r\n   * maxRows. For the initial version, we will assume that the height of a single line in the\r\n   * textarea does not ever change.\r\n   */\r\n  private _cacheTextareaLineHeight(): void {\r\n    if (this._cachedLineHeight) {\r\n      return;\r\n    }\r\n\r\n    let textarea = this._elementRef.nativeElement as HTMLTextAreaElement;\r\n\r\n    // Use a clone element because we have to override some styles.\r\n    let textareaClone = textarea.cloneNode(false) as HTMLTextAreaElement;\r\n    textareaClone.rows = 1;\r\n\r\n    // Use `position: absolute` so that this doesn't cause a browser layout and use\r\n    // `visibility: hidden` so that nothing is rendered. Clear any other styles that\r\n    // would affect the height.\r\n    textareaClone.style.position = 'absolute';\r\n    textareaClone.style.visibility = 'hidden';\r\n    textareaClone.style.border = 'none';\r\n    textareaClone.style.padding = '0';\r\n    textareaClone.style.height = '';\r\n    textareaClone.style.minHeight = '';\r\n    textareaClone.style.maxHeight = '';\r\n\r\n    // In Firefox it happens that textarea elements are always bigger than the specified amount\r\n    // of rows. This is because Firefox tries to add extra space for the horizontal scrollbar.\r\n    // As a workaround that removes the extra space for the scrollbar, we can just set overflow\r\n    // to hidden. This ensures that there is no invalid calculation of the line height.\r\n    // See Firefox bug report: https://bugzilla.mozilla.org/show_bug.cgi?id=33654\r\n    textareaClone.style.overflow = 'hidden';\r\n\r\n    textarea.parentNode!.appendChild(textareaClone);\r\n    this._cachedLineHeight = textareaClone.clientHeight;\r\n    textarea.parentNode!.removeChild(textareaClone);\r\n\r\n    // Min and max heights have to be re-calculated if the cached line height changes\r\n    this._setMinHeight();\r\n    this._setMaxHeight();\r\n  }\r\n\r\n  ngDoCheck() {\r\n    if (this._platform.isBrowser) {\r\n      this.resizeToFitContent();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Resize the textarea to fit its content.\r\n   * @param force Whether to force a height recalculation. By default the height will be\r\n   *    recalculated only if the value changed since the last call.\r\n   */\r\n  resizeToFitContent(force: boolean = false) {\r\n    this._cacheTextareaLineHeight();\r\n\r\n    // If we haven't determined the line-height yet, we know we're still hidden and there's no point\r\n    // in checking the height of the textarea.\r\n    if (!this._cachedLineHeight) {\r\n      return;\r\n    }\r\n\r\n    const textarea = this._elementRef.nativeElement as HTMLTextAreaElement;\r\n    const value = textarea.value;\r\n\r\n    // Only resize of the value changed since these calculations can be expensive.\r\n    if (value === this._previousValue && !force) {\r\n      return;\r\n    }\r\n\r\n    const placeholderText = textarea.placeholder;\r\n\r\n    // Reset the textarea height to auto in order to shrink back to its default size.\r\n    // Also temporarily force overflow:hidden, so scroll bars do not interfere with calculations.\r\n    // Long placeholders that are wider than the textarea width may lead to a bigger scrollHeight\r\n    // value. To ensure that the scrollHeight is not bigger than the content, the placeholders\r\n    // need to be removed temporarily.\r\n    textarea.style.height = 'auto';\r\n    textarea.style.overflow = 'hidden';\r\n    textarea.placeholder = '';\r\n\r\n    // Use the scrollHeight to know how large the textarea *would* be if fit its entire value.\r\n    textarea.style.height = `${textarea.scrollHeight}px`;\r\n    textarea.style.overflow = '';\r\n    textarea.placeholder = placeholderText;\r\n\r\n    this._previousValue = value;\r\n  }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {OverlayModule} from '@angular/cdk/overlay';\r\nimport {PortalModule} from '@angular/cdk/portal';\r\nimport {A11yModule} from '@angular/cdk/a11y';\r\nimport {MatCommonModule} from '@angular/material/core';\r\nimport {\r\n  MatDialog,\r\n  MAT_DIALOG_SCROLL_STRATEGY_PROVIDER\r\n} from './dialog';\r\nimport {MatDialogContainer} from './dialog-container';\r\nimport {\r\n  MatDialogClose,\r\n  MatDialogContent,\r\n  MatDialogTitle,\r\n  MatDialogActions\r\n} from './dialog-content-directives';\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    OverlayModule,\r\n    PortalModule,\r\n    A11yModule,\r\n    MatCommonModule,\r\n  ],\r\n  exports: [\r\n    MatDialogContainer,\r\n    MatDialogClose,\r\n    MatDialogTitle,\r\n    MatDialogContent,\r\n    MatDialogActions,\r\n    MatCommonModule,\r\n  ],\r\n  declarations: [\r\n    MatDialogContainer,\r\n    MatDialogClose,\r\n    MatDialogTitle,\r\n    MatDialogActions,\r\n    MatDialogContent,\r\n  ],\r\n  providers: [\r\n    MatDialog,\r\n    MAT_DIALOG_SCROLL_STRATEGY_PROVIDER,\r\n  ],\r\n  entryComponents: [MatDialogContainer],\r\n})\r\nexport class MatDialogModule {}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {\r\n  Directive,\r\n  Input,\r\n  OnChanges,\r\n  OnInit,\r\n  Optional,\r\n  SimpleChanges,\r\n  ElementRef,\r\n} from '@angular/core';\r\nimport {MatDialog} from './dialog';\r\nimport {MatDialogRef} from './dialog-ref';\r\n\r\n/** Counter used to generate unique IDs for dialog elements. */\r\nlet dialogElementUid = 0;\r\n\r\n/**\r\n * Button that will close the current dialog.\r\n */\r\n@Directive({\r\n  selector: `button[mat-dialog-close], button[matDialogClose]`,\r\n  exportAs: 'matDialogClose',\r\n  host: {\r\n    '(click)': 'dialogRef.close(dialogResult)',\r\n    '[attr.aria-label]': 'ariaLabel',\r\n    'type': 'button', // Prevents accidental form submits.\r\n  }\r\n})\r\nexport class MatDialogClose implements OnInit, OnChanges {\r\n  /** Screenreader label for the button. */\r\n  @Input('aria-label') ariaLabel: string = 'Close dialog';\r\n\r\n  /** Dialog close input. */\r\n  @Input('mat-dialog-close') dialogResult: any;\r\n\r\n  @Input('matDialogClose') _matDialogClose: any;\r\n\r\n  constructor(\r\n    @Optional() public dialogRef: MatDialogRef<any>,\r\n    private _elementRef: ElementRef,\r\n    private _dialog: MatDialog) {}\r\n\r\n  ngOnInit() {\r\n    if (!this.dialogRef) {\r\n      // When this directive is included in a dialog via TemplateRef (rather than being\r\n      // in a Component), the DialogRef isn't available via injection because embedded\r\n      // views cannot be given a custom injector. Instead, we look up the DialogRef by\r\n      // ID. This must occur in `onInit`, as the ID binding for the dialog container won't\r\n      // be resolved at constructor time.\r\n      this.dialogRef = getClosestDialog(this._elementRef, this._dialog.openDialogs)!;\r\n    }\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    const proxiedChange = changes._matDialogClose || changes._matDialogCloseResult;\r\n\r\n    if (proxiedChange) {\r\n      this.dialogResult = proxiedChange.currentValue;\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Title of a dialog element. Stays fixed to the top of the dialog when scrolling.\r\n */\r\n@Directive({\r\n  selector: '[mat-dialog-title], [matDialogTitle]',\r\n  exportAs: 'matDialogTitle',\r\n  host: {\r\n    'class': 'mat-dialog-title',\r\n    '[id]': 'id',\r\n  },\r\n})\r\nexport class MatDialogTitle implements OnInit {\r\n  @Input() id = `mat-dialog-title-${dialogElementUid++}`;\r\n\r\n  constructor(\r\n    @Optional() private _dialogRef: MatDialogRef<any>,\r\n    private _elementRef: ElementRef,\r\n    private _dialog: MatDialog) {}\r\n\r\n  ngOnInit() {\r\n    if (!this._dialogRef) {\r\n      this._dialogRef = getClosestDialog(this._elementRef, this._dialog.openDialogs)!;\r\n    }\r\n\r\n    if (this._dialogRef) {\r\n      Promise.resolve().then(() => {\r\n        const container = this._dialogRef._containerInstance;\r\n\r\n        if (container && !container._ariaLabelledBy) {\r\n          container._ariaLabelledBy = this.id;\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * Scrollable content container of a dialog.\r\n */\r\n@Directive({\r\n  selector: `[mat-dialog-content], mat-dialog-content, [matDialogContent]`,\r\n  host: {'class': 'mat-dialog-content'}\r\n})\r\nexport class MatDialogContent {}\r\n\r\n\r\n/**\r\n * Container for the bottom action buttons in a dialog.\r\n * Stays fixed to the bottom when scrolling.\r\n */\r\n@Directive({\r\n  selector: `[mat-dialog-actions], mat-dialog-actions, [matDialogActions]`,\r\n  host: {'class': 'mat-dialog-actions'}\r\n})\r\nexport class MatDialogActions {}\r\n\r\n\r\n/**\r\n * Finds the closest MatDialogRef to an element by looking at the DOM.\r\n * @param element Element relative to which to look for a dialog.\r\n * @param openDialogs References to the currently-open dialogs.\r\n */\r\nfunction getClosestDialog(element: ElementRef, openDialogs: MatDialogRef<any>[]) {\r\n  let parent: HTMLElement | null = element.nativeElement.parentElement;\r\n\r\n  while (parent && !parent.classList.contains('mat-dialog-container')) {\r\n    parent = parent.parentElement;\r\n  }\r\n\r\n  return parent ? openDialogs.find(dialog => dialog.id === parent!.id) : null;\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {Directionality} from '@angular/cdk/bidi';\r\nimport {\r\n  Overlay,\r\n  OverlayConfig,\r\n  OverlayRef,\r\n  ScrollStrategy,\r\n  OverlayContainer,\r\n} from '@angular/cdk/overlay';\r\nimport {ComponentPortal, ComponentType, PortalInjector, TemplatePortal} from '@angular/cdk/portal';\r\nimport {Location} from '@angular/common';\r\nimport {\r\n  ComponentRef,\r\n  Inject,\r\n  Injectable,\r\n  InjectionToken,\r\n  Injector,\r\n  Optional,\r\n  SkipSelf,\r\n  TemplateRef,\r\n} from '@angular/core';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport {defer} from 'rxjs/observable/defer';\r\nimport {of as observableOf} from 'rxjs/observable/of';\r\nimport {startWith} from 'rxjs/operators/startWith';\r\nimport {Subject} from 'rxjs/Subject';\r\nimport {MatDialogConfig} from './dialog-config';\r\nimport {MatDialogContainer} from './dialog-container';\r\nimport {MatDialogRef} from './dialog-ref';\r\n\r\n/** Injection token that can be used to access the data that was passed in to a dialog. */\r\nexport const MAT_DIALOG_DATA = new InjectionToken<any>('MatDialogData');\r\n\r\n/** Injection token that can be used to specify default dialog options. */\r\nexport const MAT_DIALOG_DEFAULT_OPTIONS =\r\n    new InjectionToken<MatDialogConfig>('mat-dialog-default-options');\r\n\r\n/** Injection token that determines the scroll handling while the dialog is open. */\r\nexport const MAT_DIALOG_SCROLL_STRATEGY =\r\n    new InjectionToken<() => ScrollStrategy>('mat-dialog-scroll-strategy');\r\n\r\n/** @docs-private */\r\nexport function MAT_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay: Overlay):\r\n    () => ScrollStrategy {\r\n  return () => overlay.scrollStrategies.block();\r\n}\r\n\r\n/** @docs-private */\r\nexport const MAT_DIALOG_SCROLL_STRATEGY_PROVIDER = {\r\n  provide: MAT_DIALOG_SCROLL_STRATEGY,\r\n  deps: [Overlay],\r\n  useFactory: MAT_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY,\r\n};\r\n\r\n\r\n/**\r\n * Service to open Material Design modal dialogs.\r\n */\r\n@Injectable()\r\nexport class MatDialog {\r\n  private _openDialogsAtThisLevel: MatDialogRef<any>[] = [];\r\n  private readonly _afterAllClosedAtThisLevel = new Subject<void>();\r\n  private readonly _afterOpenAtThisLevel = new Subject<MatDialogRef<any>>();\r\n  private _ariaHiddenElements = new Map<Element, string|null>();\r\n\r\n  /** Keeps track of the currently-open dialogs. */\r\n  get openDialogs(): MatDialogRef<any>[] {\r\n    return this._parentDialog ? this._parentDialog.openDialogs : this._openDialogsAtThisLevel;\r\n  }\r\n\r\n  /** Stream that emits when a dialog has been opened. */\r\n  get afterOpen(): Subject<MatDialogRef<any>> {\r\n    return this._parentDialog ? this._parentDialog.afterOpen : this._afterOpenAtThisLevel;\r\n  }\r\n\r\n  get _afterAllClosed() {\r\n    const parent = this._parentDialog;\r\n    return parent ? parent._afterAllClosed : this._afterAllClosedAtThisLevel;\r\n  }\r\n\r\n  /**\r\n   * Stream that emits when all open dialog have finished closing.\r\n   * Will emit on subscribe if there are no open dialogs to begin with.\r\n   */\r\n  readonly afterAllClosed: Observable<void> = defer<void>(() => this.openDialogs.length ?\r\n      this._afterAllClosed :\r\n      this._afterAllClosed.pipe(startWith(undefined)));\r\n\r\n  constructor(\r\n      private _overlay: Overlay,\r\n      private _injector: Injector,\r\n      @Optional() private _location: Location,\r\n      @Optional() @Inject(MAT_DIALOG_DEFAULT_OPTIONS) private _defaultOptions,\r\n      @Inject(MAT_DIALOG_SCROLL_STRATEGY) private _scrollStrategy,\r\n      @Optional() @SkipSelf() private _parentDialog: MatDialog,\r\n      private _overlayContainer: OverlayContainer) {}\r\n\r\n  /**\r\n   * Opens a modal dialog containing the given component.\r\n   * @param componentOrTemplateRef Type of the component to load into the dialog,\r\n   *     or a TemplateRef to instantiate as the dialog content.\r\n   * @param config Extra configuration options.\r\n   * @returns Reference to the newly-opened dialog.\r\n   */\r\n  open<T, D = any>(componentOrTemplateRef: ComponentType<T> | TemplateRef<T>,\r\n          config?: MatDialogConfig<D>): MatDialogRef<T> {\r\n\r\n    config = _applyConfigDefaults(config, this._defaultOptions || new MatDialogConfig());\r\n\r\n    if (config.id && this.getDialogById(config.id)) {\r\n      throw Error(`Dialog with id \"${config.id}\" exists already. The dialog id must be unique.`);\r\n    }\r\n\r\n    const overlayRef = this._createOverlay(config);\r\n    const dialogContainer = this._attachDialogContainer(overlayRef, config);\r\n    const dialogRef =\r\n        this._attachDialogContent<T>(componentOrTemplateRef, dialogContainer, overlayRef, config);\r\n\r\n    // If this is the first dialog that we're opening, hide all the non-overlay content.\r\n    if (!this.openDialogs.length) {\r\n      this._hideNonDialogContentFromAssistiveTechnology();\r\n    }\r\n\r\n    this.openDialogs.push(dialogRef);\r\n    dialogRef.afterClosed().subscribe(() => this._removeOpenDialog(dialogRef));\r\n    this.afterOpen.next(dialogRef);\r\n\r\n    return dialogRef;\r\n  }\r\n\r\n  /**\r\n   * Closes all of the currently-open dialogs.\r\n   */\r\n  closeAll(): void {\r\n    let i = this.openDialogs.length;\r\n\r\n    while (i--) {\r\n      // The `_openDialogs` property isn't updated after close until the rxjs subscription\r\n      // runs on the next microtask, in addition to modifying the array as we're going\r\n      // through it. We loop through all of them and call close without assuming that\r\n      // they'll be removed from the list instantaneously.\r\n      this.openDialogs[i].close();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Finds an open dialog by its id.\r\n   * @param id ID to use when looking up the dialog.\r\n   */\r\n  getDialogById(id: string): MatDialogRef<any> | undefined {\r\n    return this.openDialogs.find(dialog => dialog.id === id);\r\n  }\r\n\r\n  /**\r\n   * Creates the overlay into which the dialog will be loaded.\r\n   * @param config The dialog configuration.\r\n   * @returns A promise resolving to the OverlayRef for the created overlay.\r\n   */\r\n  private _createOverlay(config: MatDialogConfig): OverlayRef {\r\n    const overlayConfig = this._getOverlayConfig(config);\r\n    return this._overlay.create(overlayConfig);\r\n  }\r\n\r\n  /**\r\n   * Creates an overlay config from a dialog config.\r\n   * @param dialogConfig The dialog configuration.\r\n   * @returns The overlay configuration.\r\n   */\r\n  private _getOverlayConfig(dialogConfig: MatDialogConfig): OverlayConfig {\r\n    const state = new OverlayConfig({\r\n      positionStrategy: this._overlay.position().global(),\r\n      scrollStrategy: dialogConfig.scrollStrategy || this._scrollStrategy(),\r\n      panelClass: dialogConfig.panelClass,\r\n      hasBackdrop: dialogConfig.hasBackdrop,\r\n      direction: dialogConfig.direction,\r\n      minWidth: dialogConfig.minWidth,\r\n      minHeight: dialogConfig.minHeight,\r\n      maxWidth: dialogConfig.maxWidth,\r\n      maxHeight: dialogConfig.maxHeight\r\n    });\r\n\r\n    if (dialogConfig.backdropClass) {\r\n      state.backdropClass = dialogConfig.backdropClass;\r\n    }\r\n\r\n    return state;\r\n  }\r\n\r\n  /**\r\n   * Attaches an MatDialogContainer to a dialog's already-created overlay.\r\n   * @param overlay Reference to the dialog's underlying overlay.\r\n   * @param config The dialog configuration.\r\n   * @returns A promise resolving to a ComponentRef for the attached container.\r\n   */\r\n  private _attachDialogContainer(overlay: OverlayRef, config: MatDialogConfig): MatDialogContainer {\r\n    let containerPortal = new ComponentPortal(MatDialogContainer, config.viewContainerRef);\r\n    let containerRef: ComponentRef<MatDialogContainer> = overlay.attach(containerPortal);\r\n    containerRef.instance._config = config;\r\n\r\n    return containerRef.instance;\r\n  }\r\n\r\n  /**\r\n   * Attaches the user-provided component to the already-created MatDialogContainer.\r\n   * @param componentOrTemplateRef The type of component being loaded into the dialog,\r\n   *     or a TemplateRef to instantiate as the content.\r\n   * @param dialogContainer Reference to the wrapping MatDialogContainer.\r\n   * @param overlayRef Reference to the overlay in which the dialog resides.\r\n   * @param config The dialog configuration.\r\n   * @returns A promise resolving to the MatDialogRef that should be returned to the user.\r\n   */\r\n  private _attachDialogContent<T>(\r\n      componentOrTemplateRef: ComponentType<T> | TemplateRef<T>,\r\n      dialogContainer: MatDialogContainer,\r\n      overlayRef: OverlayRef,\r\n      config: MatDialogConfig): MatDialogRef<T> {\r\n\r\n    // Create a reference to the dialog we're creating in order to give the user a handle\r\n    // to modify and close it.\r\n    const dialogRef = new MatDialogRef<T>(overlayRef, dialogContainer, this._location, config.id);\r\n\r\n    // When the dialog backdrop is clicked, we want to close it.\r\n    if (config.hasBackdrop) {\r\n      overlayRef.backdropClick().subscribe(() => {\r\n        if (!dialogRef.disableClose) {\r\n          dialogRef.close();\r\n        }\r\n      });\r\n    }\r\n\r\n    if (componentOrTemplateRef instanceof TemplateRef) {\r\n      dialogContainer.attachTemplatePortal(\r\n        new TemplatePortal<T>(componentOrTemplateRef, null!,\r\n          <any>{ $implicit: config.data, dialogRef }));\r\n    } else {\r\n      const injector = this._createInjector<T>(config, dialogRef, dialogContainer);\r\n      const contentRef = dialogContainer.attachComponentPortal<T>(\r\n          new ComponentPortal(componentOrTemplateRef, undefined, injector));\r\n      dialogRef.componentInstance = contentRef.instance;\r\n    }\r\n\r\n    dialogRef\r\n      .updateSize(config.width, config.height)\r\n      .updatePosition(config.position);\r\n\r\n    return dialogRef;\r\n  }\r\n\r\n  /**\r\n   * Creates a custom injector to be used inside the dialog. This allows a component loaded inside\r\n   * of a dialog to close itself and, optionally, to return a value.\r\n   * @param config Config object that is used to construct the dialog.\r\n   * @param dialogRef Reference to the dialog.\r\n   * @param container Dialog container element that wraps all of the contents.\r\n   * @returns The custom injector that can be used inside the dialog.\r\n   */\r\n  private _createInjector<T>(\r\n      config: MatDialogConfig,\r\n      dialogRef: MatDialogRef<T>,\r\n      dialogContainer: MatDialogContainer): PortalInjector {\r\n\r\n    const userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\r\n    const injectionTokens = new WeakMap();\r\n\r\n    // The MatDialogContainer is injected in the portal as the MatDialogContainer and the dialog's\r\n    // content are created out of the same ViewContainerRef and as such, are siblings for injector\r\n    // purposes. To allow the hierarchy that is expected, the MatDialogContainer is explicitly\r\n    // added to the injection tokens.\r\n    injectionTokens\r\n      .set(MatDialogContainer, dialogContainer)\r\n      .set(MAT_DIALOG_DATA, config.data)\r\n      .set(MatDialogRef, dialogRef);\r\n\r\n    if (!userInjector || !userInjector.get(Directionality, null)) {\r\n      injectionTokens.set(Directionality, {\r\n        value: config.direction,\r\n        change: observableOf()\r\n      });\r\n    }\r\n\r\n    return new PortalInjector(userInjector || this._injector, injectionTokens);\r\n  }\r\n\r\n  /**\r\n   * Removes a dialog from the array of open dialogs.\r\n   * @param dialogRef Dialog to be removed.\r\n   */\r\n  private _removeOpenDialog(dialogRef: MatDialogRef<any>) {\r\n    const index = this.openDialogs.indexOf(dialogRef);\r\n\r\n    if (index > -1) {\r\n      this.openDialogs.splice(index, 1);\r\n\r\n      // If all the dialogs were closed, remove/restore the `aria-hidden`\r\n      // to a the siblings and emit to the `afterAllClosed` stream.\r\n      if (!this.openDialogs.length) {\r\n        this._ariaHiddenElements.forEach((previousValue, element) => {\r\n          if (previousValue) {\r\n            element.setAttribute('aria-hidden', previousValue);\r\n          } else {\r\n            element.removeAttribute('aria-hidden');\r\n          }\r\n        });\r\n\r\n        this._ariaHiddenElements.clear();\r\n        this._afterAllClosed.next();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Hides all of the content that isn't an overlay from assistive technology.\r\n   */\r\n  private _hideNonDialogContentFromAssistiveTechnology() {\r\n    const overlayContainer = this._overlayContainer.getContainerElement();\r\n\r\n    // Ensure that the overlay container is attached to the DOM.\r\n    if (overlayContainer.parentElement) {\r\n      const siblings = overlayContainer.parentElement.children;\r\n\r\n      for (let i = siblings.length - 1; i > -1; i--) {\r\n        let sibling = siblings[i];\r\n\r\n        if (sibling !== overlayContainer &&\r\n          sibling.nodeName !== 'SCRIPT' &&\r\n          sibling.nodeName !== 'STYLE' &&\r\n          !sibling.hasAttribute('aria-live')) {\r\n\r\n          this._ariaHiddenElements.set(sibling, sibling.getAttribute('aria-hidden'));\r\n          sibling.setAttribute('aria-hidden', 'true');\r\n        }\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n}\r\n\r\n/**\r\n * Applies default options to the dialog config.\r\n * @param config Config to be modified.\r\n * @param defaultOptions Default options provided.\r\n * @returns The new configuration object.\r\n */\r\nfunction _applyConfigDefaults(\r\n    config?: MatDialogConfig, defaultOptions?: MatDialogConfig): MatDialogConfig {\r\n  return {...defaultOptions, ...config};\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {OverlayRef, GlobalPositionStrategy} from '@angular/cdk/overlay';\r\nimport {ESCAPE} from '@angular/cdk/keycodes';\r\nimport {Location} from '@angular/common';\r\nimport {filter} from 'rxjs/operators/filter';\r\nimport {take} from 'rxjs/operators/take';\r\nimport {DialogPosition} from './dialog-config';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport {Subject} from 'rxjs/Subject';\r\nimport {Subscription, ISubscription} from 'rxjs/Subscription';\r\nimport {MatDialogContainer} from './dialog-container';\r\n\r\n\r\n// TODO(jelbourn): resizing\r\n\r\n// Counter for unique dialog ids.\r\nlet uniqueId = 0;\r\n\r\n/**\r\n * Reference to a dialog opened via the MatDialog service.\r\n */\r\nexport class MatDialogRef<T, R = any> {\r\n  /** The instance of component opened into the dialog. */\r\n  componentInstance: T;\r\n\r\n  /** Whether the user is allowed to close the dialog. */\r\n  disableClose: boolean | undefined = this._containerInstance._config.disableClose;\r\n\r\n  /** Subject for notifying the user that the dialog has finished opening. */\r\n  private readonly _afterOpen = new Subject<void>();\r\n\r\n  /** Subject for notifying the user that the dialog has finished closing. */\r\n  private readonly _afterClosed = new Subject<R | undefined>();\r\n\r\n  /** Subject for notifying the user that the dialog has started closing. */\r\n  private readonly _beforeClose = new Subject<R | undefined>();\r\n\r\n  /** Result to be passed to afterClosed. */\r\n  private _result: R | undefined;\r\n\r\n  /** Subscription to changes in the user's location. */\r\n  private _locationChanges: ISubscription = Subscription.EMPTY;\r\n\r\n  constructor(\r\n    private _overlayRef: OverlayRef,\r\n    public _containerInstance: MatDialogContainer,\r\n    location?: Location,\r\n    readonly id: string = `mat-dialog-${uniqueId++}`) {\r\n\r\n    // Pass the id along to the container.\r\n    _containerInstance._id = id;\r\n\r\n    // Emit when opening animation completes\r\n    _containerInstance._animationStateChanged.pipe(\r\n      filter(event => event.phaseName === 'done' && event.toState === 'enter'),\r\n      take(1)\r\n    )\r\n    .subscribe(() => {\r\n      this._afterOpen.next();\r\n      this._afterOpen.complete();\r\n    });\r\n\r\n    // Dispose overlay when closing animation is complete\r\n    _containerInstance._animationStateChanged.pipe(\r\n      filter(event => event.phaseName === 'done' && event.toState === 'exit'),\r\n      take(1)\r\n    )\r\n    .subscribe(() => {\r\n      this._overlayRef.dispose();\r\n      this._locationChanges.unsubscribe();\r\n      this._afterClosed.next(this._result);\r\n      this._afterClosed.complete();\r\n      this.componentInstance = null!;\r\n    });\r\n\r\n    _overlayRef.keydownEvents()\r\n      .pipe(filter(event => event.keyCode === ESCAPE && !this.disableClose))\r\n      .subscribe(() => this.close());\r\n\r\n    if (location) {\r\n      // Close the dialog when the user goes forwards/backwards in history or when the location\r\n      // hash changes. Note that this usually doesn't include clicking on links (unless the user\r\n      // is using the `HashLocationStrategy`).\r\n      this._locationChanges = location.subscribe(() => {\r\n        if (this._containerInstance._config.closeOnNavigation) {\r\n          this.close();\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Close the dialog.\r\n   * @param dialogResult Optional result to return to the dialog opener.\r\n   */\r\n  close(dialogResult?: R): void {\r\n    this._result = dialogResult;\r\n\r\n    // Transition the backdrop in parallel to the dialog.\r\n    this._containerInstance._animationStateChanged.pipe(\r\n      filter(event => event.phaseName === 'start'),\r\n      take(1)\r\n    )\r\n    .subscribe(() => {\r\n      this._beforeClose.next(dialogResult);\r\n      this._beforeClose.complete();\r\n      this._overlayRef.detachBackdrop();\r\n    });\r\n\r\n    this._containerInstance._startExitAnimation();\r\n  }\r\n\r\n  /**\r\n   * Gets an observable that is notified when the dialog is finished opening.\r\n   */\r\n  afterOpen(): Observable<void> {\r\n    return this._afterOpen.asObservable();\r\n  }\r\n\r\n  /**\r\n   * Gets an observable that is notified when the dialog is finished closing.\r\n   */\r\n  afterClosed(): Observable<R | undefined> {\r\n    return this._afterClosed.asObservable();\r\n  }\r\n\r\n  /**\r\n   * Gets an observable that is notified when the dialog has started closing.\r\n   */\r\n  beforeClose(): Observable<R | undefined> {\r\n    return this._beforeClose.asObservable();\r\n  }\r\n\r\n  /**\r\n   * Gets an observable that emits when the overlay's backdrop has been clicked.\r\n   */\r\n  backdropClick(): Observable<MouseEvent> {\r\n    return this._overlayRef.backdropClick();\r\n  }\r\n\r\n  /**\r\n   * Gets an observable that emits when keydown events are targeted on the overlay.\r\n   */\r\n  keydownEvents(): Observable<KeyboardEvent> {\r\n    return this._overlayRef.keydownEvents();\r\n  }\r\n\r\n  /**\r\n   * Updates the dialog's position.\r\n   * @param position New dialog position.\r\n   */\r\n  updatePosition(position?: DialogPosition): this {\r\n    let strategy = this._getPositionStrategy();\r\n\r\n    if (position && (position.left || position.right)) {\r\n      position.left ? strategy.left(position.left) : strategy.right(position.right);\r\n    } else {\r\n      strategy.centerHorizontally();\r\n    }\r\n\r\n    if (position && (position.top || position.bottom)) {\r\n      position.top ? strategy.top(position.top) : strategy.bottom(position.bottom);\r\n    } else {\r\n      strategy.centerVertically();\r\n    }\r\n\r\n    this._overlayRef.updatePosition();\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Updates the dialog's width and height.\r\n   * @param width New width of the dialog.\r\n   * @param height New height of the dialog.\r\n   */\r\n  updateSize(width: string = 'auto', height: string = 'auto'): this {\r\n    this._getPositionStrategy().width(width).height(height);\r\n    this._overlayRef.updatePosition();\r\n    return this;\r\n  }\r\n\r\n  /** Fetches the position strategy object from the overlay ref. */\r\n  private _getPositionStrategy(): GlobalPositionStrategy {\r\n    return this._overlayRef.getConfig().positionStrategy as GlobalPositionStrategy;\r\n  }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {\r\n  Component,\r\n  ComponentRef,\r\n  ElementRef,\r\n  EmbeddedViewRef,\r\n  EventEmitter,\r\n  Inject,\r\n  Optional,\r\n  ChangeDetectorRef,\r\n  ViewChild,\r\n  ViewEncapsulation,\r\n  ChangeDetectionStrategy,\r\n} from '@angular/core';\r\nimport {DOCUMENT} from '@angular/common';\r\nimport {AnimationEvent} from '@angular/animations';\r\nimport {matDialogAnimations} from './dialog-animations';\r\nimport {\r\n  BasePortalOutlet,\r\n  ComponentPortal,\r\n  CdkPortalOutlet,\r\n  TemplatePortal\r\n} from '@angular/cdk/portal';\r\nimport {FocusTrap, FocusTrapFactory} from '@angular/cdk/a11y';\r\nimport {MatDialogConfig} from './dialog-config';\r\n\r\n\r\n/**\r\n * Throws an exception for the case when a ComponentPortal is\r\n * attached to a DomPortalOutlet without an origin.\r\n * @docs-private\r\n */\r\nexport function throwMatDialogContentAlreadyAttachedError() {\r\n  throw Error('Attempting to attach dialog content after content is already attached');\r\n}\r\n\r\n/**\r\n * Internal component that wraps user-provided dialog content.\r\n * Animation is based on https://material.io/guidelines/motion/choreography.html.\r\n * @docs-private\r\n */\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'mat-dialog-container',\r\n  templateUrl: 'dialog-container.html',\r\n  styleUrls: ['dialog.css'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  preserveWhitespaces: false,\r\n  // Using OnPush for dialogs caused some G3 sync issues. Disabled until we can track them down.\r\n  // tslint:disable-next-line:validate-decorators\r\n  changeDetection: ChangeDetectionStrategy.Default,\r\n  animations: [matDialogAnimations.slideDialog],\r\n  host: {\r\n    'class': 'mat-dialog-container',\r\n    'tabindex': '-1',\r\n    '[attr.id]': '_id',\r\n    '[attr.role]': '_config?.role',\r\n    '[attr.aria-labelledby]': '_config?.ariaLabel ? null : _ariaLabelledBy',\r\n    '[attr.aria-label]': '_config?.ariaLabel',\r\n    '[attr.aria-describedby]': '_config?.ariaDescribedBy || null',\r\n    '[@slideDialog]': '_state',\r\n    '(@slideDialog.start)': '_onAnimationStart($event)',\r\n    '(@slideDialog.done)': '_onAnimationDone($event)',\r\n  },\r\n})\r\nexport class MatDialogContainer extends BasePortalOutlet {\r\n  /** The portal outlet inside of this container into which the dialog content will be loaded. */\r\n  @ViewChild(CdkPortalOutlet) _portalOutlet: CdkPortalOutlet;\r\n\r\n  /** The class that traps and manages focus within the dialog. */\r\n  private _focusTrap: FocusTrap;\r\n\r\n  /** Element that was focused before the dialog was opened. Save this to restore upon close. */\r\n  private _elementFocusedBeforeDialogWasOpened: HTMLElement | null = null;\r\n\r\n  /** The dialog configuration. */\r\n  _config: MatDialogConfig;\r\n\r\n  /** State of the dialog animation. */\r\n  _state: 'void' | 'enter' | 'exit' = 'enter';\r\n\r\n  /** Emits when an animation state changes. */\r\n  _animationStateChanged = new EventEmitter<AnimationEvent>();\r\n\r\n  /** ID of the element that should be considered as the dialog's label. */\r\n  _ariaLabelledBy: string | null = null;\r\n\r\n  /** ID for the container DOM element. */\r\n  _id: string;\r\n\r\n  constructor(\r\n    private _elementRef: ElementRef,\r\n    private _focusTrapFactory: FocusTrapFactory,\r\n    private _changeDetectorRef: ChangeDetectorRef,\r\n    @Optional() @Inject(DOCUMENT) private _document: any) {\r\n\r\n    super();\r\n  }\r\n\r\n  /**\r\n   * Attach a ComponentPortal as content to this dialog container.\r\n   * @param portal Portal to be attached as the dialog content.\r\n   */\r\n  attachComponentPortal<T>(portal: ComponentPortal<T>): ComponentRef<T> {\r\n    if (this._portalOutlet.hasAttached()) {\r\n      throwMatDialogContentAlreadyAttachedError();\r\n    }\r\n\r\n    this._savePreviouslyFocusedElement();\r\n    return this._portalOutlet.attachComponentPortal(portal);\r\n  }\r\n\r\n  /**\r\n   * Attach a TemplatePortal as content to this dialog container.\r\n   * @param portal Portal to be attached as the dialog content.\r\n   */\r\n  attachTemplatePortal<C>(portal: TemplatePortal<C>): EmbeddedViewRef<C> {\r\n    if (this._portalOutlet.hasAttached()) {\r\n      throwMatDialogContentAlreadyAttachedError();\r\n    }\r\n\r\n    this._savePreviouslyFocusedElement();\r\n    return this._portalOutlet.attachTemplatePortal(portal);\r\n  }\r\n\r\n  /** Moves the focus inside the focus trap. */\r\n  private _trapFocus() {\r\n    if (!this._focusTrap) {\r\n      this._focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement);\r\n    }\r\n\r\n    // If were to attempt to focus immediately, then the content of the dialog would not yet be\r\n    // ready in instances where change detection has to run first. To deal with this, we simply\r\n    // wait for the microtask queue to be empty.\r\n    if (this._config.autoFocus) {\r\n      this._focusTrap.focusInitialElementWhenReady();\r\n    }\r\n  }\r\n\r\n  /** Restores focus to the element that was focused before the dialog opened. */\r\n  private _restoreFocus() {\r\n    const toFocus = this._elementFocusedBeforeDialogWasOpened;\r\n\r\n    // We need the extra check, because IE can set the `activeElement` to null in some cases.\r\n    if (toFocus && typeof toFocus.focus === 'function') {\r\n      toFocus.focus();\r\n    }\r\n\r\n    if (this._focusTrap) {\r\n      this._focusTrap.destroy();\r\n    }\r\n  }\r\n\r\n  /** Saves a reference to the element that was focused before the dialog was opened. */\r\n  private _savePreviouslyFocusedElement() {\r\n    if (this._document) {\r\n      this._elementFocusedBeforeDialogWasOpened = this._document.activeElement as HTMLElement;\r\n\r\n      // Note that there is no focus method when rendering on the server.\r\n      if (this._elementRef.nativeElement.focus) {\r\n        // Move focus onto the dialog immediately in order to prevent the user from accidentally\r\n        // opening multiple dialogs at the same time. Needs to be async, because the element\r\n        // may not be focusable immediately.\r\n        Promise.resolve().then(() => this._elementRef.nativeElement.focus());\r\n      }\r\n    }\r\n  }\r\n\r\n  /** Callback, invoked whenever an animation on the host completes. */\r\n  _onAnimationDone(event: AnimationEvent) {\r\n    if (event.toState === 'enter') {\r\n      this._trapFocus();\r\n    } else if (event.toState === 'exit') {\r\n      this._restoreFocus();\r\n    }\r\n\r\n    this._animationStateChanged.emit(event);\r\n  }\r\n\r\n  /** Callback, invoked when an animation on the host starts. */\r\n  _onAnimationStart(event: AnimationEvent) {\r\n    this._animationStateChanged.emit(event);\r\n  }\r\n\r\n  /** Starts the dialog exit animation. */\r\n  _startExitAnimation(): void {\r\n    this._state = 'exit';\r\n\r\n    // Mark the container for check so it can react if the\r\n    // view container is using OnPush change detection.\r\n    this._changeDetectorRef.markForCheck();\r\n  }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\nimport {\r\n  animate,\r\n  state,\r\n  style,\r\n  transition,\r\n  trigger,\r\n  AnimationTriggerMetadata,\r\n} from '@angular/animations';\r\n\r\n/** Animations used by MatDialog. */\r\nexport const matDialogAnimations: {\r\n  readonly slideDialog: AnimationTriggerMetadata;\r\n} = {\r\n  /** Animation that slides the dialog in and out of view and fades the opacity. */\r\n  slideDialog: trigger('slideDialog', [\r\n    // Note: The `enter` animation doesn't transition to something like `translate3d(0, 0, 0)\r\n    // scale(1)`, because for some reason specifying the transform explicitly, causes IE both\r\n    // to blur the dialog content and decimate the animation performance. Leaving it as `none`\r\n    // solves both issues.\r\n    state('enter', style({ transform: 'none', opacity: 1 })),\r\n    state('void', style({ transform: 'translate3d(0, 25%, 0) scale(0.9)', opacity: 0 })),\r\n    state('exit', style({ transform: 'translate3d(0, 25%, 0)', opacity: 0 })),\r\n    transition('* => *', animate('400ms cubic-bezier(0.25, 0.8, 0.25, 1)')),\r\n  ])\r\n};\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {ViewContainerRef} from '@angular/core';\r\nimport {Direction} from '@angular/cdk/bidi';\r\nimport {ScrollStrategy} from '@angular/cdk/overlay';\r\n\r\n/** Valid ARIA roles for a dialog element. */\r\nexport type DialogRole = 'dialog' | 'alertdialog';\r\n\r\n/** Possible overrides for a dialog's position. */\r\nexport interface DialogPosition {\r\n  /** Override for the dialog's top position. */\r\n  top?: string;\r\n\r\n  /** Override for the dialog's bottom position. */\r\n  bottom?: string;\r\n\r\n  /** Override for the dialog's left position. */\r\n  left?: string;\r\n\r\n  /** Override for the dialog's right position. */\r\n  right?: string;\r\n}\r\n\r\n/**\r\n * Configuration for opening a modal dialog with the MatDialog service.\r\n */\r\nexport class MatDialogConfig<D = any> {\r\n\r\n  /**\r\n   * Where the attached component should live in Angular's *logical* component tree.\r\n   * This affects what is available for injection and the change detection order for the\r\n   * component instantiated inside of the dialog. This does not affect where the dialog\r\n   * content will be rendered.\r\n   */\r\n  viewContainerRef?: ViewContainerRef;\r\n\r\n  /** ID for the dialog. If omitted, a unique one will be generated. */\r\n  id?: string;\r\n\r\n  /** The ARIA role of the dialog element. */\r\n  role?: DialogRole = 'dialog';\r\n\r\n  /** Custom class for the overlay pane. */\r\n  panelClass?: string | string[] = '';\r\n\r\n  /** Whether the dialog has a backdrop. */\r\n  hasBackdrop?: boolean = true;\r\n\r\n  /** Custom class for the backdrop, */\r\n  backdropClass?: string = '';\r\n\r\n  /** Whether the user can use escape or clicking outside to close a modal. */\r\n  disableClose?: boolean = false;\r\n\r\n  /** Width of the dialog. */\r\n  width?: string = '';\r\n\r\n  /** Height of the dialog. */\r\n  height?: string = '';\r\n\r\n  /** Min-width of the dialog. If a number is provided, pixel units are assumed. */\r\n  minWidth?: number | string;\r\n\r\n  /** Min-height of the dialog. If a number is provided, pixel units are assumed. */\r\n  minHeight?: number | string;\r\n\r\n  /** Max-width of the dialog. If a number is provided, pixel units are assumed. Defaults to 80vw */\r\n  maxWidth?: number | string = '80vw';\r\n\r\n  /** Max-height of the dialog. If a number is provided, pixel units are assumed. */\r\n  maxHeight?: number | string;\r\n\r\n  /** Position overrides. */\r\n  position?: DialogPosition;\r\n\r\n  /** Data being injected into the child component. */\r\n  data?: D | null = null;\r\n\r\n  /** Layout direction for the dialog's content. */\r\n  direction?: Direction = 'ltr';\r\n\r\n  /** ID of the element that describes the dialog. */\r\n  ariaDescribedBy?: string | null = null;\r\n\r\n  /** Aria label to assign to the dialog element */\r\n  ariaLabel?: string | null = null;\r\n\r\n  /** Whether the dialog should focus the first focusable element on open. */\r\n  autoFocus?: boolean = true;\r\n\r\n  /** Scroll strategy to be used for the dialog. */\r\n  scrollStrategy?: ScrollStrategy;\r\n\r\n  /** Whether the dialog should close when the user goes backwards/forwards in history. */\r\n  closeOnNavigation?: boolean = true;\r\n\r\n  // TODO(jelbourn): add configuration for lifecycle hooks, ARIA labelling.\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {NgModule} from '@angular/core';\r\nimport {ErrorStateMatcher} from '@angular/material/core';\r\nimport {MatChipList} from './chip-list';\r\nimport {MatBasicChip, MatChip, MatChipRemove} from './chip';\r\nimport {MatChipInput} from './chip-input';\r\n\r\n\r\n@NgModule({\r\n  imports: [],\r\n  exports: [MatChipList, MatChip, MatChipInput, MatChipRemove, MatChipRemove, MatBasicChip],\r\n  declarations: [MatChipList, MatChip, MatChipInput, MatChipRemove,  MatChipRemove, MatBasicChip],\r\n  providers: [ErrorStateMatcher]\r\n})\r\nexport class MatChipsModule {}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\r\nimport {ENTER} from '@angular/cdk/keycodes';\r\nimport {Directive, ElementRef, EventEmitter, Input, Output} from '@angular/core';\r\nimport {MatChipList} from './chip-list';\r\n\r\n\r\n/** Represents an input event on a `matChipInput`. */\r\nexport interface MatChipInputEvent {\r\n  /** The native `<input>` element that the event is being fired for. */\r\n  input: HTMLInputElement;\r\n\r\n  /** The value of the input. */\r\n  value: string;\r\n}\r\n\r\n/**\r\n * Directive that adds chip-specific behaviors to an input element inside `<mat-form-field>`.\r\n * May be placed inside or outside of an `<mat-chip-list>`.\r\n */\r\n@Directive({\r\n  selector: 'input[matChipInputFor]',\r\n  exportAs: 'matChipInput, matChipInputFor',\r\n  host: {\r\n    'class': 'mat-chip-input mat-input-element',\r\n    '(keydown)': '_keydown($event)',\r\n    '(blur)': '_blur()',\r\n    '(focus)': '_focus()',\r\n    '(input)': '_onInput()',\r\n  }\r\n})\r\nexport class MatChipInput {\r\n  /** Whether the control is focused. */\r\n  focused: boolean = false;\r\n  _chipList: MatChipList;\r\n\r\n  /** Register input for chip list */\r\n  @Input('matChipInputFor')\r\n  set chipList(value: MatChipList) {\r\n    if (value) {\r\n      this._chipList = value;\r\n      this._chipList.registerInput(this);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Whether or not the chipEnd event will be emitted when the input is blurred.\r\n   */\r\n  @Input('matChipInputAddOnBlur')\r\n  get addOnBlur(): boolean { return this._addOnBlur; }\r\n  set addOnBlur(value: boolean) { this._addOnBlur = coerceBooleanProperty(value); }\r\n  _addOnBlur: boolean = false;\r\n\r\n  /**\r\n   * The list of key codes that will trigger a chipEnd event.\r\n   *\r\n   * Defaults to `[ENTER]`.\r\n   */\r\n  // TODO(tinayuangao): Support Set here\r\n  @Input('matChipInputSeparatorKeyCodes') separatorKeyCodes: number[] = [ENTER];\r\n\r\n  /** Emitted when a chip is to be added. */\r\n  @Output('matChipInputTokenEnd')\r\n  chipEnd: EventEmitter<MatChipInputEvent> = new EventEmitter<MatChipInputEvent>();\r\n\r\n  /** The input's placeholder text. */\r\n  @Input() placeholder: string = '';\r\n\r\n  /** Whether the input is empty. */\r\n  get empty(): boolean { return !this._inputElement.value; }\r\n\r\n  /** The native input element to which this directive is attached. */\r\n  protected _inputElement: HTMLInputElement;\r\n\r\n  constructor(protected _elementRef: ElementRef) {\r\n    this._inputElement = this._elementRef.nativeElement as HTMLInputElement;\r\n  }\r\n\r\n  /** Utility method to make host definition/tests more clear. */\r\n  _keydown(event?: KeyboardEvent) {\r\n    this._emitChipEnd(event);\r\n  }\r\n\r\n  /** Checks to see if the blur should emit the (chipEnd) event. */\r\n  _blur() {\r\n    if (this.addOnBlur) {\r\n      this._emitChipEnd();\r\n    }\r\n    this.focused = false;\r\n    // Blur the chip list if it is not focused\r\n    if (!this._chipList.focused) {\r\n      this._chipList._blur();\r\n    }\r\n    this._chipList.stateChanges.next();\r\n  }\r\n\r\n  _focus() {\r\n    this.focused = true;\r\n    this._chipList.stateChanges.next();\r\n  }\r\n\r\n  /** Checks to see if the (chipEnd) event needs to be emitted. */\r\n  _emitChipEnd(event?: KeyboardEvent) {\r\n    if (!this._inputElement.value && !!event) {\r\n      this._chipList._keydown(event);\r\n    }\r\n    if (!event || this.separatorKeyCodes.indexOf(event.keyCode) > -1) {\r\n      this.chipEnd.emit({ input: this._inputElement, value: this._inputElement.value });\r\n\r\n      if (event) {\r\n        event.preventDefault();\r\n      }\r\n    }\r\n  }\r\n\r\n  _onInput() {\r\n    // Let chip list know whenever the value changes.\r\n    this._chipList.stateChanges.next();\r\n  }\r\n\r\n  /** Focuses the input. */\r\n  focus(): void { this._inputElement.focus(); }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {FocusKeyManager} from '@angular/cdk/a11y';\r\nimport {Directionality} from '@angular/cdk/bidi';\r\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\r\nimport {SelectionModel} from '@angular/cdk/collections';\r\nimport {BACKSPACE} from '@angular/cdk/keycodes';\r\nimport {startWith} from 'rxjs/operators/startWith';\r\nimport {\r\n  AfterContentInit,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ContentChildren,\r\n  DoCheck,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Input,\r\n  OnDestroy,\r\n  OnInit,\r\n  Optional,\r\n  Output,\r\n  QueryList,\r\n  Self,\r\n  ViewEncapsulation,\r\n} from '@angular/core';\r\nimport {\r\n  ControlValueAccessor,\r\n  FormGroupDirective,\r\n  NgControl,\r\n  NgForm\r\n} from '@angular/forms';\r\nimport {ErrorStateMatcher, mixinErrorState, CanUpdateErrorState} from '@angular/material/core';\r\nimport {MatFormFieldControl} from '@angular/material/form-field';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport {merge} from 'rxjs/observable/merge';\r\nimport {Subscription} from 'rxjs/Subscription';\r\nimport {MatChip, MatChipEvent, MatChipSelectionChange} from './chip';\r\nimport {MatChipInput} from './chip-input';\r\n\r\n// Boilerplate for applying mixins to MatChipList.\r\n/** @docs-private */\r\nexport class MatChipListBase {\r\n  constructor(public _defaultErrorStateMatcher: ErrorStateMatcher,\r\n              public _parentForm: NgForm,\r\n              public _parentFormGroup: FormGroupDirective,\r\n              /** @docs-private */\r\n              public ngControl: NgControl) {}\r\n}\r\nexport const _MatChipListMixinBase = mixinErrorState(MatChipListBase);\r\n\r\n\r\n// Increasing integer for generating unique ids for chip-list components.\r\nlet nextUniqueId = 0;\r\n\r\n/** Change event object that is emitted when the chip list value has changed. */\r\nexport class MatChipListChange {\r\n  constructor(\r\n    /** Chip list that emitted the event. */\r\n    public source: MatChipList,\r\n    /** Value of the chip list when the event was emitted. */\r\n    public value: any) { }\r\n}\r\n\r\n\r\n/**\r\n * A material design chips component (named ChipList for it's similarity to the List component).\r\n */\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'mat-chip-list',\r\n  template: `<div class=\"mat-chip-list-wrapper\"><ng-content></ng-content></div>`,\r\n  exportAs: 'matChipList',\r\n  host: {\r\n    '[attr.tabindex]': '_tabIndex',\r\n    '[attr.aria-describedby]': '_ariaDescribedby || null',\r\n    '[attr.aria-required]': 'required.toString()',\r\n    '[attr.aria-disabled]': 'disabled.toString()',\r\n    '[attr.aria-invalid]': 'errorState',\r\n    '[attr.aria-multiselectable]': 'multiple',\r\n    '[attr.role]': 'role',\r\n    '[class.mat-chip-list-disabled]': 'disabled',\r\n    '[class.mat-chip-list-invalid]': 'errorState',\r\n    '[class.mat-chip-list-required]': 'required',\r\n    '[attr.aria-orientation]': 'ariaOrientation',\r\n    'class': 'mat-chip-list',\r\n    '(focus)': 'focus()',\r\n    '(blur)': '_blur()',\r\n    '(keydown)': '_keydown($event)'\r\n  },\r\n  providers: [{provide: MatFormFieldControl, useExisting: MatChipList}],\r\n  styleUrls: ['chips.css'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  preserveWhitespaces: false,\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class MatChipList extends _MatChipListMixinBase implements MatFormFieldControl<any>,\r\n  ControlValueAccessor, AfterContentInit, DoCheck, OnInit, OnDestroy, CanUpdateErrorState {\r\n  /**\r\n   * Implemented as part of MatFormFieldControl.\r\n   * @docs-private\r\n   */\r\n  readonly controlType: string = 'mat-chip-list';\r\n\r\n  /** When a chip is destroyed, we track the index so we can focus the appropriate next chip. */\r\n  protected _lastDestroyedIndex: number|null = null;\r\n\r\n  /** Track which chips we're listening to for focus/destruction. */\r\n  protected _chipSet: WeakMap<MatChip, boolean> = new WeakMap();\r\n\r\n  /** Subscription to tabbing out from the chip list. */\r\n  private _tabOutSubscription = Subscription.EMPTY;\r\n\r\n  /** Subscription to changes in the chip list. */\r\n  private _changeSubscription: Subscription;\r\n\r\n  /** Subscription to focus changes in the chips. */\r\n  private _chipFocusSubscription: Subscription | null;\r\n\r\n  /** Subscription to blur changes in the chips. */\r\n  private _chipBlurSubscription: Subscription | null;\r\n\r\n  /** Subscription to selection changes in chips. */\r\n  private _chipSelectionSubscription: Subscription | null;\r\n\r\n  /** Subscription to remove changes in chips. */\r\n  private _chipRemoveSubscription: Subscription | null;\r\n\r\n  /** The chip input to add more chips */\r\n  protected _chipInput: MatChipInput;\r\n\r\n  /** Uid of the chip list */\r\n  protected _uid: string = `mat-chip-list-${nextUniqueId++}`;\r\n\r\n  /** The aria-describedby attribute on the chip list for improved a11y. */\r\n  _ariaDescribedby: string;\r\n\r\n  /** Tab index for the chip list. */\r\n  _tabIndex = 0;\r\n\r\n  /**\r\n   * User defined tab index.\r\n   * When it is not null, use user defined tab index. Otherwise use _tabIndex\r\n   */\r\n  _userTabIndex: number | null = null;\r\n\r\n  /** The FocusKeyManager which handles focus. */\r\n  _keyManager: FocusKeyManager<MatChip>;\r\n\r\n  /** Function when touched */\r\n  _onTouched = () => {};\r\n\r\n  /** Function when changed */\r\n  _onChange: (value: any) => void = () => {};\r\n\r\n  _selectionModel: SelectionModel<MatChip>;\r\n\r\n  /** The array of selected chips inside chip list. */\r\n  get selected(): MatChip[] | MatChip {\r\n    return this.multiple ? this._selectionModel.selected : this._selectionModel.selected[0];\r\n  }\r\n\r\n  /** The ARIA role applied to the chip list. */\r\n  get role(): string | null { return this.empty ? null : 'listbox'; }\r\n\r\n  /** An object used to control when error messages are shown. */\r\n  @Input() errorStateMatcher: ErrorStateMatcher;\r\n\r\n  /** Whether the user should be allowed to select multiple chips. */\r\n  @Input()\r\n  get multiple(): boolean { return this._multiple; }\r\n  set multiple(value: boolean) {\r\n    this._multiple = coerceBooleanProperty(value);\r\n  }\r\n  private _multiple: boolean = false;\r\n\r\n  /**\r\n   * A function to compare the option values with the selected values. The first argument\r\n   * is a value from an option. The second is a value from the selection. A boolean\r\n   * should be returned.\r\n   */\r\n  @Input()\r\n  get compareWith(): (o1: any, o2: any) => boolean { return this._compareWith; }\r\n  set compareWith(fn: (o1: any, o2: any) => boolean) {\r\n    this._compareWith = fn;\r\n    if (this._selectionModel) {\r\n      // A different comparator means the selection could change.\r\n      this._initializeSelection();\r\n    }\r\n  }\r\n  private _compareWith = (o1: any, o2: any) => o1 === o2;\r\n\r\n  /**\r\n   * Implemented as part of MatFormFieldControl.\r\n   * @docs-private\r\n   */\r\n  @Input()\r\n  get value(): any { return this._value; }\r\n  set value(value: any) {\r\n    this.writeValue(value);\r\n    this._value = value;\r\n  }\r\n  protected _value: any;\r\n\r\n  /**\r\n   * Implemented as part of MatFormFieldControl.\r\n   * @docs-private\r\n   */\r\n  @Input()\r\n  get id(): string { return this._id || this._uid; }\r\n  set id(value: string) {\r\n    this._id = value;\r\n    this.stateChanges.next();\r\n  }\r\n  protected _id: string;\r\n\r\n  /**\r\n   * Implemented as part of MatFormFieldControl.\r\n   * @docs-private\r\n   */\r\n  @Input()\r\n  get required(): boolean { return this._required; }\r\n  set required(value: boolean) {\r\n    this._required = coerceBooleanProperty(value);\r\n    this.stateChanges.next();\r\n  }\r\n  protected _required: boolean = false;\r\n\r\n  /**\r\n   * Implemented as part of MatFormFieldControl.\r\n   * @docs-private\r\n   */\r\n  @Input()\r\n  get placeholder(): string {\r\n    return this._chipInput ? this._chipInput.placeholder : this._placeholder;\r\n  }\r\n  set placeholder(value: string) {\r\n    this._placeholder = value;\r\n    this.stateChanges.next();\r\n  }\r\n  protected _placeholder: string;\r\n\r\n  /** Whether any chips or the matChipInput inside of this chip-list has focus. */\r\n  get focused(): boolean {\r\n    return this.chips.some(chip => chip._hasFocus) ||\r\n      (this._chipInput && this._chipInput.focused);\r\n  }\r\n\r\n  /**\r\n   * Implemented as part of MatFormFieldControl.\r\n   * @docs-private\r\n   */\r\n  get empty(): boolean {\r\n    return (!this._chipInput || this._chipInput.empty) && this.chips.length === 0;\r\n  }\r\n\r\n  /**\r\n   * Implemented as part of MatFormFieldControl.\r\n   * @docs-private\r\n   */\r\n  get shouldLabelFloat(): boolean { return !this.empty || this.focused; }\r\n\r\n  /**\r\n   * Implemented as part of MatFormFieldControl.\r\n   * @docs-private\r\n   */\r\n  @Input()\r\n  get disabled(): boolean { return this.ngControl ? !!this.ngControl.disabled : this._disabled; }\r\n  set disabled(value: boolean) { this._disabled = coerceBooleanProperty(value); }\r\n  protected _disabled: boolean = false;\r\n\r\n  /** Orientation of the chip list. */\r\n  @Input('aria-orientation') ariaOrientation: 'horizontal' | 'vertical' = 'horizontal';\r\n\r\n  /**\r\n   * Whether or not this chip is selectable. When a chip is not selectable,\r\n   * its selected state is always ignored.\r\n   */\r\n  @Input()\r\n  get selectable(): boolean { return this._selectable; }\r\n  set selectable(value: boolean) { this._selectable = coerceBooleanProperty(value); }\r\n  protected _selectable: boolean = true;\r\n\r\n  @Input()\r\n  set tabIndex(value: number) {\r\n    this._userTabIndex = value;\r\n    this._tabIndex = value;\r\n  }\r\n\r\n  /** Combined stream of all of the child chips' selection change events. */\r\n  get chipSelectionChanges(): Observable<MatChipSelectionChange> {\r\n    return merge(...this.chips.map(chip => chip.selectionChange));\r\n  }\r\n\r\n  /** Combined stream of all of the child chips' focus change events. */\r\n  get chipFocusChanges(): Observable<MatChipEvent> {\r\n    return merge(...this.chips.map(chip => chip._onFocus));\r\n  }\r\n\r\n  /** Combined stream of all of the child chips' blur change events. */\r\n  get chipBlurChanges(): Observable<MatChipEvent> {\r\n    return merge(...this.chips.map(chip => chip._onBlur));\r\n  }\r\n\r\n  /** Combined stream of all of the child chips' remove change events. */\r\n  get chipRemoveChanges(): Observable<MatChipEvent> {\r\n    return merge(...this.chips.map(chip => chip.destroy));\r\n  }\r\n\r\n  /** Event emitted when the selected chip list value has been changed by the user. */\r\n  @Output() readonly change: EventEmitter<MatChipListChange> =\r\n      new EventEmitter<MatChipListChange>();\r\n\r\n  /**\r\n   * Event that emits whenever the raw value of the chip-list changes. This is here primarily\r\n   * to facilitate the two-way binding for the `value` input.\r\n   * @docs-private\r\n   */\r\n  @Output() readonly valueChange: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  /** The chip components contained within this chip list. */\r\n  @ContentChildren(MatChip) chips: QueryList<MatChip>;\r\n\r\n  constructor(protected _elementRef: ElementRef,\r\n              private _changeDetectorRef: ChangeDetectorRef,\r\n              @Optional() private _dir: Directionality,\r\n              @Optional() _parentForm: NgForm,\r\n              @Optional() _parentFormGroup: FormGroupDirective,\r\n              _defaultErrorStateMatcher: ErrorStateMatcher,\r\n              /** @docs-private */\r\n              @Optional() @Self() public ngControl: NgControl) {\r\n    super(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\r\n    if (this.ngControl) {\r\n      this.ngControl.valueAccessor = this;\r\n    }\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    this._keyManager = new FocusKeyManager<MatChip>(this.chips)\r\n      .withWrap()\r\n      .withVerticalOrientation()\r\n      .withHorizontalOrientation(this._dir ? this._dir.value : 'ltr');\r\n\r\n    // Prevents the chip list from capturing focus and redirecting\r\n    // it back to the first chip when the user tabs out.\r\n    this._tabOutSubscription = this._keyManager.tabOut.subscribe(() => {\r\n      this._tabIndex = -1;\r\n      setTimeout(() => this._tabIndex = this._userTabIndex || 0);\r\n    });\r\n\r\n    // When the list changes, re-subscribe\r\n    this._changeSubscription = this.chips.changes.pipe(startWith(null)).subscribe(() => {\r\n      this._resetChips();\r\n\r\n      // Reset chips selected/deselected status\r\n      this._initializeSelection();\r\n\r\n      // Check to see if we need to update our tab index\r\n      this._updateTabIndex();\r\n\r\n      // Check to see if we have a destroyed chip and need to refocus\r\n      this._updateFocusForDestroyedChips();\r\n\r\n      this.stateChanges.next();\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this._selectionModel = new SelectionModel<MatChip>(this.multiple, undefined, false);\r\n    this.stateChanges.next();\r\n  }\r\n\r\n  ngDoCheck() {\r\n    if (this.ngControl) {\r\n      // We need to re-evaluate this on every change detection cycle, because there are some\r\n      // error triggers that we can't subscribe to (e.g. parent form submissions). This means\r\n      // that whatever logic is in here has to be super lean or we risk destroying the performance.\r\n      this.updateErrorState();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this._tabOutSubscription.unsubscribe();\r\n\r\n    if (this._changeSubscription) {\r\n      this._changeSubscription.unsubscribe();\r\n    }\r\n\r\n    if (this._chipRemoveSubscription) {\r\n      this._chipRemoveSubscription.unsubscribe();\r\n    }\r\n\r\n    this._dropSubscriptions();\r\n    this.stateChanges.complete();\r\n  }\r\n\r\n\r\n  /** Associates an HTML input element with this chip list. */\r\n  registerInput(inputElement: MatChipInput): void {\r\n    this._chipInput = inputElement;\r\n  }\r\n\r\n  /**\r\n   * Implemented as part of MatFormFieldControl.\r\n   * @docs-private\r\n   */\r\n  setDescribedByIds(ids: string[]) { this._ariaDescribedby = ids.join(' '); }\r\n\r\n  // Implemented as part of ControlValueAccessor.\r\n  writeValue(value: any): void {\r\n    if (this.chips) {\r\n      this._setSelectionByValue(value, false);\r\n    }\r\n  }\r\n\r\n  // Implemented as part of ControlValueAccessor.\r\n  registerOnChange(fn: (value: any) => void): void {\r\n    this._onChange = fn;\r\n  }\r\n\r\n  // Implemented as part of ControlValueAccessor.\r\n  registerOnTouched(fn: () => void): void {\r\n    this._onTouched = fn;\r\n  }\r\n\r\n  // Implemented as part of ControlValueAccessor.\r\n  setDisabledState(isDisabled: boolean): void {\r\n    this.disabled = isDisabled;\r\n    this._elementRef.nativeElement.disabled = isDisabled;\r\n    this.stateChanges.next();\r\n  }\r\n\r\n  /**\r\n   * Implemented as part of MatFormFieldControl.\r\n   * @docs-private\r\n   */\r\n  onContainerClick() { this.focus(); }\r\n\r\n  /**\r\n   * Focuses the the first non-disabled chip in this chip list, or the associated input when there\r\n   * are no eligible chips.\r\n   */\r\n  focus(): void {\r\n    // TODO: ARIA says this should focus the first `selected` chip if any are selected.\r\n    // Focus on first element if there's no chipInput inside chip-list\r\n    if (this._chipInput && this._chipInput.focused) {\r\n      // do nothing\r\n    } else if (this.chips.length > 0) {\r\n      this._keyManager.setFirstItemActive();\r\n      this.stateChanges.next();\r\n    } else {\r\n      this._focusInput();\r\n      this.stateChanges.next();\r\n    }\r\n  }\r\n\r\n  /** Attempt to focus an input if we have one. */\r\n  _focusInput() {\r\n    if (this._chipInput) {\r\n      this._chipInput.focus();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Pass events to the keyboard manager. Available here for tests.\r\n   */\r\n  _keydown(event: KeyboardEvent) {\r\n    const target = event.target as HTMLElement;\r\n\r\n    // If they are on an empty input and hit backspace, focus the last chip\r\n    if (event.keyCode === BACKSPACE && this._isInputEmpty(target)) {\r\n      this._keyManager.setLastItemActive();\r\n      event.preventDefault();\r\n    } else if (target && target.classList.contains('mat-chip')) {\r\n      this._keyManager.onKeydown(event);\r\n      this.stateChanges.next();\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * Check the tab index as you should not be allowed to focus an empty list.\r\n   */\r\n  protected _updateTabIndex(): void {\r\n    // If we have 0 chips, we should not allow keyboard focus\r\n    this._tabIndex = this._userTabIndex || (this.chips.length === 0 ? -1 : 0);\r\n  }\r\n\r\n  /**\r\n   * Update key manager's active item when chip is deleted.\r\n   * If the deleted chip is the last chip in chip list, focus the new last chip.\r\n   * Otherwise focus the next chip in the list.\r\n   * Save `_lastDestroyedIndex` so we can set the correct focus.\r\n   */\r\n  protected _updateKeyManager(chip: MatChip) {\r\n    let chipIndex: number = this.chips.toArray().indexOf(chip);\r\n    if (this._isValidIndex(chipIndex)) {\r\n      if (chip._hasFocus) {\r\n        // Check whether the chip is not the last item\r\n        if (chipIndex < this.chips.length - 1) {\r\n          this._keyManager.setActiveItem(chipIndex);\r\n        } else if (chipIndex - 1 >= 0) {\r\n          this._keyManager.setActiveItem(chipIndex - 1);\r\n        }\r\n      }\r\n      if (this._keyManager.activeItemIndex === chipIndex) {\r\n        this._lastDestroyedIndex = chipIndex;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Checks to see if a focus chip was recently destroyed so that we can refocus the next closest\r\n   * one.\r\n   */\r\n  protected _updateFocusForDestroyedChips() {\r\n    let chipsArray = this.chips;\r\n\r\n    if (this._lastDestroyedIndex != null && chipsArray.length > 0) {\r\n      // Check whether the destroyed chip was the last item\r\n      const newFocusIndex = Math.min(this._lastDestroyedIndex, chipsArray.length - 1);\r\n      this._keyManager.setActiveItem(newFocusIndex);\r\n      let focusChip = this._keyManager.activeItem;\r\n      // Focus the chip\r\n      if (focusChip) {\r\n        focusChip.focus();\r\n      }\r\n    }\r\n\r\n    // Reset our destroyed index\r\n    this._lastDestroyedIndex = null;\r\n  }\r\n\r\n  /**\r\n   * Utility to ensure all indexes are valid.\r\n   *\r\n   * @param index The index to be checked.\r\n   * @returns True if the index is valid for our list of chips.\r\n   */\r\n  private _isValidIndex(index: number): boolean {\r\n    return index >= 0 && index < this.chips.length;\r\n  }\r\n\r\n  private _isInputEmpty(element: HTMLElement): boolean {\r\n    if (element && element.nodeName.toLowerCase() === 'input') {\r\n      let input = element as HTMLInputElement;\r\n      return !input.value;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  _setSelectionByValue(value: any, isUserInput: boolean = true) {\r\n    this._clearSelection();\r\n    this.chips.forEach(chip => chip.deselect());\r\n\r\n    if (Array.isArray(value)) {\r\n      value.forEach(currentValue => this._selectValue(currentValue, isUserInput));\r\n      this._sortValues();\r\n    } else {\r\n      const correspondingChip = this._selectValue(value, isUserInput);\r\n\r\n      // Shift focus to the active item. Note that we shouldn't do this in multiple\r\n      // mode, because we don't know what chip the user interacted with last.\r\n      if (correspondingChip) {\r\n        const correspondingChipIndex = this.chips.toArray().indexOf(correspondingChip);\r\n\r\n        if (isUserInput) {\r\n          this._keyManager.setActiveItem(correspondingChipIndex);\r\n        } else {\r\n          this._keyManager.updateActiveItemIndex(correspondingChipIndex);\r\n        }\r\n\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Finds and selects the chip based on its value.\r\n   * @returns Chip that has the corresponding value.\r\n   */\r\n  private _selectValue(value: any, isUserInput: boolean = true): MatChip | undefined {\r\n\r\n    const correspondingChip = this.chips.find(chip => {\r\n      return chip.value != null && this._compareWith(chip.value,  value);\r\n    });\r\n\r\n    if (correspondingChip) {\r\n      isUserInput ? correspondingChip.selectViaInteraction() : correspondingChip.select();\r\n      this._selectionModel.select(correspondingChip);\r\n    }\r\n\r\n    return correspondingChip;\r\n  }\r\n\r\n  private _initializeSelection(): void {\r\n    // Defer setting the value in order to avoid the \"Expression\r\n    // has changed after it was checked\" errors from Angular.\r\n    Promise.resolve().then(() => {\r\n      if (this.ngControl || this._value) {\r\n        this._setSelectionByValue(this.ngControl ? this.ngControl.value : this._value, false);\r\n        this.stateChanges.next();\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Deselects every chip in the list.\r\n   * @param skip Chip that should not be deselected.\r\n   */\r\n  private _clearSelection(skip?: MatChip): void {\r\n    this._selectionModel.clear();\r\n    this.chips.forEach(chip => {\r\n      if (chip !== skip) {\r\n        chip.deselect();\r\n      }\r\n    });\r\n    this.stateChanges.next();\r\n  }\r\n\r\n  /**\r\n   * Sorts the model values, ensuring that they keep the same\r\n   * order that they have in the panel.\r\n   */\r\n  private _sortValues(): void {\r\n    if (this._multiple) {\r\n      this._selectionModel.clear();\r\n\r\n      this.chips.forEach(chip => {\r\n        if (chip.selected) {\r\n          this._selectionModel.select(chip);\r\n        }\r\n      });\r\n      this.stateChanges.next();\r\n    }\r\n  }\r\n\r\n  /** Emits change event to set the model value. */\r\n  private _propagateChanges(fallbackValue?: any): void {\r\n    let valueToEmit: any = null;\r\n\r\n    if (Array.isArray(this.selected)) {\r\n      valueToEmit = this.selected.map(chip => chip.value);\r\n    } else {\r\n      valueToEmit = this.selected ? this.selected.value : fallbackValue;\r\n    }\r\n    this._value = valueToEmit;\r\n    this.change.emit(new MatChipListChange(this, valueToEmit));\r\n    this.valueChange.emit(valueToEmit);\r\n    this._onChange(valueToEmit);\r\n    this._changeDetectorRef.markForCheck();\r\n  }\r\n\r\n  /** When blurred, mark the field as touched when focus moved outside the chip list. */\r\n  _blur() {\r\n    if (!this.disabled) {\r\n      if (this._chipInput) {\r\n        // If there's a chip input, we should check whether the focus moved to chip input.\r\n        // If the focus is not moved to chip input, mark the field as touched. If the focus moved\r\n        // to chip input, do nothing.\r\n        // Timeout is needed to wait for the focus() event trigger on chip input.\r\n        setTimeout(() => {\r\n          if (!this.focused) {\r\n            this._markAsTouched();\r\n          }\r\n        });\r\n      } else {\r\n        // If there's no chip input, then mark the field as touched.\r\n        this._markAsTouched();\r\n      }\r\n    }\r\n  }\r\n\r\n  /** Mark the field as touched */\r\n  _markAsTouched() {\r\n    this._onTouched();\r\n    this._changeDetectorRef.markForCheck();\r\n    this.stateChanges.next();\r\n  }\r\n\r\n  private _resetChips() {\r\n    this._dropSubscriptions();\r\n    this._listenToChipsFocus();\r\n    this._listenToChipsSelection();\r\n    this._listenToChipsRemoved();\r\n  }\r\n\r\n\r\n  private _dropSubscriptions() {\r\n    if (this._chipFocusSubscription) {\r\n      this._chipFocusSubscription.unsubscribe();\r\n      this._chipFocusSubscription = null;\r\n    }\r\n\r\n    if (this._chipBlurSubscription) {\r\n      this._chipBlurSubscription.unsubscribe();\r\n      this._chipBlurSubscription = null;\r\n    }\r\n\r\n    if (this._chipSelectionSubscription) {\r\n      this._chipSelectionSubscription.unsubscribe();\r\n      this._chipSelectionSubscription = null;\r\n    }\r\n  }\r\n\r\n  /** Listens to user-generated selection events on each chip. */\r\n  private _listenToChipsSelection(): void {\r\n    this._chipSelectionSubscription = this.chipSelectionChanges.subscribe(event => {\r\n      event.source.selected\r\n        ? this._selectionModel.select(event.source)\r\n        : this._selectionModel.deselect(event.source);\r\n\r\n      // For single selection chip list, make sure the deselected value is unselected.\r\n      if (!this.multiple) {\r\n        this.chips.forEach(chip => {\r\n          if (!this._selectionModel.isSelected(chip) && chip.selected) {\r\n            chip.deselect();\r\n          }\r\n        });\r\n      }\r\n\r\n      if (event.isUserInput) {\r\n        this._propagateChanges();\r\n      }\r\n    });\r\n  }\r\n\r\n  /** Listens to user-generated selection events on each chip. */\r\n  private _listenToChipsFocus(): void {\r\n    this._chipFocusSubscription = this.chipFocusChanges.subscribe(event => {\r\n      let chipIndex: number = this.chips.toArray().indexOf(event.chip);\r\n\r\n      if (this._isValidIndex(chipIndex)) {\r\n        this._keyManager.updateActiveItemIndex(chipIndex);\r\n      }\r\n      this.stateChanges.next();\r\n    });\r\n\r\n    this._chipBlurSubscription = this.chipBlurChanges.subscribe(() => {\r\n      this._blur();\r\n      this.stateChanges.next();\r\n    });\r\n  }\r\n\r\n  private _listenToChipsRemoved(): void {\r\n    this._chipRemoveSubscription = this.chipRemoveChanges.subscribe(event => {\r\n      this._updateKeyManager(event.chip);\r\n    });\r\n  }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {FocusableOption} from '@angular/cdk/a11y';\r\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\r\nimport {BACKSPACE, DELETE, SPACE} from '@angular/cdk/keycodes';\r\nimport {\r\n  Directive,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Input,\r\n  OnDestroy,\r\n  Output,\r\n} from '@angular/core';\r\nimport {CanColor, CanDisable, mixinColor, mixinDisabled} from '@angular/material/core';\r\nimport {Subject} from 'rxjs/Subject';\r\n\r\n\r\n/** Represents an event fired on an individual `mat-chip`. */\r\nexport interface MatChipEvent {\r\n  /** The chip the event was fired on. */\r\n  chip: MatChip;\r\n}\r\n\r\n/** Event object emitted by MatChip when selected or deselected. */\r\nexport class MatChipSelectionChange {\r\n  constructor(\r\n    /** Reference to the chip that emitted the event. */\r\n    public source: MatChip,\r\n    /** Whether the chip that emitted the event is selected. */\r\n    public selected: boolean,\r\n    /** Whether the selection change was a result of a user interaction. */\r\n    public isUserInput = false) { }\r\n}\r\n\r\n\r\n// Boilerplate for applying mixins to MatChip.\r\n/** @docs-private */\r\nexport class MatChipBase {\r\n  constructor(public _elementRef: ElementRef) {}\r\n}\r\n\r\nexport const _MatChipMixinBase = mixinColor(mixinDisabled(MatChipBase), 'primary');\r\n\r\n\r\n/**\r\n * Dummy directive to add CSS class to basic chips.\r\n * @docs-private\r\n */\r\n@Directive({\r\n  selector: `mat-basic-chip, [mat-basic-chip]`,\r\n  host: {'class': 'mat-basic-chip'},\r\n})\r\nexport class MatBasicChip {\r\n}\r\n\r\n/**\r\n * Material design styled Chip component. Used inside the MatChipList component.\r\n */\r\n@Directive({\r\n  selector: `mat-basic-chip, [mat-basic-chip], mat-chip, [mat-chip]`,\r\n  inputs: ['color', 'disabled'],\r\n  exportAs: 'matChip',\r\n  host: {\r\n    'class': 'mat-chip',\r\n    '[attr.tabindex]': 'disabled ? null : -1',\r\n    'role': 'option',\r\n    '[class.mat-chip-selected]': 'selected',\r\n    '[attr.disabled]': 'disabled || null',\r\n    '[attr.aria-disabled]': 'disabled.toString()',\r\n    '[attr.aria-selected]': 'ariaSelected',\r\n    '(click)': '_handleClick($event)',\r\n    '(keydown)': '_handleKeydown($event)',\r\n    '(focus)': '_hasFocus = true',\r\n    '(blur)': '_blur()',\r\n  },\r\n\r\n})\r\nexport class MatChip extends _MatChipMixinBase implements FocusableOption, OnDestroy, CanColor,\r\n    CanDisable {\r\n  /** Whether the chip has focus. */\r\n  _hasFocus: boolean = false;\r\n\r\n  /** Whether the chip is selected. */\r\n  @Input()\r\n  get selected(): boolean { return this._selected; }\r\n  set selected(value: boolean) {\r\n    this._selected = coerceBooleanProperty(value);\r\n    this.selectionChange.emit({\r\n      source: this,\r\n      isUserInput: false,\r\n      selected: value\r\n    });\r\n  }\r\n  protected _selected: boolean = false;\r\n\r\n  /** The value of the chip. Defaults to the content inside `<mat-chip>` tags. */\r\n  @Input()\r\n  get value(): any {\r\n    return this._value != undefined\r\n      ? this._value\r\n      : this._elementRef.nativeElement.textContent;\r\n  }\r\n  set value(value: any) { this._value = value; }\r\n  protected _value: any;\r\n\r\n  /**\r\n   * Whether or not the chips are selectable. When a chip is not selectable,\r\n   * changes to it's selected state are always ignored.\r\n   */\r\n  @Input()\r\n  get selectable(): boolean { return this._selectable; }\r\n  set selectable(value: boolean) {\r\n    this._selectable = coerceBooleanProperty(value);\r\n  }\r\n  protected _selectable: boolean = true;\r\n\r\n  /**\r\n   * Determines whether or not the chip displays the remove styling and emits (remove) events.\r\n   */\r\n  @Input()\r\n  get removable(): boolean { return this._removable; }\r\n  set removable(value: boolean) {\r\n    this._removable = coerceBooleanProperty(value);\r\n  }\r\n  protected _removable: boolean = true;\r\n\r\n  /** Emits when the chip is focused. */\r\n  readonly _onFocus = new Subject<MatChipEvent>();\r\n\r\n  /** Emits when the chip is blured. */\r\n  readonly _onBlur = new Subject<MatChipEvent>();\r\n\r\n  /** Emitted when the chip is selected or deselected. */\r\n  @Output() readonly selectionChange: EventEmitter<MatChipSelectionChange> =\r\n      new EventEmitter<MatChipSelectionChange>();\r\n\r\n  /** Emitted when the chip is destroyed. */\r\n  @Output() readonly destroyed: EventEmitter<MatChipEvent> = new EventEmitter<MatChipEvent>();\r\n\r\n  /**\r\n   * Emitted when the chip is destroyed.\r\n   * @deprecated Use 'destroyed' instead.\r\n   * @deletion-target 6.0.0\r\n   */\r\n  @Output() readonly destroy: EventEmitter<MatChipEvent> = this.destroyed;\r\n\r\n  /** Emitted when a chip is to be removed. */\r\n  @Output() readonly removed: EventEmitter<MatChipEvent> = new EventEmitter<MatChipEvent>();\r\n\r\n  /**\r\n   * Emitted when a chip is to be removed.\r\n   * @deprecated Use `removed` instead.\r\n   * @deletion-target 6.0.0\r\n   */\r\n  @Output('remove') onRemove: EventEmitter<MatChipEvent> = this.removed;\r\n\r\n  /** The ARIA selected applied to the chip. */\r\n  get ariaSelected(): string | null {\r\n    return this.selectable ? this.selected.toString() : null;\r\n  }\r\n\r\n  constructor(public _elementRef: ElementRef) {\r\n    super(_elementRef);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.destroyed.emit({chip: this});\r\n  }\r\n\r\n  /** Selects the chip. */\r\n  select(): void {\r\n    this._selected = true;\r\n    this.selectionChange.emit({\r\n      source: this,\r\n      isUserInput: false,\r\n      selected: true\r\n    });\r\n  }\r\n\r\n  /** Deselects the chip. */\r\n  deselect(): void {\r\n    this._selected = false;\r\n    this.selectionChange.emit({\r\n      source: this,\r\n      isUserInput: false,\r\n      selected: false\r\n    });\r\n  }\r\n\r\n  /** Select this chip and emit selected event */\r\n  selectViaInteraction(): void {\r\n    this._selected = true;\r\n    // Emit select event when selected changes.\r\n    this.selectionChange.emit({\r\n      source: this,\r\n      isUserInput: true,\r\n      selected: true\r\n    });\r\n  }\r\n\r\n  /** Toggles the current selected state of this chip. */\r\n  toggleSelected(isUserInput: boolean = false): boolean {\r\n    this._selected = !this.selected;\r\n\r\n    this.selectionChange.emit({\r\n      source: this,\r\n      isUserInput,\r\n      selected: this._selected\r\n    });\r\n\r\n    return this.selected;\r\n  }\r\n\r\n  /** Allows for programmatic focusing of the chip. */\r\n  focus(): void {\r\n    this._elementRef.nativeElement.focus();\r\n    this._onFocus.next({chip: this});\r\n  }\r\n\r\n  /**\r\n   * Allows for programmatic removal of the chip. Called by the MatChipList when the DELETE or\r\n   * BACKSPACE keys are pressed.\r\n   *\r\n   * Informs any listeners of the removal request. Does not remove the chip from the DOM.\r\n   */\r\n  remove(): void {\r\n    if (this.removable) {\r\n      this.removed.emit({chip: this});\r\n    }\r\n  }\r\n\r\n  /** Ensures events fire properly upon click. */\r\n  _handleClick(event: Event) {\r\n    // Check disabled\r\n    if (this.disabled) {\r\n      return;\r\n    }\r\n\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n\r\n    this.focus();\r\n  }\r\n\r\n  /** Handle custom key presses. */\r\n  _handleKeydown(event: KeyboardEvent): void {\r\n    if (this.disabled) {\r\n      return;\r\n    }\r\n\r\n    switch (event.keyCode) {\r\n      case DELETE:\r\n      case BACKSPACE:\r\n        // If we are removable, remove the focused chip\r\n        this.remove();\r\n        // Always prevent so page navigation does not occur\r\n        event.preventDefault();\r\n        break;\r\n      case SPACE:\r\n        // If we are selectable, toggle the focused chip\r\n        if (this.selectable) {\r\n          this.toggleSelected(true);\r\n        }\r\n\r\n        // Always prevent space from scrolling the page since the list has focus\r\n        event.preventDefault();\r\n        break;\r\n    }\r\n  }\r\n\r\n  _blur(): void {\r\n    this._hasFocus = false;\r\n    this._onBlur.next({chip: this});\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * Applies proper (click) support and adds styling for use with the Material Design \"cancel\" icon\r\n * available at https://material.io/icons/#ic_cancel.\r\n *\r\n * Example:\r\n *\r\n *     `<mat-chip>\r\n *       <mat-icon matChipRemove>cancel</mat-icon>\r\n *     </mat-chip>`\r\n *\r\n * You *may* use a custom icon, but you may need to override the `mat-chip-remove` positioning\r\n * styles to properly center the icon within the chip.\r\n */\r\n@Directive({\r\n  selector: '[matChipRemove]',\r\n  host: {\r\n    'class': 'mat-chip-remove',\r\n    '(click)': '_handleClick()',\r\n  }\r\n})\r\nexport class MatChipRemove {\r\n  constructor(protected _parentChip: MatChip) {\r\n  }\r\n\r\n  /** Calls the parent chip's public `remove()` method if applicable. */\r\n  _handleClick(): void {\r\n    if (this._parentChip.removable) {\r\n      this._parentChip.remove();\r\n    }\r\n  }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {ObserversModule} from '@angular/cdk/observers';\r\nimport {MatRippleModule, MatCommonModule} from '@angular/material/core';\r\nimport {MatCheckbox} from './checkbox';\r\nimport {MatCheckboxRequiredValidator} from './checkbox-required-validator';\r\nimport {A11yModule} from '@angular/cdk/a11y';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, MatRippleModule, MatCommonModule, ObserversModule, A11yModule],\r\n  exports: [MatCheckbox, MatCheckboxRequiredValidator, MatCommonModule],\r\n  declarations: [MatCheckbox, MatCheckboxRequiredValidator],\r\n})\r\nexport class MatCheckboxModule {}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {\r\n  Directive,\r\n  forwardRef,\r\n  Provider,\r\n} from '@angular/core';\r\nimport {\r\n  CheckboxRequiredValidator,\r\n  NG_VALIDATORS,\r\n} from '@angular/forms';\r\n\r\nexport const MAT_CHECKBOX_REQUIRED_VALIDATOR: Provider = {\r\n  provide: NG_VALIDATORS,\r\n  useExisting: forwardRef(() => MatCheckboxRequiredValidator),\r\n  multi: true\r\n};\r\n\r\n/**\r\n * Validator for Material checkbox's required attribute in template-driven checkbox.\r\n * Current CheckboxRequiredValidator only work with `input type=checkbox` and does not\r\n * work with `mat-checkbox`.\r\n */\r\n@Directive({\r\n  selector: `mat-checkbox[required][formControlName],\r\n             mat-checkbox[required][formControl], mat-checkbox[required][ngModel]`,\r\n  providers: [MAT_CHECKBOX_REQUIRED_VALIDATOR],\r\n  host: {'[attr.required]': 'required ? \"\" : null'}\r\n})\r\nexport class MatCheckboxRequiredValidator extends CheckboxRequiredValidator {}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {FocusMonitor, FocusOrigin} from '@angular/cdk/a11y';\r\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\r\nimport {\r\n  AfterViewInit,\r\n  Attribute,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ElementRef,\r\n  EventEmitter,\r\n  forwardRef,\r\n  Inject,\r\n  Input,\r\n  OnDestroy,\r\n  Optional,\r\n  Output,\r\n  ViewChild,\r\n  ViewEncapsulation,\r\n} from '@angular/core';\r\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\r\nimport {\r\n  CanColor,\r\n  CanDisable,\r\n  CanDisableRipple,\r\n  HasTabIndex,\r\n  MatRipple,\r\n  mixinColor,\r\n  mixinDisabled,\r\n  mixinDisableRipple,\r\n  mixinTabIndex,\r\n  RippleRef,\r\n} from '@angular/material/core';\r\nimport {MAT_CHECKBOX_CLICK_ACTION, MatCheckboxClickAction} from './checkbox-config';\r\n\r\n\r\n// Increasing integer for generating unique ids for checkbox components.\r\nlet nextUniqueId = 0;\r\n\r\n/**\r\n * Provider Expression that allows mat-checkbox to register as a ControlValueAccessor.\r\n * This allows it to support [(ngModel)].\r\n * @docs-private\r\n */\r\nexport const MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR: any = {\r\n  provide: NG_VALUE_ACCESSOR,\r\n  useExisting: forwardRef(() => MatCheckbox),\r\n  multi: true\r\n};\r\n\r\n/**\r\n * Represents the different states that require custom transitions between them.\r\n * @docs-private\r\n */\r\nexport enum TransitionCheckState {\r\n  /** The initial state of the component before any user interaction. */\r\n  Init,\r\n  /** The state representing the component when it's becoming checked. */\r\n  Checked,\r\n  /** The state representing the component when it's becoming unchecked. */\r\n  Unchecked,\r\n  /** The state representing the component when it's becoming indeterminate. */\r\n  Indeterminate\r\n}\r\n\r\n/** Change event object emitted by MatCheckbox. */\r\nexport class MatCheckboxChange {\r\n  /** The source MatCheckbox of the event. */\r\n  source: MatCheckbox;\r\n  /** The new `checked` value of the checkbox. */\r\n  checked: boolean;\r\n}\r\n\r\n// Boilerplate for applying mixins to MatCheckbox.\r\n/** @docs-private */\r\nexport class MatCheckboxBase {\r\n  constructor(public _elementRef: ElementRef) {}\r\n}\r\nexport const _MatCheckboxMixinBase =\r\n  mixinTabIndex(mixinColor(mixinDisableRipple(mixinDisabled(MatCheckboxBase)), 'accent'));\r\n\r\n\r\n/**\r\n * A material design checkbox component. Supports all of the functionality of an HTML5 checkbox,\r\n * and exposes a similar API. A MatCheckbox can be either checked, unchecked, indeterminate, or\r\n * disabled. Note that all additional accessibility attributes are taken care of by the component,\r\n * so there is no need to provide them yourself. However, if you want to omit a label and still\r\n * have the checkbox be accessible, you may supply an [aria-label] input.\r\n * See: https://www.google.com/design/spec/components/selection-controls.html\r\n */\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'mat-checkbox',\r\n  templateUrl: 'checkbox.html',\r\n  styleUrls: ['checkbox.css'],\r\n  exportAs: 'matCheckbox',\r\n  host: {\r\n    'class': 'mat-checkbox',\r\n    '[id]': 'id',\r\n    '[class.mat-checkbox-indeterminate]': 'indeterminate',\r\n    '[class.mat-checkbox-checked]': 'checked',\r\n    '[class.mat-checkbox-disabled]': 'disabled',\r\n    '[class.mat-checkbox-label-before]': 'labelPosition == \"before\"',\r\n  },\r\n  providers: [MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR],\r\n  inputs: ['disabled', 'disableRipple', 'color', 'tabIndex'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  preserveWhitespaces: false,\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class MatCheckbox extends _MatCheckboxMixinBase implements ControlValueAccessor,\r\n    AfterViewInit, OnDestroy, CanColor, CanDisable, HasTabIndex, CanDisableRipple {\r\n\r\n  /**\r\n   * Attached to the aria-label attribute of the host element. In most cases, arial-labelledby will\r\n   * take precedence so this may be omitted.\r\n   */\r\n  @Input('aria-label') ariaLabel: string = '';\r\n\r\n  /**\r\n   * Users can specify the `aria-labelledby` attribute which will be forwarded to the input element\r\n   */\r\n  @Input('aria-labelledby') ariaLabelledby: string | null = null;\r\n\r\n  private _uniqueId: string = `mat-checkbox-${++nextUniqueId}`;\r\n\r\n  /** A unique id for the checkbox input. If none is supplied, it will be auto-generated. */\r\n  @Input() id: string = this._uniqueId;\r\n\r\n  /** Returns the unique id for the visual hidden input. */\r\n  get inputId(): string { return `${this.id || this._uniqueId}-input`; }\r\n\r\n  /** Whether the checkbox is required. */\r\n  @Input()\r\n  get required(): boolean { return this._required; }\r\n  set required(value: boolean) { this._required = coerceBooleanProperty(value); }\r\n  private _required: boolean;\r\n\r\n  /**\r\n   * Whether or not the checkbox should appear before or after the label.\r\n   * @deprecated\r\n   * @deletion-target 6.0.0\r\n   */\r\n  @Input()\r\n  get align(): 'start' | 'end' {\r\n    // align refers to the checkbox relative to the label, while labelPosition refers to the\r\n    // label relative to the checkbox. As such, they are inverted.\r\n    return this.labelPosition == 'after' ? 'start' : 'end';\r\n  }\r\n  set align(value: 'start' | 'end') {\r\n    this.labelPosition = (value == 'start') ? 'after' : 'before';\r\n  }\r\n\r\n  /** Whether the label should appear after or before the checkbox. Defaults to 'after' */\r\n  @Input() labelPosition: 'before' | 'after' = 'after';\r\n\r\n  /** Name value will be applied to the input element if present */\r\n  @Input() name: string | null = null;\r\n\r\n  /** Event emitted when the checkbox's `checked` value changes. */\r\n  @Output() readonly change: EventEmitter<MatCheckboxChange> =\r\n      new EventEmitter<MatCheckboxChange>();\r\n\r\n  /** Event emitted when the checkbox's `indeterminate` value changes. */\r\n  @Output() readonly indeterminateChange: EventEmitter<boolean> = new EventEmitter<boolean>();\r\n\r\n  /** The value attribute of the native input element */\r\n  @Input() value: string;\r\n\r\n  /** The native `<input type=\"checkbox\">` element */\r\n  @ViewChild('input') _inputElement: ElementRef;\r\n\r\n  /** Reference to the ripple instance of the checkbox. */\r\n  @ViewChild(MatRipple) ripple: MatRipple;\r\n\r\n  /**\r\n   * Called when the checkbox is blurred. Needed to properly implement ControlValueAccessor.\r\n   * @docs-private\r\n   */\r\n  _onTouched: () => any = () => {};\r\n\r\n  private _currentAnimationClass: string = '';\r\n\r\n  private _currentCheckState: TransitionCheckState = TransitionCheckState.Init;\r\n\r\n  private _controlValueAccessorChangeFn: (value: any) => void = () => {};\r\n\r\n  /** Reference to the focused state ripple. */\r\n  private _focusRipple: RippleRef | null;\r\n\r\n  constructor(elementRef: ElementRef,\r\n              private _changeDetectorRef: ChangeDetectorRef,\r\n              private _focusMonitor: FocusMonitor,\r\n              @Attribute('tabindex') tabIndex: string,\r\n              @Optional() @Inject(MAT_CHECKBOX_CLICK_ACTION)\r\n                  private _clickAction: MatCheckboxClickAction) {\r\n    super(elementRef);\r\n\r\n    this.tabIndex = parseInt(tabIndex) || 0;\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this._focusMonitor\r\n      .monitor(this._inputElement.nativeElement)\r\n      .subscribe(focusOrigin => this._onInputFocusChange(focusOrigin));\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this._focusMonitor.stopMonitoring(this._inputElement.nativeElement);\r\n  }\r\n\r\n  /**\r\n   * Whether the checkbox is checked.\r\n   */\r\n  @Input()\r\n  get checked(): boolean { return this._checked; }\r\n  set checked(value: boolean) {\r\n    if (value != this.checked) {\r\n      this._checked = value;\r\n      this._changeDetectorRef.markForCheck();\r\n    }\r\n  }\r\n  private _checked: boolean = false;\r\n\r\n  /**\r\n   * Whether the checkbox is indeterminate. This is also known as \"mixed\" mode and can be used to\r\n   * represent a checkbox with three states, e.g. a checkbox that represents a nested list of\r\n   * checkable items. Note that whenever checkbox is manually clicked, indeterminate is immediately\r\n   * set to false.\r\n   */\r\n  @Input()\r\n  get indeterminate(): boolean { return this._indeterminate; }\r\n  set indeterminate(value: boolean) {\r\n    const changed = value != this._indeterminate;\r\n    this._indeterminate = value;\r\n\r\n    if (changed) {\r\n      if (this._indeterminate) {\r\n        this._transitionCheckState(TransitionCheckState.Indeterminate);\r\n      } else {\r\n        this._transitionCheckState(\r\n          this.checked ? TransitionCheckState.Checked : TransitionCheckState.Unchecked);\r\n      }\r\n      this.indeterminateChange.emit(this._indeterminate);\r\n    }\r\n  }\r\n  private _indeterminate: boolean = false;\r\n\r\n  _isRippleDisabled() {\r\n    return this.disableRipple || this.disabled;\r\n  }\r\n\r\n  /** Method being called whenever the label text changes. */\r\n  _onLabelTextChange() {\r\n    // This method is getting called whenever the label of the checkbox changes.\r\n    // Since the checkbox uses the OnPush strategy we need to notify it about the change\r\n    // that has been recognized by the cdkObserveContent directive.\r\n    this._changeDetectorRef.markForCheck();\r\n  }\r\n\r\n  // Implemented as part of ControlValueAccessor.\r\n  writeValue(value: any) {\r\n    this.checked = !!value;\r\n  }\r\n\r\n  // Implemented as part of ControlValueAccessor.\r\n  registerOnChange(fn: (value: any) => void) {\r\n    this._controlValueAccessorChangeFn = fn;\r\n  }\r\n\r\n  // Implemented as part of ControlValueAccessor.\r\n  registerOnTouched(fn: any) {\r\n    this._onTouched = fn;\r\n  }\r\n\r\n  // Implemented as part of ControlValueAccessor.\r\n  setDisabledState(isDisabled: boolean) {\r\n    this.disabled = isDisabled;\r\n    this._changeDetectorRef.markForCheck();\r\n  }\r\n\r\n  _getAriaChecked(): 'true' | 'false' | 'mixed' {\r\n    return this.checked ? 'true' : (this.indeterminate ? 'mixed' : 'false');\r\n  }\r\n\r\n  private _transitionCheckState(newState: TransitionCheckState) {\r\n    let oldState = this._currentCheckState;\r\n    let element: HTMLElement = this._elementRef.nativeElement;\r\n\r\n    if (oldState === newState) {\r\n      return;\r\n    }\r\n    if (this._currentAnimationClass.length > 0) {\r\n      element.classList.remove(this._currentAnimationClass);\r\n    }\r\n\r\n    this._currentAnimationClass = this._getAnimationClassForCheckStateTransition(\r\n        oldState, newState);\r\n    this._currentCheckState = newState;\r\n\r\n    if (this._currentAnimationClass.length > 0) {\r\n      element.classList.add(this._currentAnimationClass);\r\n    }\r\n  }\r\n\r\n  private _emitChangeEvent() {\r\n    let event = new MatCheckboxChange();\r\n    event.source = this;\r\n    event.checked = this.checked;\r\n\r\n    this._controlValueAccessorChangeFn(this.checked);\r\n    this.change.emit(event);\r\n  }\r\n\r\n  /** Function is called whenever the focus changes for the input element. */\r\n  private _onInputFocusChange(focusOrigin: FocusOrigin) {\r\n    if (!this._focusRipple && focusOrigin === 'keyboard') {\r\n      this._focusRipple = this.ripple.launch(0, 0, {persistent: true});\r\n    } else if (!focusOrigin) {\r\n      this._removeFocusRipple();\r\n      this._onTouched();\r\n    }\r\n  }\r\n\r\n  /** Toggles the `checked` state of the checkbox. */\r\n  toggle(): void {\r\n    this.checked = !this.checked;\r\n  }\r\n\r\n  /**\r\n   * Event handler for checkbox input element.\r\n   * Toggles checked state if element is not disabled.\r\n   * Do not toggle on (change) event since IE doesn't fire change event when\r\n   *   indeterminate checkbox is clicked.\r\n   * @param event\r\n   */\r\n  _onInputClick(event: Event) {\r\n    // We have to stop propagation for click events on the visual hidden input element.\r\n    // By default, when a user clicks on a label element, a generated click event will be\r\n    // dispatched on the associated input element. Since we are using a label element as our\r\n    // root container, the click event on the `checkbox` will be executed twice.\r\n    // The real click event will bubble up, and the generated click event also tries to bubble up.\r\n    // This will lead to multiple click events.\r\n    // Preventing bubbling for the second event will solve that issue.\r\n    event.stopPropagation();\r\n\r\n    // If resetIndeterminate is false, and the current state is indeterminate, do nothing on click\r\n    if (!this.disabled && this._clickAction !== 'noop') {\r\n      // When user manually click on the checkbox, `indeterminate` is set to false.\r\n      if (this.indeterminate && this._clickAction !== 'check') {\r\n\r\n        Promise.resolve().then(() => {\r\n          this._indeterminate = false;\r\n          this.indeterminateChange.emit(this._indeterminate);\r\n        });\r\n      }\r\n\r\n      this.toggle();\r\n      this._transitionCheckState(\r\n          this._checked ? TransitionCheckState.Checked : TransitionCheckState.Unchecked);\r\n\r\n      // Emit our custom change event if the native input emitted one.\r\n      // It is important to only emit it, if the native input triggered one, because\r\n      // we don't want to trigger a change event, when the `checked` variable changes for example.\r\n      this._emitChangeEvent();\r\n    } else if (!this.disabled && this._clickAction === 'noop') {\r\n      // Reset native input when clicked with noop. The native checkbox becomes checked after\r\n      // click, reset it to be align with `checked` value of `mat-checkbox`.\r\n      this._inputElement.nativeElement.checked = this.checked;\r\n      this._inputElement.nativeElement.indeterminate = this.indeterminate;\r\n    }\r\n  }\r\n\r\n  /** Focuses the checkbox. */\r\n  focus(): void {\r\n    this._focusMonitor.focusVia(this._inputElement.nativeElement, 'keyboard');\r\n  }\r\n\r\n  _onInteractionEvent(event: Event) {\r\n    // We always have to stop propagation on the change event.\r\n    // Otherwise the change event, from the input element, will bubble up and\r\n    // emit its event object to the `change` output.\r\n    event.stopPropagation();\r\n  }\r\n\r\n  private _getAnimationClassForCheckStateTransition(\r\n      oldState: TransitionCheckState, newState: TransitionCheckState): string {\r\n    let animSuffix: string = '';\r\n\r\n    switch (oldState) {\r\n      case TransitionCheckState.Init:\r\n        // Handle edge case where user interacts with checkbox that does not have [(ngModel)] or\r\n        // [checked] bound to it.\r\n        if (newState === TransitionCheckState.Checked) {\r\n          animSuffix = 'unchecked-checked';\r\n        } else if (newState == TransitionCheckState.Indeterminate) {\r\n          animSuffix = 'unchecked-indeterminate';\r\n        } else {\r\n          return '';\r\n        }\r\n        break;\r\n      case TransitionCheckState.Unchecked:\r\n        animSuffix = newState === TransitionCheckState.Checked ?\r\n            'unchecked-checked' : 'unchecked-indeterminate';\r\n        break;\r\n      case TransitionCheckState.Checked:\r\n        animSuffix = newState === TransitionCheckState.Unchecked ?\r\n            'checked-unchecked' : 'checked-indeterminate';\r\n        break;\r\n      case TransitionCheckState.Indeterminate:\r\n        animSuffix = newState === TransitionCheckState.Checked ?\r\n            'indeterminate-checked' : 'indeterminate-unchecked';\r\n        break;\r\n    }\r\n\r\n    return `mat-checkbox-anim-${animSuffix}`;\r\n  }\r\n\r\n  /** Fades out the focus state ripple. */\r\n  private _removeFocusRipple(): void {\r\n    if (this._focusRipple) {\r\n      this._focusRipple.fadeOut();\r\n      this._focusRipple = null;\r\n    }\r\n  }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\nimport {InjectionToken} from '@angular/core';\r\n\r\n\r\n/**\r\n * Checkbox click action when user click on input element.\r\n * noop: Do not toggle checked or indeterminate.\r\n * check: Only toggle checked status, ignore indeterminate.\r\n * check-indeterminate: Toggle checked status, set indeterminate to false. Default behavior.\r\n * undefined: Same as `check-indeterminate`.\r\n */\r\nexport type MatCheckboxClickAction = 'noop' | 'check' | 'check-indeterminate' | undefined;\r\n\r\n/**\r\n * Injection token that can be used to specify the checkbox click behavior.\r\n */\r\nexport const MAT_CHECKBOX_CLICK_ACTION =\r\n    new InjectionToken<MatCheckboxClickAction>('mat-checkbox-click-action');\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {NgModule} from '@angular/core';\r\nimport {MatCommonModule} from '@angular/material/core';\r\nimport {\r\n  MatCard,\r\n  MatCardHeader,\r\n  MatCardTitleGroup,\r\n  MatCardContent,\r\n  MatCardTitle,\r\n  MatCardSubtitle,\r\n  MatCardActions,\r\n  MatCardFooter,\r\n  MatCardSmImage,\r\n  MatCardMdImage,\r\n  MatCardLgImage,\r\n  MatCardImage,\r\n  MatCardXlImage,\r\n  MatCardAvatar,\r\n} from './card';\r\n\r\n\r\n@NgModule({\r\n  imports: [MatCommonModule],\r\n  exports: [\r\n    MatCard,\r\n    MatCardHeader,\r\n    MatCardTitleGroup,\r\n    MatCardContent,\r\n    MatCardTitle,\r\n    MatCardSubtitle,\r\n    MatCardActions,\r\n    MatCardFooter,\r\n    MatCardSmImage,\r\n    MatCardMdImage,\r\n    MatCardLgImage,\r\n    MatCardImage,\r\n    MatCardXlImage,\r\n    MatCardAvatar,\r\n    MatCommonModule,\r\n  ],\r\n  declarations: [\r\n    MatCard, MatCardHeader, MatCardTitleGroup, MatCardContent, MatCardTitle, MatCardSubtitle,\r\n    MatCardActions, MatCardFooter, MatCardSmImage, MatCardMdImage, MatCardLgImage, MatCardImage,\r\n    MatCardXlImage, MatCardAvatar,\r\n  ],\r\n})\r\nexport class MatCardModule {}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {\r\n  Component,\r\n  ViewEncapsulation,\r\n  ChangeDetectionStrategy,\r\n  Directive,\r\n  Input,\r\n} from '@angular/core';\r\n\r\n\r\n/**\r\n * Content of a card, needed as it's used as a selector in the API.\r\n * @docs-private\r\n */\r\n@Directive({\r\n  selector: 'mat-card-content',\r\n  host: {'class': 'mat-card-content'}\r\n})\r\nexport class MatCardContent {}\r\n\r\n/**\r\n * Title of a card, needed as it's used as a selector in the API.\r\n * @docs-private\r\n */\r\n@Directive({\r\n  selector: `mat-card-title, [mat-card-title], [matCardTitle]`,\r\n  host: {\r\n    'class': 'mat-card-title'\r\n  }\r\n})\r\nexport class MatCardTitle {}\r\n\r\n/**\r\n * Sub-title of a card, needed as it's used as a selector in the API.\r\n * @docs-private\r\n */\r\n@Directive({\r\n  selector: `mat-card-subtitle, [mat-card-subtitle], [matCardSubtitle]`,\r\n  host: {\r\n    'class': 'mat-card-subtitle'\r\n  }\r\n})\r\nexport class MatCardSubtitle {}\r\n\r\n/**\r\n * Action section of a card, needed as it's used as a selector in the API.\r\n * @docs-private\r\n */\r\n@Directive({\r\n  selector: 'mat-card-actions',\r\n  exportAs: 'matCardActions',\r\n  host: {\r\n    'class': 'mat-card-actions',\r\n    '[class.mat-card-actions-align-end]': 'align === \"end\"',\r\n  }\r\n})\r\nexport class MatCardActions {\r\n  /** Position of the actions inside the card. */\r\n  @Input() align: 'start' | 'end' = 'start';\r\n}\r\n\r\n/**\r\n * Footer of a card, needed as it's used as a selector in the API.\r\n * @docs-private\r\n */\r\n@Directive({\r\n  selector: 'mat-card-footer',\r\n  host: {'class': 'mat-card-footer'}\r\n})\r\nexport class MatCardFooter {}\r\n\r\n/**\r\n * Image used in a card, needed to add the mat- CSS styling.\r\n * @docs-private\r\n */\r\n@Directive({\r\n  selector: '[mat-card-image], [matCardImage]',\r\n  host: {'class': 'mat-card-image'}\r\n})\r\nexport class MatCardImage {}\r\n\r\n/**\r\n * Image used in a card, needed to add the mat- CSS styling.\r\n * @docs-private\r\n */\r\n@Directive({\r\n  selector: '[mat-card-sm-image], [matCardImageSmall]',\r\n  host: {'class': 'mat-card-sm-image'}\r\n})\r\nexport class MatCardSmImage {}\r\n\r\n/**\r\n * Image used in a card, needed to add the mat- CSS styling.\r\n * @docs-private\r\n */\r\n@Directive({\r\n  selector: '[mat-card-md-image], [matCardImageMedium]',\r\n  host: {'class': 'mat-card-md-image'}\r\n})\r\nexport class MatCardMdImage {}\r\n\r\n/**\r\n * Image used in a card, needed to add the mat- CSS styling.\r\n * @docs-private\r\n */\r\n@Directive({\r\n  selector: '[mat-card-lg-image], [matCardImageLarge]',\r\n  host: {'class': 'mat-card-lg-image'}\r\n})\r\nexport class MatCardLgImage {}\r\n\r\n/**\r\n * Large image used in a card, needed to add the mat- CSS styling.\r\n * @docs-private\r\n */\r\n@Directive({\r\n  selector: '[mat-card-xl-image], [matCardImageXLarge]',\r\n  host: {'class': 'mat-card-xl-image'}\r\n})\r\nexport class MatCardXlImage {}\r\n\r\n/**\r\n * Avatar image used in a card, needed to add the mat- CSS styling.\r\n * @docs-private\r\n */\r\n@Directive({\r\n  selector: '[mat-card-avatar], [matCardAvatar]',\r\n  host: {'class': 'mat-card-avatar'}\r\n})\r\nexport class MatCardAvatar {}\r\n\r\n\r\n/**\r\n * A basic content container component that adds the styles of a Material design card.\r\n *\r\n * While this component can be used alone, it also provides a number\r\n * of preset styles for common card sections, including:\r\n * - mat-card-title\r\n * - mat-card-subtitle\r\n * - mat-card-content\r\n * - mat-card-actions\r\n * - mat-card-footer\r\n */\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'mat-card',\r\n  exportAs: 'matCard',\r\n  templateUrl: 'card.html',\r\n  styleUrls: ['card.css'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  preserveWhitespaces: false,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  host: {'class': 'mat-card'}\r\n})\r\nexport class MatCard {}\r\n\r\n\r\n/**\r\n * Component intended to be used within the `<mat-card>` component. It adds styles for a\r\n * preset header section (i.e. a title, subtitle, and avatar layout).\r\n * @docs-private\r\n */\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'mat-card-header',\r\n  templateUrl: 'card-header.html',\r\n  encapsulation: ViewEncapsulation.None,\r\n  preserveWhitespaces: false,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  host: {'class': 'mat-card-header'}\r\n})\r\nexport class MatCardHeader {}\r\n\r\n\r\n/**\r\n * Component intended to be used within the `<mat-card>` component. It adds styles for a preset\r\n * layout that groups an image with a title section.\r\n * @docs-private\r\n */\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'mat-card-title-group',\r\n  templateUrl: 'card-title-group.html',\r\n  encapsulation: ViewEncapsulation.None,\r\n  preserveWhitespaces: false,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  host: {'class': 'mat-card-title-group'}\r\n})\r\nexport class MatCardTitleGroup {}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {NgModule} from '@angular/core';\r\nimport {MatButtonToggleGroup, MatButtonToggleGroupMultiple, MatButtonToggle} from './button-toggle';\r\nimport {MatCommonModule} from '@angular/material/core';\r\nimport {UNIQUE_SELECTION_DISPATCHER_PROVIDER} from '@angular/cdk/collections';\r\nimport {A11yModule} from '@angular/cdk/a11y';\r\n\r\n\r\n@NgModule({\r\n  imports: [MatCommonModule, A11yModule],\r\n  exports: [\r\n    MatButtonToggleGroup,\r\n    MatButtonToggleGroupMultiple,\r\n    MatButtonToggle,\r\n    MatCommonModule,\r\n  ],\r\n  declarations: [MatButtonToggleGroup, MatButtonToggleGroupMultiple, MatButtonToggle],\r\n  providers: [UNIQUE_SELECTION_DISPATCHER_PROVIDER]\r\n})\r\nexport class MatButtonToggleModule {}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {FocusMonitor} from '@angular/cdk/a11y';\r\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\r\nimport {UniqueSelectionDispatcher} from '@angular/cdk/collections';\r\nimport {\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ContentChildren,\r\n  Directive,\r\n  ElementRef,\r\n  EventEmitter,\r\n  forwardRef,\r\n  Input,\r\n  OnDestroy,\r\n  OnInit,\r\n  Optional,\r\n  Output,\r\n  QueryList,\r\n  ViewChild,\r\n  ViewEncapsulation,\r\n} from '@angular/core';\r\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\r\nimport {CanDisable, mixinDisabled} from '@angular/material/core';\r\n\r\n/** Acceptable types for a button toggle. */\r\nexport type ToggleType = 'checkbox' | 'radio';\r\n\r\n// Boilerplate for applying mixins to MatButtonToggleGroup and MatButtonToggleGroupMultiple\r\n/** @docs-private */\r\nexport class MatButtonToggleGroupBase {}\r\nexport const _MatButtonToggleGroupMixinBase = mixinDisabled(MatButtonToggleGroupBase);\r\n\r\n/**\r\n * Provider Expression that allows mat-button-toggle-group to register as a ControlValueAccessor.\r\n * This allows it to support [(ngModel)].\r\n * @docs-private\r\n */\r\nexport const MAT_BUTTON_TOGGLE_GROUP_VALUE_ACCESSOR: any = {\r\n  provide: NG_VALUE_ACCESSOR,\r\n  useExisting: forwardRef(() => MatButtonToggleGroup),\r\n  multi: true\r\n};\r\n\r\nlet _uniqueIdCounter = 0;\r\n\r\n/** Change event object emitted by MatButtonToggle. */\r\nexport class MatButtonToggleChange {\r\n  /** The MatButtonToggle that emits the event. */\r\n  source: MatButtonToggle | null;\r\n  /** The value assigned to the MatButtonToggle. */\r\n  value: any;\r\n}\r\n\r\n/** Exclusive selection button toggle group that behaves like a radio-button group. */\r\n@Directive({\r\n  selector: 'mat-button-toggle-group:not([multiple])',\r\n  providers: [MAT_BUTTON_TOGGLE_GROUP_VALUE_ACCESSOR],\r\n  inputs: ['disabled'],\r\n  host: {\r\n    'role': 'radiogroup',\r\n    'class': 'mat-button-toggle-group',\r\n    '[class.mat-button-toggle-vertical]': 'vertical'\r\n  },\r\n  exportAs: 'matButtonToggleGroup',\r\n})\r\nexport class MatButtonToggleGroup extends _MatButtonToggleGroupMixinBase\r\n    implements ControlValueAccessor, CanDisable {\r\n  /**\r\n   * The method to be called in order to update ngModel.\r\n   * Now `ngModel` binding is not supported in multiple selection mode.\r\n   */\r\n  _controlValueAccessorChangeFn: (value: any) => void = () => {};\r\n\r\n  /** onTouch function registered via registerOnTouch (ControlValueAccessor). */\r\n  _onTouched: () => any = () => {};\r\n\r\n  /** Child button toggle buttons. */\r\n  @ContentChildren(forwardRef(() => MatButtonToggle)) _buttonToggles: QueryList<MatButtonToggle>;\r\n\r\n  /** `name` attribute for the underlying `input` element. */\r\n  @Input()\r\n  get name(): string { return this._name; }\r\n  set name(value: string) {\r\n    this._name = value;\r\n    this._updateButtonToggleNames();\r\n  }\r\n  private _name: string = `mat-button-toggle-group-${_uniqueIdCounter++}`;\r\n\r\n  /** Whether the toggle group is vertical. */\r\n  @Input()\r\n  get vertical(): boolean { return this._vertical; }\r\n  set vertical(value: boolean) { this._vertical = coerceBooleanProperty(value); }\r\n  private _vertical: boolean = false;\r\n\r\n  /** Value of the toggle group. */\r\n  @Input()\r\n  get value(): any { return this._value; }\r\n  set value(value: any) {\r\n    if (this._value != value) {\r\n      this._value = value;\r\n      this.valueChange.emit(value);\r\n      this._updateSelectedButtonToggleFromValue();\r\n    }\r\n  }\r\n  private _value: any = null;\r\n\r\n  /**\r\n   * Event that emits whenever the value of the group changes.\r\n   * Used to facilitate two-way data binding.\r\n   * @docs-private\r\n   */\r\n  @Output() readonly valueChange = new EventEmitter<any>();\r\n\r\n  /** The currently selected button toggle, should match the value. */\r\n  @Input()\r\n  get selected(): MatButtonToggle | null { return this._selected; }\r\n  set selected(selected: MatButtonToggle | null) {\r\n    this._selected = selected;\r\n    this.value = selected ? selected.value : null;\r\n\r\n    if (selected && !selected.checked) {\r\n      selected.checked = true;\r\n    }\r\n  }\r\n  private _selected: MatButtonToggle | null = null;\r\n\r\n  /** Event emitted when the group's value changes. */\r\n  @Output() readonly change: EventEmitter<MatButtonToggleChange> =\r\n      new EventEmitter<MatButtonToggleChange>();\r\n\r\n  constructor(private _changeDetector: ChangeDetectorRef) {\r\n    super();\r\n  }\r\n\r\n  private _updateButtonToggleNames(): void {\r\n    if (this._buttonToggles) {\r\n      this._buttonToggles.forEach((toggle) => {\r\n        toggle.name = this._name;\r\n      });\r\n    }\r\n  }\r\n\r\n  // TODO: Refactor into shared code with radio.\r\n  private _updateSelectedButtonToggleFromValue(): void {\r\n    let isAlreadySelected = this._selected != null && this._selected.value == this._value;\r\n\r\n    if (this._buttonToggles != null && !isAlreadySelected) {\r\n      let matchingButtonToggle = this._buttonToggles.filter(\r\n          buttonToggle => buttonToggle.value == this._value)[0];\r\n\r\n      if (matchingButtonToggle) {\r\n        this.selected = matchingButtonToggle;\r\n      } else if (this.value == null) {\r\n        this.selected = null;\r\n        this._buttonToggles.forEach(buttonToggle => {\r\n          buttonToggle.checked = false;\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  /** Dispatch change event with current selection and group value. */\r\n  _emitChangeEvent(): void {\r\n    let event = new MatButtonToggleChange();\r\n    event.source = this._selected;\r\n    event.value = this._value;\r\n    this._controlValueAccessorChangeFn(event.value);\r\n    this.change.emit(event);\r\n  }\r\n\r\n  // Implemented as part of ControlValueAccessor.\r\n  writeValue(value: any) {\r\n    this.value = value;\r\n    this._changeDetector.markForCheck();\r\n  }\r\n\r\n  // Implemented as part of ControlValueAccessor.\r\n  registerOnChange(fn: (value: any) => void) {\r\n    this._controlValueAccessorChangeFn = fn;\r\n  }\r\n\r\n  // Implemented as part of ControlValueAccessor.\r\n  registerOnTouched(fn: any) {\r\n    this._onTouched = fn;\r\n  }\r\n\r\n  // Implemented as part of ControlValueAccessor.\r\n  setDisabledState(isDisabled: boolean): void {\r\n    this.disabled = isDisabled;\r\n    this._markButtonTogglesForCheck();\r\n  }\r\n\r\n  private _markButtonTogglesForCheck() {\r\n    if (this._buttonToggles) {\r\n      this._buttonToggles.forEach((toggle) => toggle._markForCheck());\r\n    }\r\n  }\r\n}\r\n\r\n/** Multiple selection button-toggle group. `ngModel` is not supported in this mode. */\r\n@Directive({\r\n  selector: 'mat-button-toggle-group[multiple]',\r\n  exportAs: 'matButtonToggleGroup',\r\n  inputs: ['disabled'],\r\n  host: {\r\n    'class': 'mat-button-toggle-group',\r\n    '[class.mat-button-toggle-vertical]': 'vertical',\r\n    'role': 'group'\r\n  }\r\n})\r\nexport class MatButtonToggleGroupMultiple extends _MatButtonToggleGroupMixinBase\r\n    implements CanDisable {\r\n  /** Whether the toggle group is vertical. */\r\n  @Input()\r\n  get vertical(): boolean { return this._vertical; }\r\n  set vertical(value: boolean) { this._vertical = coerceBooleanProperty(value); }\r\n  private _vertical: boolean = false;\r\n}\r\n\r\n/** Single button inside of a toggle group. */\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'mat-button-toggle',\r\n  templateUrl: 'button-toggle.html',\r\n  styleUrls: ['button-toggle.css'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  preserveWhitespaces: false,\r\n  exportAs: 'matButtonToggle',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  host: {\r\n    '[class.mat-button-toggle-standalone]': '!buttonToggleGroup && !buttonToggleGroupMultiple',\r\n    '[class.mat-button-toggle-checked]': 'checked',\r\n    '[class.mat-button-toggle-disabled]': 'disabled',\r\n    'class': 'mat-button-toggle',\r\n    '[attr.id]': 'id',\r\n  }\r\n})\r\nexport class MatButtonToggle implements OnInit, OnDestroy {\r\n  /**\r\n   * Attached to the aria-label attribute of the host element. In most cases, arial-labelledby will\r\n   * take precedence so this may be omitted.\r\n   */\r\n  @Input('aria-label') ariaLabel: string = '';\r\n\r\n  /**\r\n   * Users can specify the `aria-labelledby` attribute which will be forwarded to the input element\r\n   */\r\n  @Input('aria-labelledby') ariaLabelledby: string | null = null;\r\n\r\n  /** Type of the button toggle. Either 'radio' or 'checkbox'. */\r\n  _type: ToggleType;\r\n\r\n  /** Whether or not the button toggle is a single selection. */\r\n  private _isSingleSelector: boolean = false;\r\n\r\n  /** Unregister function for _buttonToggleDispatcher */\r\n  private _removeUniqueSelectionListener: () => void = () => {};\r\n\r\n  @ViewChild('input') _inputElement: ElementRef;\r\n\r\n  /** The parent button toggle group (exclusive selection). Optional. */\r\n  buttonToggleGroup: MatButtonToggleGroup;\r\n\r\n  /** The parent button toggle group (multiple selection). Optional. */\r\n  buttonToggleGroupMultiple: MatButtonToggleGroupMultiple;\r\n\r\n  /** Unique ID for the underlying `input` element. */\r\n  get inputId(): string { return `${this.id}-input`; }\r\n\r\n  /** The unique ID for this button toggle. */\r\n  @Input() id: string;\r\n\r\n  /** HTML's 'name' attribute used to group radios for unique selection. */\r\n  @Input() name: string;\r\n\r\n  /** Whether the button is checked. */\r\n  @Input()\r\n  get checked(): boolean { return this._checked; }\r\n  set checked(value: boolean) {\r\n    if (this._isSingleSelector && value) {\r\n      // Notify all button toggles with the same name (in the same group) to un-check.\r\n      this._buttonToggleDispatcher.notify(this.id, this.name);\r\n      this._changeDetectorRef.markForCheck();\r\n    }\r\n\r\n    this._checked = value;\r\n\r\n    if (value && this._isSingleSelector && this.buttonToggleGroup.value != this.value) {\r\n      this.buttonToggleGroup.selected = this;\r\n    }\r\n  }\r\n  private _checked: boolean = false;\r\n\r\n  /** MatButtonToggleGroup reads this to assign its own value. */\r\n  @Input()\r\n  get value(): any { return this._value; }\r\n  set value(value: any) {\r\n    if (this._value != value) {\r\n      if (this.buttonToggleGroup != null && this.checked) {\r\n        this.buttonToggleGroup.value = value;\r\n      }\r\n      this._value = value;\r\n    }\r\n  }\r\n  private _value: any = null;\r\n\r\n  /** Whether the button is disabled. */\r\n  @Input()\r\n  get disabled(): boolean {\r\n    return this._disabled || (this.buttonToggleGroup != null && this.buttonToggleGroup.disabled) ||\r\n        (this.buttonToggleGroupMultiple != null && this.buttonToggleGroupMultiple.disabled);\r\n  }\r\n  set disabled(value: boolean) { this._disabled = coerceBooleanProperty(value); }\r\n  private _disabled: boolean = false;\r\n\r\n  /** Event emitted when the group value changes. */\r\n  @Output() readonly change: EventEmitter<MatButtonToggleChange> =\r\n      new EventEmitter<MatButtonToggleChange>();\r\n\r\n  constructor(@Optional() toggleGroup: MatButtonToggleGroup,\r\n              @Optional() toggleGroupMultiple: MatButtonToggleGroupMultiple,\r\n              private _changeDetectorRef: ChangeDetectorRef,\r\n              private _buttonToggleDispatcher: UniqueSelectionDispatcher,\r\n              private _elementRef: ElementRef,\r\n              private _focusMonitor: FocusMonitor) {\r\n\r\n    this.buttonToggleGroup = toggleGroup;\r\n    this.buttonToggleGroupMultiple = toggleGroupMultiple;\r\n\r\n    if (this.buttonToggleGroup) {\r\n      this._removeUniqueSelectionListener =\r\n        _buttonToggleDispatcher.listen((id: string, name: string) => {\r\n          if (id != this.id && name == this.name) {\r\n            this.checked = false;\r\n            this._changeDetectorRef.markForCheck();\r\n          }\r\n        });\r\n\r\n      this._type = 'radio';\r\n      this.name = this.buttonToggleGroup.name;\r\n      this._isSingleSelector = true;\r\n    } else {\r\n      // Even if there is no group at all, treat the button toggle as a checkbox so it can be\r\n      // toggled on or off.\r\n      this._type = 'checkbox';\r\n      this._isSingleSelector = false;\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (this.id == null) {\r\n      this.id = `mat-button-toggle-${_uniqueIdCounter++}`;\r\n    }\r\n\r\n    if (this.buttonToggleGroup && this._value == this.buttonToggleGroup.value) {\r\n      this._checked = true;\r\n    }\r\n    this._focusMonitor.monitor(this._elementRef.nativeElement, true);\r\n  }\r\n\r\n  /** Focuses the button. */\r\n  focus(): void {\r\n    this._inputElement.nativeElement.focus();\r\n  }\r\n\r\n  /** Toggle the state of the current button toggle. */\r\n  private _toggle(): void {\r\n    this.checked = !this.checked;\r\n  }\r\n\r\n  /** Checks the button toggle due to an interaction with the underlying native input. */\r\n  _onInputChange(event: Event) {\r\n    event.stopPropagation();\r\n\r\n    if (this._isSingleSelector) {\r\n      // Propagate the change one-way via the group, which will in turn mark this\r\n      // button toggle as checked.\r\n      let groupValueChanged = this.buttonToggleGroup.selected != this;\r\n      this.checked = true;\r\n      this.buttonToggleGroup.selected = this;\r\n      this.buttonToggleGroup._onTouched();\r\n      if (groupValueChanged) {\r\n        this.buttonToggleGroup._emitChangeEvent();\r\n      }\r\n    } else {\r\n      this._toggle();\r\n    }\r\n\r\n    // Emit a change event when the native input does.\r\n    this._emitChangeEvent();\r\n  }\r\n\r\n  _onInputClick(event: Event) {\r\n    // We have to stop propagation for click events on the visual hidden input element.\r\n    // By default, when a user clicks on a label element, a generated click event will be\r\n    // dispatched on the associated input element. Since we are using a label element as our\r\n    // root container, the click event on the `slide-toggle` will be executed twice.\r\n    // The real click event will bubble up, and the generated click event also tries to bubble up.\r\n    // This will lead to multiple click events.\r\n    // Preventing bubbling for the second event will solve that issue.\r\n    event.stopPropagation();\r\n  }\r\n\r\n  /** Dispatch change event with current value. */\r\n  private _emitChangeEvent(): void {\r\n    let event = new MatButtonToggleChange();\r\n    event.source = this;\r\n    event.value = this._value;\r\n    this.change.emit(event);\r\n  }\r\n\r\n  // Unregister buttonToggleDispatcherListener on destroy\r\n  ngOnDestroy() {\r\n    this._removeUniqueSelectionListener();\r\n  }\r\n\r\n  /**\r\n   * Marks the button toggle as needing checking for change detection.\r\n   * This method is exposed because the parent button toggle group will directly\r\n   * update bound properties of the radio button.\r\n   */\r\n  _markForCheck() {\r\n    // When group value changes, the button will not be notified. Use `markForCheck` to explicit\r\n    // update button toggle's status\r\n    this._changeDetectorRef.markForCheck();\r\n  }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {MatCommonModule, MatRippleModule} from '@angular/material/core';\r\nimport {A11yModule} from '@angular/cdk/a11y';\r\nimport {\r\n  MatAnchor,\r\n  MatButton,\r\n} from './button';\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    MatRippleModule,\r\n    MatCommonModule,\r\n    A11yModule,\r\n  ],\r\n  exports: [\r\n    MatButton,\r\n    MatAnchor,\r\n    MatCommonModule,\r\n  ],\r\n  declarations: [\r\n    MatButton,\r\n    MatAnchor,\r\n  ],\r\n})\r\nexport class MatButtonModule {}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {FocusMonitor} from '@angular/cdk/a11y';\r\nimport {Platform} from '@angular/cdk/platform';\r\nimport {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  ElementRef,\r\n  OnDestroy,\r\n  ViewChild,\r\n  ViewEncapsulation,\r\n} from '@angular/core';\r\nimport {\r\n  CanColor,\r\n  CanDisable,\r\n  CanDisableRipple,\r\n  MatRipple,\r\n  mixinColor,\r\n  mixinDisabled,\r\n  mixinDisableRipple\r\n} from '@angular/material/core';\r\n\r\n/** Default color palette for round buttons (mat-fab and mat-mini-fab) */\r\nconst DEFAULT_ROUND_BUTTON_COLOR = 'accent';\r\n\r\n/** Default color palette for flat buttons (mat-flat-button) */\r\nconst DEFAULT_FLAT_BUTTON_COLOR = 'primary';\r\n\r\n/**\r\n * List of classes to add to MatButton instances based on host attributes to\r\n * style as different variants.\r\n */\r\nconst BUTTON_HOST_ATTRIBUTES = [\r\n  'mat-button',\r\n  'mat-flat-button',\r\n  'mat-icon-button',\r\n  'mat-raised-button',\r\n  'mat-stroked-button',\r\n  'mat-mini-fab',\r\n  'mat-fab',\r\n];\r\n\r\n// Boilerplate for applying mixins to MatButton.\r\n/** @docs-private */\r\nexport class MatButtonBase {\r\n  constructor(public _elementRef: ElementRef) {}\r\n}\r\nexport const _MatButtonMixinBase = mixinColor(mixinDisabled(mixinDisableRipple(MatButtonBase)));\r\n\r\n\r\n/**\r\n * Material design button.\r\n */\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: `button[mat-button], button[mat-raised-button], button[mat-icon-button],\r\n             button[mat-fab], button[mat-mini-fab], button[mat-stroked-button],\r\n             button[mat-flat-button]`,\r\n  exportAs: 'matButton',\r\n  host: {\r\n    '[disabled]': 'disabled || null',\r\n  },\r\n  templateUrl: 'button.html',\r\n  styleUrls: ['button.css'],\r\n  inputs: ['disabled', 'disableRipple', 'color'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  preserveWhitespaces: false,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class MatButton extends _MatButtonMixinBase\r\n    implements OnDestroy, CanDisable, CanColor, CanDisableRipple {\r\n\r\n  /** Whether the button is round. */\r\n  _isRoundButton: boolean = this._hasHostAttributes('mat-fab', 'mat-mini-fab');\r\n\r\n  /** Whether the button is icon button. */\r\n  _isIconButton: boolean = this._hasHostAttributes('mat-icon-button');\r\n\r\n  /** Reference to the MatRipple instance of the button. */\r\n  @ViewChild(MatRipple) ripple: MatRipple;\r\n\r\n  constructor(elementRef: ElementRef,\r\n              private _platform: Platform,\r\n              private _focusMonitor: FocusMonitor) {\r\n    super(elementRef);\r\n\r\n    // For each of the variant selectors that is prevent in the button's host\r\n    // attributes, add the correct corresponding class.\r\n    for (const attr of BUTTON_HOST_ATTRIBUTES) {\r\n      if (this._hasHostAttributes(attr)) {\r\n        (elementRef.nativeElement as HTMLElement).classList.add(attr);\r\n      }\r\n    }\r\n\r\n    this._focusMonitor.monitor(this._elementRef.nativeElement, true);\r\n\r\n    if (this._isRoundButton) {\r\n      this.color = DEFAULT_ROUND_BUTTON_COLOR;\r\n    } else if (this._hasHostAttributes('mat-flat-button')) {\r\n      this.color = DEFAULT_FLAT_BUTTON_COLOR;\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this._focusMonitor.stopMonitoring(this._elementRef.nativeElement);\r\n  }\r\n\r\n  /** Focuses the button. */\r\n  focus(): void {\r\n    this._getHostElement().focus();\r\n  }\r\n\r\n  _getHostElement() {\r\n    return this._elementRef.nativeElement;\r\n  }\r\n\r\n  _isRippleDisabled() {\r\n    return this.disableRipple || this.disabled;\r\n  }\r\n\r\n  /** Gets whether the button has one of the given attributes. */\r\n  _hasHostAttributes(...attributes: string[]) {\r\n    // If not on the browser, say that there are none of the attributes present.\r\n    // Since these only affect how the ripple displays (and ripples only happen on the client),\r\n    // detecting these attributes isn't necessary when not on the browser.\r\n    if (!this._platform.isBrowser) {\r\n      return false;\r\n    }\r\n\r\n    return attributes.some(attribute => this._getHostElement().hasAttribute(attribute));\r\n  }\r\n}\r\n\r\n/**\r\n * Raised Material design button.\r\n */\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: `a[mat-button], a[mat-raised-button], a[mat-icon-button], a[mat-fab],\r\n             a[mat-mini-fab], a[mat-stroked-button], a[mat-flat-button]`,\r\n  exportAs: 'matButton, matAnchor',\r\n  host: {\r\n    '[attr.tabindex]': 'disabled ? -1 : 0',\r\n    '[attr.disabled]': 'disabled || null',\r\n    '[attr.aria-disabled]': 'disabled.toString()',\r\n    '(click)': '_haltDisabledEvents($event)',\r\n  },\r\n  inputs: ['disabled', 'disableRipple', 'color'],\r\n  templateUrl: 'button.html',\r\n  styleUrls: ['button.css'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  preserveWhitespaces: false,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class MatAnchor extends MatButton {\r\n  constructor(\r\n      platform: Platform,\r\n      focusMonitor: FocusMonitor,\r\n      elementRef: ElementRef) {\r\n    super(elementRef, platform, focusMonitor);\r\n  }\r\n\r\n  _haltDisabledEvents(event: Event) {\r\n    // A disabled button shouldn't apply any actions\r\n    if (this.disabled) {\r\n      event.preventDefault();\r\n      event.stopImmediatePropagation();\r\n    }\r\n  }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {OverlayModule} from '@angular/cdk/overlay';\r\nimport {MatOptionModule, MatCommonModule} from '@angular/material/core';\r\nimport {MatAutocomplete} from './autocomplete';\r\nimport {\r\n  MatAutocompleteTrigger,\r\n  MAT_AUTOCOMPLETE_SCROLL_STRATEGY_PROVIDER,\r\n} from './autocomplete-trigger';\r\n\r\n@NgModule({\r\n  imports: [MatOptionModule, OverlayModule, MatCommonModule, CommonModule],\r\n  exports: [MatAutocomplete, MatOptionModule, MatAutocompleteTrigger, MatCommonModule],\r\n  declarations: [MatAutocomplete, MatAutocompleteTrigger],\r\n  providers: [MAT_AUTOCOMPLETE_SCROLL_STRATEGY_PROVIDER],\r\n})\r\nexport class MatAutocompleteModule {}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\nimport {Directionality} from '@angular/cdk/bidi';\r\nimport {DOWN_ARROW, ENTER, ESCAPE, UP_ARROW, TAB} from '@angular/cdk/keycodes';\r\nimport {\r\n  ConnectedPositionStrategy,\r\n  Overlay,\r\n  OverlayRef,\r\n  OverlayConfig,\r\n  PositionStrategy,\r\n  ScrollStrategy,\r\n} from '@angular/cdk/overlay';\r\nimport {TemplatePortal} from '@angular/cdk/portal';\r\nimport {filter} from 'rxjs/operators/filter';\r\nimport {take} from 'rxjs/operators/take';\r\nimport {switchMap} from 'rxjs/operators/switchMap';\r\nimport {tap} from 'rxjs/operators/tap';\r\nimport {delay} from 'rxjs/operators/delay';\r\nimport {\r\n  ChangeDetectorRef,\r\n  Directive,\r\n  ElementRef,\r\n  forwardRef,\r\n  Host,\r\n  Inject,\r\n  InjectionToken,\r\n  Input,\r\n  NgZone,\r\n  OnDestroy,\r\n  Optional,\r\n  ViewContainerRef,\r\n} from '@angular/core';\r\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\r\nimport {\r\n  MatOption,\r\n  MatOptionSelectionChange,\r\n  _getOptionScrollPosition,\r\n  _countGroupLabelsBeforeOption,\r\n} from '@angular/material/core';\r\nimport {MatFormField} from '@angular/material/form-field';\r\nimport {DOCUMENT} from '@angular/common';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport {Subject} from 'rxjs/Subject';\r\nimport {defer} from 'rxjs/observable/defer';\r\nimport {fromEvent} from 'rxjs/observable/fromEvent';\r\nimport {merge} from 'rxjs/observable/merge';\r\nimport {of as observableOf} from 'rxjs/observable/of';\r\nimport {Subscription} from 'rxjs/Subscription';\r\nimport {MatAutocomplete} from './autocomplete';\r\n\r\n\r\n/**\r\n * The following style constants are necessary to save here in order\r\n * to properly calculate the scrollTop of the panel. Because we are not\r\n * actually focusing the active item, scroll must be handled manually.\r\n */\r\n\r\n/** The height of each autocomplete option. */\r\nexport const AUTOCOMPLETE_OPTION_HEIGHT = 48;\r\n\r\n/** The total height of the autocomplete panel. */\r\nexport const AUTOCOMPLETE_PANEL_HEIGHT = 256;\r\n\r\n/** Injection token that determines the scroll handling while the autocomplete panel is open. */\r\nexport const MAT_AUTOCOMPLETE_SCROLL_STRATEGY =\r\n    new InjectionToken<() => ScrollStrategy>('mat-autocomplete-scroll-strategy');\r\n\r\n/** @docs-private */\r\nexport function MAT_AUTOCOMPLETE_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay: Overlay):\r\n    () => ScrollStrategy {\r\n  return () => overlay.scrollStrategies.reposition();\r\n}\r\n\r\n/** @docs-private */\r\nexport const MAT_AUTOCOMPLETE_SCROLL_STRATEGY_PROVIDER = {\r\n  provide: MAT_AUTOCOMPLETE_SCROLL_STRATEGY,\r\n  deps: [Overlay],\r\n  useFactory: MAT_AUTOCOMPLETE_SCROLL_STRATEGY_PROVIDER_FACTORY,\r\n};\r\n\r\n/**\r\n * Provider that allows the autocomplete to register as a ControlValueAccessor.\r\n * @docs-private\r\n */\r\nexport const MAT_AUTOCOMPLETE_VALUE_ACCESSOR: any = {\r\n  provide: NG_VALUE_ACCESSOR,\r\n  useExisting: forwardRef(() => MatAutocompleteTrigger),\r\n  multi: true\r\n};\r\n\r\n/**\r\n * Creates an error to be thrown when attempting to use an autocomplete trigger without a panel.\r\n */\r\nexport function getMatAutocompleteMissingPanelError(): Error {\r\n  return Error('Attempting to open an undefined instance of `mat-autocomplete`. ' +\r\n               'Make sure that the id passed to the `matAutocomplete` is correct and that ' +\r\n               'you\\'re attempting to open it after the ngAfterContentInit hook.');\r\n}\r\n\r\n@Directive({\r\n  selector: `input[matAutocomplete], textarea[matAutocomplete]`,\r\n  host: {\r\n    'role': 'combobox',\r\n    'autocomplete': 'off',\r\n    'aria-autocomplete': 'list',\r\n    '[attr.aria-activedescendant]': 'activeOption?.id',\r\n    '[attr.aria-expanded]': 'panelOpen.toString()',\r\n    '[attr.aria-owns]': 'autocomplete?.id',\r\n    // Note: we use `focusin`, as opposed to `focus`, in order to open the panel\r\n    // a little earlier. This avoids issues where IE delays the focusing of the input.\r\n    '(focusin)': '_handleFocus()',\r\n    '(blur)': '_onTouched()',\r\n    '(input)': '_handleInput($event)',\r\n    '(keydown)': '_handleKeydown($event)',\r\n  },\r\n  exportAs: 'matAutocompleteTrigger',\r\n  providers: [MAT_AUTOCOMPLETE_VALUE_ACCESSOR]\r\n})\r\nexport class MatAutocompleteTrigger implements ControlValueAccessor, OnDestroy {\r\n  private _overlayRef: OverlayRef | null;\r\n  private _portal: TemplatePortal;\r\n  private _componentDestroyed = false;\r\n\r\n  /** Old value of the native input. Used to work around issues with the `input` event on IE. */\r\n  private _previousValue: string | number | null;\r\n\r\n  /** Strategy that is used to position the panel. */\r\n  private _positionStrategy: ConnectedPositionStrategy;\r\n\r\n  /** Whether or not the label state is being overridden. */\r\n  private _manuallyFloatingLabel = false;\r\n\r\n  /** The subscription for closing actions (some are bound to document). */\r\n  private _closingActionsSubscription: Subscription;\r\n\r\n  /** Stream of keyboard events that can close the panel. */\r\n  private readonly _closeKeyEventStream = new Subject<void>();\r\n\r\n  /** `View -> model callback called when value changes` */\r\n  _onChange: (value: any) => void = () => {};\r\n\r\n  /** `View -> model callback called when autocomplete has been touched` */\r\n  _onTouched = () => {};\r\n\r\n  /** The autocomplete panel to be attached to this trigger. */\r\n  @Input('matAutocomplete') autocomplete: MatAutocomplete;\r\n\r\n  constructor(private _element: ElementRef, private _overlay: Overlay,\r\n              private _viewContainerRef: ViewContainerRef,\r\n              private _zone: NgZone,\r\n              private _changeDetectorRef: ChangeDetectorRef,\r\n              @Inject(MAT_AUTOCOMPLETE_SCROLL_STRATEGY) private _scrollStrategy,\r\n              @Optional() private _dir: Directionality,\r\n              @Optional() @Host() private _formField: MatFormField,\r\n              @Optional() @Inject(DOCUMENT) private _document: any) {}\r\n\r\n  ngOnDestroy() {\r\n    this._componentDestroyed = true;\r\n    this._destroyPanel();\r\n    this._closeKeyEventStream.complete();\r\n  }\r\n\r\n  /** Whether or not the autocomplete panel is open. */\r\n  get panelOpen(): boolean { return this._panelOpen && this.autocomplete.showPanel; }\r\n  private _panelOpen: boolean = false;\r\n\r\n  /** Opens the autocomplete suggestion panel. */\r\n  openPanel(): void {\r\n    this._attachOverlay();\r\n    this._floatLabel();\r\n  }\r\n\r\n  /** Closes the autocomplete suggestion panel. */\r\n  closePanel(): void {\r\n    this._resetLabel();\r\n\r\n    if (this._panelOpen) {\r\n      this.autocomplete._isOpen = this._panelOpen = false;\r\n\r\n      if (this._overlayRef && this._overlayRef.hasAttached()) {\r\n        this._overlayRef.detach();\r\n        this._closingActionsSubscription.unsubscribe();\r\n      }\r\n\r\n      // Note that in some cases this can end up being called after the component is destroyed.\r\n      // Add a check to ensure that we don't try to run change detection on a destroyed view.\r\n      if (!this._componentDestroyed) {\r\n        // We need to trigger change detection manually, because\r\n        // `fromEvent` doesn't seem to do it at the proper time.\r\n        // This ensures that the label is reset when the\r\n        // user clicks outside.\r\n        this._changeDetectorRef.detectChanges();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * A stream of actions that should close the autocomplete panel, including\r\n   * when an option is selected, on blur, and when TAB is pressed.\r\n   */\r\n  get panelClosingActions(): Observable<MatOptionSelectionChange> {\r\n    return merge(\r\n      this.optionSelections,\r\n      this.autocomplete._keyManager.tabOut.pipe(filter(() => this._panelOpen)),\r\n      this._closeKeyEventStream,\r\n      this._outsideClickStream,\r\n      this._overlayRef ?\r\n          this._overlayRef.detachments().pipe(filter(() => this._panelOpen)) :\r\n          observableOf()\r\n    );\r\n  }\r\n\r\n  /** Stream of autocomplete option selections. */\r\n  readonly optionSelections: Observable<MatOptionSelectionChange> = defer(() => {\r\n    if (this.autocomplete && this.autocomplete.options) {\r\n     return merge(...this.autocomplete.options.map(option => option.onSelectionChange));\r\n    }\r\n\r\n    // If there are any subscribers before `ngAfterViewInit`, the `autocomplete` will be undefined.\r\n    // Return a stream that we'll replace with the real one once everything is in place.\r\n    return this._zone.onStable\r\n        .asObservable()\r\n        .pipe(take(1), switchMap(() => this.optionSelections));\r\n  });\r\n\r\n  /** The currently active option, coerced to MatOption type. */\r\n  get activeOption(): MatOption | null {\r\n    if (this.autocomplete && this.autocomplete._keyManager) {\r\n      return this.autocomplete._keyManager.activeItem;\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  /** Stream of clicks outside of the autocomplete panel. */\r\n  private get _outsideClickStream(): Observable<any> {\r\n    if (!this._document) {\r\n      return observableOf(null);\r\n    }\r\n\r\n    return merge(\r\n      fromEvent(this._document, 'click'),\r\n      fromEvent(this._document, 'touchend')\r\n    )\r\n    .pipe(filter((event: MouseEvent | TouchEvent) => {\r\n      const clickTarget = event.target as HTMLElement;\r\n      const formField = this._formField ?\r\n          this._formField._elementRef.nativeElement : null;\r\n\r\n      return this._panelOpen &&\r\n              clickTarget !== this._element.nativeElement &&\r\n              (!formField || !formField.contains(clickTarget)) &&\r\n              (!!this._overlayRef && !this._overlayRef.overlayElement.contains(clickTarget));\r\n    }));\r\n  }\r\n\r\n  // Implemented as part of ControlValueAccessor.\r\n  writeValue(value: any): void {\r\n    Promise.resolve(null).then(() => this._setTriggerValue(value));\r\n  }\r\n\r\n  // Implemented as part of ControlValueAccessor.\r\n  registerOnChange(fn: (value: any) => {}): void {\r\n    this._onChange = fn;\r\n  }\r\n\r\n  // Implemented as part of ControlValueAccessor.\r\n  registerOnTouched(fn: () => {}) {\r\n    this._onTouched = fn;\r\n  }\r\n\r\n  // Implemented as part of ControlValueAccessor.\r\n  setDisabledState(isDisabled: boolean) {\r\n    this._element.nativeElement.disabled = isDisabled;\r\n  }\r\n\r\n  _handleKeydown(event: KeyboardEvent): void {\r\n    const keyCode = event.keyCode;\r\n\r\n    // Prevent the default action on all escape key presses. This is here primarily to bring IE\r\n    // in line with other browsers. By default, pressing escape on IE will cause it to revert\r\n    // the input value to the one that it had on focus, however it won't dispatch any events\r\n    // which means that the model value will be out of sync with the view.\r\n    if (keyCode === ESCAPE) {\r\n      event.preventDefault();\r\n    }\r\n\r\n    // Close when pressing ESCAPE or ALT + UP_ARROW, based on the a11y guidelines.\r\n    // See: https://www.w3.org/TR/wai-aria-practices-1.1/#textbox-keyboard-interaction\r\n    if (this.panelOpen && (keyCode === ESCAPE || (keyCode === UP_ARROW && event.altKey))) {\r\n      this._resetActiveItem();\r\n      this._closeKeyEventStream.next();\r\n      event.stopPropagation();\r\n    } else if (this.activeOption && keyCode === ENTER && this.panelOpen) {\r\n      this.activeOption._selectViaInteraction();\r\n      this._resetActiveItem();\r\n      event.preventDefault();\r\n    } else {\r\n      const prevActiveItem = this.autocomplete._keyManager.activeItem;\r\n      const isArrowKey = keyCode === UP_ARROW || keyCode === DOWN_ARROW;\r\n\r\n      if (this.panelOpen || keyCode === TAB) {\r\n        this.autocomplete._keyManager.onKeydown(event);\r\n      } else if (isArrowKey && this._canOpen()) {\r\n        this.openPanel();\r\n      }\r\n\r\n      if (isArrowKey || this.autocomplete._keyManager.activeItem !== prevActiveItem) {\r\n        this._scrollToOption();\r\n      }\r\n    }\r\n  }\r\n\r\n  _handleInput(event: KeyboardEvent): void {\r\n    let target = event.target as HTMLInputElement;\r\n    let value: number | string | null = target.value;\r\n\r\n    // Based on `NumberValueAccessor` from forms.\r\n    if (target.type === 'number') {\r\n      value = value == '' ? null : parseFloat(value);\r\n    }\r\n\r\n    // If the input has a placeholder, IE will fire the `input` event on page load,\r\n    // focus and blur, in addition to when the user actually changed the value. To\r\n    // filter out all of the extra events, we save the value on focus and between\r\n    // `input` events, and we check whether it changed.\r\n    // See: https://connect.microsoft.com/IE/feedback/details/885747/\r\n    if (this._canOpen() && this._previousValue !== value &&\r\n      document.activeElement === event.target) {\r\n      this._previousValue = value;\r\n      this._onChange(value);\r\n      this.openPanel();\r\n    }\r\n  }\r\n\r\n  _handleFocus(): void {\r\n    if (this._canOpen()) {\r\n      this._previousValue = this._element.nativeElement.value;\r\n      this._attachOverlay();\r\n      this._floatLabel(true);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * In \"auto\" mode, the label will animate down as soon as focus is lost.\r\n   * This causes the value to jump when selecting an option with the mouse.\r\n   * This method manually floats the label until the panel can be closed.\r\n   * @param shouldAnimate Whether the label should be animated when it is floated.\r\n   */\r\n  private _floatLabel(shouldAnimate = false): void {\r\n    if (this._formField && this._formField.floatLabel === 'auto') {\r\n      if (shouldAnimate) {\r\n        this._formField._animateAndLockLabel();\r\n      } else {\r\n        this._formField.floatLabel = 'always';\r\n      }\r\n\r\n      this._manuallyFloatingLabel = true;\r\n    }\r\n  }\r\n\r\n  /** If the label has been manually elevated, return it to its normal state. */\r\n  private _resetLabel(): void  {\r\n    if (this._manuallyFloatingLabel) {\r\n      this._formField.floatLabel = 'auto';\r\n      this._manuallyFloatingLabel = false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Given that we are not actually focusing active options, we must manually adjust scroll\r\n   * to reveal options below the fold. First, we find the offset of the option from the top\r\n   * of the panel. If that offset is below the fold, the new scrollTop will be the offset -\r\n   * the panel height + the option height, so the active option will be just visible at the\r\n   * bottom of the panel. If that offset is above the top of the visible panel, the new scrollTop\r\n   * will become the offset. If that offset is visible within the panel already, the scrollTop is\r\n   * not adjusted.\r\n   */\r\n  private _scrollToOption(): void {\r\n    const index = this.autocomplete._keyManager.activeItemIndex || 0;\r\n    const labelCount = _countGroupLabelsBeforeOption(index,\r\n        this.autocomplete.options, this.autocomplete.optionGroups);\r\n\r\n    const newScrollPosition = _getOptionScrollPosition(\r\n      index + labelCount,\r\n      AUTOCOMPLETE_OPTION_HEIGHT,\r\n      this.autocomplete._getScrollTop(),\r\n      AUTOCOMPLETE_PANEL_HEIGHT\r\n    );\r\n\r\n    this.autocomplete._setScrollTop(newScrollPosition);\r\n  }\r\n\r\n  /**\r\n   * This method listens to a stream of panel closing actions and resets the\r\n   * stream every time the option list changes.\r\n   */\r\n  private _subscribeToClosingActions(): Subscription {\r\n    const firstStable = this._zone.onStable.asObservable().pipe(take(1));\r\n    const optionChanges = this.autocomplete.options.changes.pipe(\r\n      tap(() => this._positionStrategy.recalculateLastPosition()),\r\n      // Defer emitting to the stream until the next tick, because changing\r\n      // bindings in here will cause \"changed after checked\" errors.\r\n      delay(0)\r\n    );\r\n\r\n    // When the zone is stable initially, and when the option list changes...\r\n    return merge(firstStable, optionChanges)\r\n      .pipe(\r\n        // create a new stream of panelClosingActions, replacing any previous streams\r\n        // that were created, and flatten it so our stream only emits closing events...\r\n        switchMap(() => {\r\n          this._resetActiveItem();\r\n          this.autocomplete._setVisibility();\r\n          return this.panelClosingActions;\r\n        }),\r\n        // when the first closing event occurs...\r\n        take(1)\r\n      )\r\n      // set the value, close the panel, and complete.\r\n      .subscribe(event => this._setValueAndClose(event));\r\n  }\r\n\r\n  /** Destroys the autocomplete suggestion panel. */\r\n  private _destroyPanel(): void {\r\n    if (this._overlayRef) {\r\n      this.closePanel();\r\n      this._overlayRef.dispose();\r\n      this._overlayRef = null;\r\n    }\r\n  }\r\n\r\n  private _setTriggerValue(value: any): void {\r\n    const toDisplay = this.autocomplete && this.autocomplete.displayWith ?\r\n      this.autocomplete.displayWith(value) :\r\n      value;\r\n\r\n    // Simply falling back to an empty string if the display value is falsy does not work properly.\r\n    // The display value can also be the number zero and shouldn't fall back to an empty string.\r\n    const inputValue = toDisplay != null ? toDisplay : '';\r\n\r\n    // If it's used within a `MatFormField`, we should set it through the property so it can go\r\n    // through change detection.\r\n    if (this._formField) {\r\n      this._formField._control.value = inputValue;\r\n    } else {\r\n      this._element.nativeElement.value = inputValue;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * This method closes the panel, and if a value is specified, also sets the associated\r\n   * control to that value. It will also mark the control as dirty if this interaction\r\n   * stemmed from the user.\r\n   */\r\n  private _setValueAndClose(event: MatOptionSelectionChange | null): void {\r\n    if (event && event.source) {\r\n      this._clearPreviousSelectedOption(event.source);\r\n      this._setTriggerValue(event.source.value);\r\n      this._onChange(event.source.value);\r\n      this._element.nativeElement.focus();\r\n      this.autocomplete._emitSelectEvent(event.source);\r\n    }\r\n\r\n    this.closePanel();\r\n  }\r\n\r\n  /**\r\n   * Clear any previous selected option and emit a selection change event for this option\r\n   */\r\n  private _clearPreviousSelectedOption(skip: MatOption) {\r\n    this.autocomplete.options.forEach(option => {\r\n      if (option != skip && option.selected) {\r\n        option.deselect();\r\n      }\r\n    });\r\n  }\r\n\r\n  private _attachOverlay(): void {\r\n    if (!this.autocomplete) {\r\n      throw getMatAutocompleteMissingPanelError();\r\n    }\r\n\r\n    if (!this._overlayRef) {\r\n      this._portal = new TemplatePortal(this.autocomplete.template, this._viewContainerRef);\r\n      this._overlayRef = this._overlay.create(this._getOverlayConfig());\r\n    } else {\r\n      /** Update the panel width, in case the host width has changed */\r\n      this._overlayRef.updateSize({width: this._getHostWidth()});\r\n    }\r\n\r\n    if (this._overlayRef && !this._overlayRef.hasAttached()) {\r\n      this._overlayRef.attach(this._portal);\r\n      this._closingActionsSubscription = this._subscribeToClosingActions();\r\n    }\r\n\r\n    this.autocomplete._setVisibility();\r\n    this.autocomplete._isOpen = this._panelOpen = true;\r\n  }\r\n\r\n  private _getOverlayConfig(): OverlayConfig {\r\n    return new OverlayConfig({\r\n      positionStrategy: this._getOverlayPosition(),\r\n      scrollStrategy: this._scrollStrategy(),\r\n      width: this._getHostWidth(),\r\n      direction: this._dir ? this._dir.value : 'ltr'\r\n    });\r\n  }\r\n\r\n  private _getOverlayPosition(): PositionStrategy {\r\n    this._positionStrategy = this._overlay.position().connectedTo(\r\n        this._getConnectedElement(),\r\n        {originX: 'start', originY: 'bottom'}, {overlayX: 'start', overlayY: 'top'})\r\n        .withFallbackPosition(\r\n            {originX: 'start', originY: 'top'}, {overlayX: 'start', overlayY: 'bottom'}\r\n        );\r\n    return this._positionStrategy;\r\n  }\r\n\r\n  private _getConnectedElement(): ElementRef {\r\n    return this._formField ? this._formField._connectionContainerRef : this._element;\r\n  }\r\n\r\n  /** Returns the width of the input element, so the panel width can match it. */\r\n  private _getHostWidth(): number {\r\n    return this._getConnectedElement().nativeElement.getBoundingClientRect().width;\r\n  }\r\n\r\n  /**\r\n   * Resets the active item to -1 so arrow events will activate the\r\n   * correct options, or to 0 if the consumer opted into it.\r\n   */\r\n  private _resetActiveItem(): void {\r\n    this.autocomplete._keyManager.setActiveItem(this.autocomplete.autoActiveFirstOption ? 0 : -1);\r\n  }\r\n\r\n  /** Determines whether the panel can be opened. */\r\n  private _canOpen(): boolean {\r\n    const element: HTMLInputElement = this._element.nativeElement;\r\n    return !element.readOnly && !element.disabled;\r\n  }\r\n\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\nimport {\r\n  AfterContentInit,\r\n  Component,\r\n  ContentChildren,\r\n  ElementRef,\r\n  Input,\r\n  QueryList,\r\n  TemplateRef,\r\n  ViewChild,\r\n  ViewEncapsulation,\r\n  ChangeDetectorRef,\r\n  ChangeDetectionStrategy,\r\n  EventEmitter,\r\n  Output,\r\n  InjectionToken,\r\n  Inject,\r\n  Optional,\r\n} from '@angular/core';\r\nimport {\r\n  MatOption,\r\n  MatOptgroup,\r\n  MAT_OPTION_PARENT_COMPONENT,\r\n  mixinDisableRipple,\r\n  CanDisableRipple,\r\n} from '@angular/material/core';\r\nimport {ActiveDescendantKeyManager} from '@angular/cdk/a11y';\r\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\r\n\r\n\r\n/**\r\n * Autocomplete IDs need to be unique across components, so this counter exists outside of\r\n * the component definition.\r\n */\r\nlet _uniqueAutocompleteIdCounter = 0;\r\n\r\n/** Event object that is emitted when an autocomplete option is selected. */\r\nexport class MatAutocompleteSelectedEvent {\r\n  constructor(\r\n    /** Reference to the autocomplete panel that emitted the event. */\r\n    public source: MatAutocomplete,\r\n    /** Option that was selected. */\r\n    public option: MatOption) { }\r\n}\r\n\r\n// Boilerplate for applying mixins to MatAutocomplete.\r\n/** @docs-private */\r\nexport class MatAutocompleteBase {}\r\nexport const _MatAutocompleteMixinBase = mixinDisableRipple(MatAutocompleteBase);\r\n\r\n/** Default `mat-autocomplete` options that can be overridden. */\r\nexport interface MatAutocompleteDefaultOptions {\r\n  /** Whether the first option should be highlighted when an autocomplete panel is opened. */\r\n  autoActiveFirstOption?: boolean;\r\n}\r\n\r\n/** Injection token to be used to override the default options for `mat-autocomplete`. */\r\nexport const MAT_AUTOCOMPLETE_DEFAULT_OPTIONS =\r\n    new InjectionToken<MatAutocompleteDefaultOptions>('mat-autocomplete-default-options');\r\n\r\n\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'mat-autocomplete',\r\n  templateUrl: 'autocomplete.html',\r\n  styleUrls: ['autocomplete.css'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  preserveWhitespaces: false,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  exportAs: 'matAutocomplete',\r\n  inputs: ['disableRipple'],\r\n  host: {\r\n    'class': 'mat-autocomplete'\r\n  },\r\n  providers: [\r\n    {provide: MAT_OPTION_PARENT_COMPONENT, useExisting: MatAutocomplete}\r\n  ]\r\n})\r\nexport class MatAutocomplete extends _MatAutocompleteMixinBase implements AfterContentInit,\r\n  CanDisableRipple {\r\n\r\n  /** Manages active item in option list based on key events. */\r\n  _keyManager: ActiveDescendantKeyManager<MatOption>;\r\n\r\n  /** Whether the autocomplete panel should be visible, depending on option length. */\r\n  showPanel: boolean = false;\r\n\r\n  /** Whether the autocomplete panel is open. */\r\n  get isOpen(): boolean { return this._isOpen && this.showPanel; }\r\n  _isOpen: boolean = false;\r\n\r\n  /** @docs-private */\r\n  @ViewChild(TemplateRef) template: TemplateRef<any>;\r\n\r\n  /** Element for the panel containing the autocomplete options. */\r\n  @ViewChild('panel') panel: ElementRef;\r\n\r\n  /** @docs-private */\r\n  @ContentChildren(MatOption, { descendants: true }) options: QueryList<MatOption>;\r\n\r\n  /** @docs-private */\r\n  @ContentChildren(MatOptgroup) optionGroups: QueryList<MatOptgroup>;\r\n\r\n  /** Function that maps an option's control value to its display value in the trigger. */\r\n  @Input() displayWith: ((value: any) => string) | null = null;\r\n\r\n  /**\r\n   * Whether the first option should be highlighted when the autocomplete panel is opened.\r\n   * Can be configured globally through the `MAT_AUTOCOMPLETE_DEFAULT_OPTIONS` token.\r\n   */\r\n  @Input()\r\n  get autoActiveFirstOption(): boolean { return this._autoActiveFirstOption; }\r\n  set autoActiveFirstOption(value: boolean) {\r\n    this._autoActiveFirstOption = coerceBooleanProperty(value);\r\n  }\r\n  private _autoActiveFirstOption: boolean;\r\n\r\n\r\n  /** Event that is emitted whenever an option from the list is selected. */\r\n  @Output() readonly optionSelected: EventEmitter<MatAutocompleteSelectedEvent> =\r\n      new EventEmitter<MatAutocompleteSelectedEvent>();\r\n\r\n  /**\r\n   * Takes classes set on the host mat-autocomplete element and applies them to the panel\r\n   * inside the overlay container to allow for easy styling.\r\n   */\r\n  @Input('class')\r\n  set classList(value: string) {\r\n    if (value && value.length) {\r\n      value.split(' ').forEach(className => this._classList[className.trim()] = true);\r\n      this._elementRef.nativeElement.className = '';\r\n    }\r\n  }\r\n  _classList: {[key: string]: boolean} = {};\r\n\r\n  /** Unique ID to be used by autocomplete trigger's \"aria-owns\" property. */\r\n  id: string = `mat-autocomplete-${_uniqueAutocompleteIdCounter++}`;\r\n\r\n  constructor(\r\n    private _changeDetectorRef: ChangeDetectorRef,\r\n    private _elementRef: ElementRef,\r\n\r\n    // @deletion-target Turn into required param in 6.0.0\r\n    @Optional() @Inject(MAT_AUTOCOMPLETE_DEFAULT_OPTIONS)\r\n        defaults?: MatAutocompleteDefaultOptions) {\r\n    super();\r\n\r\n    this._autoActiveFirstOption = defaults &&\r\n        typeof defaults.autoActiveFirstOption !== 'undefined' ?\r\n            defaults.autoActiveFirstOption :\r\n            false;\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    this._keyManager = new ActiveDescendantKeyManager<MatOption>(this.options).withWrap();\r\n    // Set the initial visibiity state.\r\n    this._setVisibility();\r\n  }\r\n\r\n  /**\r\n   * Sets the panel scrollTop. This allows us to manually scroll to display options\r\n   * above or below the fold, as they are not actually being focused when active.\r\n   */\r\n  _setScrollTop(scrollTop: number): void {\r\n    if (this.panel) {\r\n      this.panel.nativeElement.scrollTop = scrollTop;\r\n    }\r\n  }\r\n\r\n  /** Returns the panel's scrollTop. */\r\n  _getScrollTop(): number {\r\n    return this.panel ? this.panel.nativeElement.scrollTop : 0;\r\n  }\r\n\r\n  /** Panel should hide itself when the option list is empty. */\r\n  _setVisibility() {\r\n    this.showPanel = !!this.options.length;\r\n    this._classList['mat-autocomplete-visible'] = this.showPanel;\r\n    this._classList['mat-autocomplete-hidden'] = !this.showPanel;\r\n    this._changeDetectorRef.markForCheck();\r\n}\r\n\r\n  /** Emits the `select` event. */\r\n  _emitSelectEvent(option: MatOption): void {\r\n    const event = new MatAutocompleteSelectedEvent(this, option);\r\n    this.optionSelected.emit(event);\r\n  }\r\n}\r\n\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {CommonModule} from '@angular/common';\r\nimport {NgModule} from '@angular/core';\r\nimport {PlatformModule} from '@angular/cdk/platform';\r\nimport {MatError} from './error';\r\nimport {MatFormField} from './form-field';\r\nimport {MatHint} from './hint';\r\nimport {MatPlaceholder} from './placeholder';\r\nimport {MatPrefix} from './prefix';\r\nimport {MatSuffix} from './suffix';\r\nimport {MatLabel} from './label';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    MatError,\r\n    MatHint,\r\n    MatFormField,\r\n    MatPlaceholder,\r\n    MatPrefix,\r\n    MatSuffix,\r\n    MatLabel,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    PlatformModule,\r\n  ],\r\n  exports: [\r\n    MatError,\r\n    MatHint,\r\n    MatFormField,\r\n    MatPlaceholder,\r\n    MatPrefix,\r\n    MatSuffix,\r\n    MatLabel,\r\n  ],\r\n})\r\nexport class MatFormFieldModule {}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\r\nimport {\r\n  AfterContentChecked,\r\n  AfterContentInit,\r\n  AfterViewInit,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ContentChild,\r\n  ContentChildren,\r\n  ElementRef,\r\n  Inject,\r\n  Input,\r\n  Optional,\r\n  QueryList,\r\n  ViewChild,\r\n  ViewEncapsulation,\r\n} from '@angular/core';\r\nimport {\r\n  CanColor,\r\n  FloatLabelType,\r\n  LabelOptions,\r\n  MAT_LABEL_GLOBAL_OPTIONS,\r\n  mixinColor,\r\n  ThemePalette\r\n} from '@angular/material/core';\r\nimport { fromEvent } from 'rxjs/observable/fromEvent';\r\nimport { startWith } from 'rxjs/operators/startWith';\r\nimport { take } from 'rxjs/operators/take';\r\nimport { MatError } from './error';\r\nimport { matFormFieldAnimations } from './form-field-animations';\r\nimport { MatFormFieldControl } from './form-field-control';\r\nimport {\r\n  getMatFormFieldDuplicatedHintError,\r\n  getMatFormFieldMissingControlError,\r\n  getMatFormFieldPlaceholderConflictError,\r\n} from './form-field-errors';\r\nimport { MatHint } from './hint';\r\nimport { MatLabel } from './label';\r\nimport { MatPlaceholder } from './placeholder';\r\nimport { MatPrefix } from './prefix';\r\nimport { MatSuffix } from './suffix';\r\n\r\n\r\n// Boilerplate for applying mixins to MatFormField.\r\n/** @docs-private */\r\nexport class MatFormFieldBase {\r\n  constructor(public _elementRef: ElementRef) { }\r\n}\r\n\r\nexport const _MatFormFieldMixinBase = mixinColor(MatFormFieldBase, 'primary');\r\n\r\n\r\nlet nextUniqueId = 0;\r\n\r\n\r\n/** Container for form controls that applies Material Design styling and behavior. */\r\n@Component({\r\n  moduleId: module.id,\r\n  // TODO(mmalerba): the input-container selectors and classes are deprecated and will be removed.\r\n  selector: 'mat-input-container, mat-form-field',\r\n  exportAs: 'matFormField',\r\n  templateUrl: 'form-field.html',\r\n  // MatInput is a directive and can't have styles, so we need to include its styles here.\r\n  // The MatInput styles are fairly minimal so it shouldn't be a big deal for people who\r\n  // aren't using MatInput.\r\n  styleUrls: ['form-field.css', '../input/input.css'],\r\n  animations: [matFormFieldAnimations.transitionMessages],\r\n  host: {\r\n    'class': 'mat-input-container mat-form-field',\r\n    '[class.mat-input-invalid]': '_control.errorState',\r\n    '[class.mat-form-field-invalid]': '_control.errorState',\r\n    '[class.mat-form-field-can-float]': '_canLabelFloat',\r\n    '[class.mat-form-field-should-float]': '_shouldLabelFloat()',\r\n    '[class.mat-form-field-hide-placeholder]': '_hideControlPlaceholder()',\r\n    '[class.mat-form-field-disabled]': '_control.disabled',\r\n    '[class.mat-focused]': '_control.focused',\r\n    '[class.ng-untouched]': '_shouldForward(\"untouched\")',\r\n    '[class.ng-touched]': '_shouldForward(\"touched\")',\r\n    '[class.ng-pristine]': '_shouldForward(\"pristine\")',\r\n    '[class.ng-dirty]': '_shouldForward(\"dirty\")',\r\n    '[class.ng-valid]': '_shouldForward(\"valid\")',\r\n    '[class.ng-invalid]': '_shouldForward(\"invalid\")',\r\n    '[class.ng-pending]': '_shouldForward(\"pending\")',\r\n    '[class.iap-form-field]': '!origin',\r\n  },\r\n  inputs: ['color'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  preserveWhitespaces: false,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\n\r\nexport class MatFormField extends _MatFormFieldMixinBase\r\n  implements AfterContentInit, AfterContentChecked, AfterViewInit, CanColor {\r\n  private _labelOptions: LabelOptions;\r\n\r\n  /**\r\n   * @deprecated Use `color` instead.\r\n   * @deletion-target 6.0.0\r\n   */\r\n  @Input()\r\n  get dividerColor(): ThemePalette { return this.color; }\r\n  set dividerColor(value: ThemePalette) { this.color = value; }\r\n\r\n  /** Whether the required marker should be hidden. */\r\n  @Input()\r\n  get hideRequiredMarker(): boolean { return this._hideRequiredMarker; }\r\n  set hideRequiredMarker(value: boolean) {\r\n    this._hideRequiredMarker = coerceBooleanProperty(value);\r\n  }\r\n  private _hideRequiredMarker: boolean;\r\n\r\n  /** Override for the logic that disables the label animation in certain cases. */\r\n  private _showAlwaysAnimate = false;\r\n\r\n  /** Whether the floating label should always float or not. */\r\n  get _shouldAlwaysFloat(): boolean {\r\n    return this._floatLabel === 'always' && !this._showAlwaysAnimate;\r\n  }\r\n\r\n  /** Whether the label can float or not. */\r\n  get _canLabelFloat(): boolean { return this._floatLabel !== 'never'; }\r\n\r\n  /** State of the mat-hint and mat-error animations. */\r\n  _subscriptAnimationState: string = '';\r\n\r\n  /** Text for the form field hint. */\r\n  @Input()\r\n  get hintLabel(): string { return this._hintLabel; }\r\n  set hintLabel(value: string) {\r\n    this._hintLabel = value;\r\n    this._processHints();\r\n  }\r\n  private _hintLabel = '';\r\n\r\n  // Unique id for the hint label.\r\n  _hintLabelId: string = `mat-hint-${nextUniqueId++}`;\r\n\r\n  /**\r\n   * Whether the placeholder should always float, never float or float as the user types.\r\n   * @deprecated Use floatLabel instead.\r\n   * @deletion-target 6.0.0\r\n   */\r\n  @Input()\r\n  get floatPlaceholder(): FloatLabelType { return this._floatLabel; }\r\n  set floatPlaceholder(value: FloatLabelType) { this.floatLabel = value; }\r\n\r\n  /** Whether the label should always float, never float or float as the user types. */\r\n  @Input()\r\n  get floatLabel(): FloatLabelType { return this._floatLabel; }\r\n  set floatLabel(value: FloatLabelType) {\r\n    if (value !== this._floatLabel) {\r\n      this._floatLabel = value || this._labelOptions.float || 'auto';\r\n      this._changeDetectorRef.markForCheck();\r\n    }\r\n  }\r\n  private _floatLabel: FloatLabelType;\r\n  /** origin material and customize material*/\r\n  @Input()\r\n  get origin(): boolean { return this._origin; }\r\n  set origin(value: boolean) {\r\n    this._origin = coerceBooleanProperty(value);\r\n  }\r\n  private _origin: boolean;\r\n  /** Reference to the form field's underline element. */\r\n  @ViewChild('underline') underlineRef: ElementRef;\r\n  @ViewChild('connectionContainer') _connectionContainerRef: ElementRef;\r\n  @ViewChild('inputContainer') _inputContainerRef: ElementRef;\r\n  @ViewChild('label') private _label: ElementRef;\r\n  @ContentChild(MatFormFieldControl) _control: MatFormFieldControl<any>;\r\n  @ContentChild(MatPlaceholder) _placeholderChild: MatPlaceholder;\r\n  @ContentChild(MatLabel) _labelChild: MatLabel;\r\n  @ContentChildren(MatError) _errorChildren: QueryList<MatError>;\r\n  @ContentChildren(MatHint) _hintChildren: QueryList<MatHint>;\r\n  @ContentChildren(MatPrefix) _prefixChildren: QueryList<MatPrefix>;\r\n  @ContentChildren(MatSuffix) _suffixChildren: QueryList<MatSuffix>;\r\n\r\n  constructor(\r\n    public _elementRef: ElementRef,\r\n    private _changeDetectorRef: ChangeDetectorRef,\r\n    @Optional() @Inject(MAT_LABEL_GLOBAL_OPTIONS) labelOptions: LabelOptions) {\r\n    super(_elementRef);\r\n\r\n    this._labelOptions = labelOptions ? labelOptions : {};\r\n    this.floatLabel = this._labelOptions.float || 'auto';\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    this._validateControlChild();\r\n    if (this._control.controlType) {\r\n      this._elementRef.nativeElement.classList\r\n        .add(`mat-form-field-type-${this._control.controlType}`);\r\n    }\r\n\r\n    // Subscribe to changes in the child control state in order to update the form field UI.\r\n    this._control.stateChanges.pipe(startWith(null!)).subscribe(() => {\r\n      this._validatePlaceholders();\r\n      this._syncDescribedByIds();\r\n      this._changeDetectorRef.markForCheck();\r\n    });\r\n\r\n    let ngControl = this._control.ngControl;\r\n    if (ngControl && ngControl.valueChanges) {\r\n      ngControl.valueChanges.subscribe(() => {\r\n        this._changeDetectorRef.markForCheck();\r\n      });\r\n    }\r\n\r\n    // Re-validate when the number of hints changes.\r\n    this._hintChildren.changes.pipe(startWith(null)).subscribe(() => {\r\n      this._processHints();\r\n      this._changeDetectorRef.markForCheck();\r\n    });\r\n\r\n    // Update the aria-described by when the number of errors changes.\r\n    this._errorChildren.changes.pipe(startWith(null)).subscribe(() => {\r\n      this._syncDescribedByIds();\r\n      this._changeDetectorRef.markForCheck();\r\n    });\r\n  }\r\n\r\n  ngAfterContentChecked() {\r\n    this._validateControlChild();\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    // Avoid animations on load.\r\n    this._subscriptAnimationState = 'enter';\r\n    this._changeDetectorRef.detectChanges();\r\n  }\r\n\r\n  /** Determines whether a class from the NgControl should be forwarded to the host element. */\r\n  _shouldForward(prop: string): boolean {\r\n    let ngControl = this._control ? this._control.ngControl : null;\r\n    return ngControl && (ngControl as any)[prop];\r\n  }\r\n\r\n  _hasPlaceholder() {\r\n    return !!(this._control.placeholder || this._placeholderChild);\r\n  }\r\n\r\n  _hasLabel() {\r\n    return !!this._labelChild;\r\n  }\r\n\r\n  _shouldLabelFloat() {\r\n    return this._canLabelFloat && (this._control.shouldLabelFloat ||\r\n      this._control.shouldPlaceholderFloat || this._shouldAlwaysFloat);\r\n  }\r\n\r\n  _hideControlPlaceholder() {\r\n    return !this._hasLabel() || !this._shouldLabelFloat();\r\n  }\r\n\r\n  _hasFloatingLabel() {\r\n    return this._hasLabel() || this._hasPlaceholder();\r\n  }\r\n\r\n  /** Determines whether to display hints or errors. */\r\n  _getDisplayedMessages(): 'error' | 'hint' {\r\n    return (this._errorChildren && this._errorChildren.length > 0 &&\r\n      this._control.errorState) ? 'error' : 'hint';\r\n  }\r\n\r\n  /** Animates the placeholder up and locks it in position. */\r\n  _animateAndLockLabel(): void {\r\n    if (this._hasFloatingLabel() && this._canLabelFloat) {\r\n      this._showAlwaysAnimate = true;\r\n      this._floatLabel = 'always';\r\n\r\n      fromEvent(this._label.nativeElement, 'transitionend').pipe(take(1)).subscribe(() => {\r\n        this._showAlwaysAnimate = false;\r\n      });\r\n\r\n      this._changeDetectorRef.markForCheck();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Ensure that there is only one placeholder (either `placeholder` attribute on the child control\r\n   * or child element with the `mat-placeholder` directive).\r\n   */\r\n  private _validatePlaceholders() {\r\n    if (this._control.placeholder && this._placeholderChild) {\r\n      throw getMatFormFieldPlaceholderConflictError();\r\n    }\r\n  }\r\n\r\n  /** Does any extra processing that is required when handling the hints. */\r\n  private _processHints() {\r\n    this._validateHints();\r\n    this._syncDescribedByIds();\r\n  }\r\n\r\n  /**\r\n   * Ensure that there is a maximum of one of each `<mat-hint>` alignment specified, with the\r\n   * attribute being considered as `align=\"start\"`.\r\n   */\r\n  private _validateHints() {\r\n    if (this._hintChildren) {\r\n      let startHint: MatHint;\r\n      let endHint: MatHint;\r\n      this._hintChildren.forEach((hint: MatHint) => {\r\n        if (hint.align === 'start') {\r\n          if (startHint || this.hintLabel) {\r\n            throw getMatFormFieldDuplicatedHintError('start');\r\n          }\r\n          startHint = hint;\r\n        } else if (hint.align === 'end') {\r\n          if (endHint) {\r\n            throw getMatFormFieldDuplicatedHintError('end');\r\n          }\r\n          endHint = hint;\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Sets the list of element IDs that describe the child control. This allows the control to update\r\n   * its `aria-describedby` attribute accordingly.\r\n   */\r\n  private _syncDescribedByIds() {\r\n    if (this._control) {\r\n      let ids: string[] = [];\r\n\r\n      if (this._getDisplayedMessages() === 'hint') {\r\n        let startHint = this._hintChildren ?\r\n          this._hintChildren.find(hint => hint.align === 'start') : null;\r\n        let endHint = this._hintChildren ?\r\n          this._hintChildren.find(hint => hint.align === 'end') : null;\r\n\r\n        if (startHint) {\r\n          ids.push(startHint.id);\r\n        } else if (this._hintLabel) {\r\n          ids.push(this._hintLabelId);\r\n        }\r\n\r\n        if (endHint) {\r\n          ids.push(endHint.id);\r\n        }\r\n      } else if (this._errorChildren) {\r\n        ids = this._errorChildren.map(error => error.id);\r\n      }\r\n\r\n      this._control.setDescribedByIds(ids);\r\n    }\r\n  }\r\n\r\n  /** Throws an error if the form field's control is missing. */\r\n  protected _validateControlChild() {\r\n    if (!this._control) {\r\n      throw getMatFormFieldMissingControlError();\r\n    }\r\n  }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {Directive} from '@angular/core';\r\n\r\n\r\n/** Suffix to be placed at the end of the form field. */\r\n@Directive({\r\n  selector: '[matSuffix]',\r\n})\r\nexport class MatSuffix {}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {Directive} from '@angular/core';\r\n\r\n\r\n/** Prefix to be placed the the front of the form field. */\r\n@Directive({\r\n  selector: '[matPrefix]',\r\n})\r\nexport class MatPrefix {}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {Directive} from '@angular/core';\r\n\r\n\r\n/** The placeholder text for an `MatFormField`. */\r\n@Directive({\r\n  selector: 'mat-placeholder'\r\n})\r\nexport class MatPlaceholder {}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {Directive} from '@angular/core';\r\n\r\n\r\n/** The floating label for a `mat-form-field`. */\r\n@Directive({\r\n  selector: 'mat-label'\r\n})\r\nexport class MatLabel {}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {Directive, Input} from '@angular/core';\r\n\r\n\r\nlet nextUniqueId = 0;\r\n\r\n\r\n/** Hint text to be shown underneath the form field control. */\r\n@Directive({\r\n  selector: 'mat-hint',\r\n  host: {\r\n    'class': 'mat-hint',\r\n    '[class.mat-right]': 'align == \"end\"',\r\n    '[attr.id]': 'id',\r\n    // Remove align attribute to prevent it from interfering with layout.\r\n    '[attr.align]': 'null',\r\n  }\r\n})\r\nexport class MatHint {\r\n  /** Whether to align the hint label at the start or end of the line. */\r\n  @Input() align: 'start' | 'end' = 'start';\r\n\r\n  /** Unique ID for the hint. Used for the aria-describedby on the form field control. */\r\n  @Input() id: string = `mat-hint-${nextUniqueId++}`;\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\n/** @docs-private */\r\nexport function getMatFormFieldPlaceholderConflictError(): Error {\r\n  return Error('Placeholder attribute and child element were both specified.');\r\n}\r\n\r\n/** @docs-private */\r\nexport function getMatFormFieldDuplicatedHintError(align: string): Error {\r\n  return Error(`A hint was already declared for 'align=\"${align}\"'.`);\r\n}\r\n\r\n/** @docs-private */\r\nexport function getMatFormFieldMissingControlError(): Error {\r\n  return Error('mat-form-field must contain a MatFormFieldControl.');\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {Observable} from 'rxjs/Observable';\r\nimport {NgControl} from '@angular/forms';\r\n\r\n\r\n/** An interface which allows a control to work inside of a `MatFormField`. */\r\nexport abstract class MatFormFieldControl<T> {\r\n  /** The value of the control. */\r\n  value: T | null;\r\n\r\n  /**\r\n   * Stream that emits whenever the state of the control changes such that the parent `MatFormField`\r\n   * needs to run change detection.\r\n   */\r\n  readonly stateChanges: Observable<void>;\r\n\r\n  /** The element ID for this control. */\r\n  readonly id: string;\r\n\r\n  /** The placeholder for this control. */\r\n  readonly placeholder: string;\r\n\r\n  /** Gets the NgControl for this control. */\r\n  readonly ngControl: NgControl | null;\r\n\r\n  /** Whether the control is focused. */\r\n  readonly focused: boolean;\r\n\r\n  /** Whether the control is empty. */\r\n  readonly empty: boolean;\r\n\r\n  /** Whether the `MatFormField` label should try to float. */\r\n  readonly shouldLabelFloat?: boolean;\r\n\r\n  /**\r\n   * Whether the `MatFormField` placeholder should try to float.\r\n   * @deprecated Use `shouldLabelFloat` instead.\r\n   * @deletion-target 6.0.0\r\n   */\r\n  readonly shouldPlaceholderFloat?: boolean;\r\n\r\n  /** Whether the control is required. */\r\n  readonly required: boolean;\r\n\r\n  /** Whether the control is disabled. */\r\n  readonly disabled: boolean;\r\n\r\n  /** Whether the control is in an error state. */\r\n  readonly errorState: boolean;\r\n\r\n  /**\r\n   * An optional name for the control type that can be used to distinguish `mat-form-field` elements\r\n   * based on their control type. The form field will add a class,\r\n   * `mat-form-field-type-{{controlType}}` to its root element.\r\n   */\r\n  readonly controlType?: string;\r\n\r\n  /** Sets the list of element IDs that currently describe this control. */\r\n  abstract setDescribedByIds(ids: string[]): void;\r\n\r\n  /** Handles a click on the control's container. */\r\n  abstract onContainerClick(event: MouseEvent): void;\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\nimport {\r\n  animate,\r\n  state,\r\n  style,\r\n  transition,\r\n  trigger,\r\n  AnimationTriggerMetadata,\r\n} from '@angular/animations';\r\n\r\n/** Animations used by the MatFormField. */\r\nexport const matFormFieldAnimations: {\r\n  readonly transitionMessages: AnimationTriggerMetadata\r\n} = {\r\n  /** Animation that transitions the form field's error and hint messages. */\r\n  transitionMessages: trigger('transitionMessages', [\r\n    // TODO(mmalerba): Use angular animations for label animation as well.\r\n    state('enter', style({ opacity: 1, transform: 'translateY(0%)' })),\r\n    transition('void => enter', [\r\n      style({ opacity: 0, transform: 'translateY(-100%)' }),\r\n      animate('300ms cubic-bezier(0.55, 0, 0.55, 0.2)'),\r\n    ]),\r\n  ])\r\n};\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {Directive, Input} from '@angular/core';\r\n\r\n\r\nlet nextUniqueId = 0;\r\n\r\n\r\n/** Single error message to be shown underneath the form field. */\r\n@Directive({\r\n  selector: 'mat-error',\r\n  host: {\r\n    'class': 'mat-error',\r\n    'role': 'alert',\r\n    '[attr.id]': 'id',\r\n  }\r\n})\r\nexport class MatError {\r\n  @Input() id: string = `mat-error-${nextUniqueId++}`;\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\n/**\r\n * When constructing a Date, the month is zero-based. This can be confusing, since people are\r\n * used to seeing them one-based. So we create these aliases to make writing the tests easier.\r\n */\r\nexport const JAN = 0, FEB = 1, MAR = 2, APR = 3, MAY = 4, JUN = 5, JUL = 6, AUG = 7, SEP = 8,\r\n    OCT = 9, NOV = 10, DEC = 11;\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {InjectionToken} from '@angular/core';\r\n\r\n/** InjectionToken that can be used to specify the global label options. */\r\nexport const MAT_LABEL_GLOBAL_OPTIONS =\r\n  new InjectionToken<LabelOptions>('mat-label-global-options');\r\n\r\n/** Type for the available floatLabel values. */\r\nexport type FloatLabelType = 'always' | 'never' | 'auto';\r\n\r\n/** Configurable options for floating labels. */\r\nexport interface LabelOptions {\r\n  /**\r\n   * Whether the label should float `always`, `never`, or `auto` (only when necessary).\r\n   * Default behavior is assumed to be `auto`.\r\n   */\r\n  float?: FloatLabelType;\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {MatRippleModule} from '../ripple/index';\r\nimport {MatPseudoCheckboxModule} from '../selection/index';\r\nimport {MatOption} from './option';\r\nimport {MatOptgroup} from './optgroup';\r\n\r\n\r\n@NgModule({\r\n  imports: [MatRippleModule, CommonModule, MatPseudoCheckboxModule],\r\n  exports: [MatOption, MatOptgroup],\r\n  declarations: [MatOption, MatOptgroup]\r\n})\r\nexport class MatOptionModule {}\r\n\r\n\r\nexport * from './option';\r\nexport * from './optgroup';\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\r\nimport {ENTER, SPACE} from '@angular/cdk/keycodes';\r\nimport {Subject} from 'rxjs/Subject';\r\nimport {\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Input,\r\n  Optional,\r\n  Output,\r\n  QueryList,\r\n  ViewEncapsulation,\r\n  InjectionToken,\r\n  Inject,\r\n  AfterViewChecked,\r\n} from '@angular/core';\r\nimport {MatOptgroup} from './optgroup';\r\n\r\n/**\r\n * Option IDs need to be unique across components, so this counter exists outside of\r\n * the component definition.\r\n */\r\nlet _uniqueIdCounter = 0;\r\n\r\n/** Event object emitted by MatOption when selected or deselected. */\r\nexport class MatOptionSelectionChange {\r\n  constructor(\r\n    /** Reference to the option that emitted the event. */\r\n    public source: MatOption,\r\n    /** Whether the change in the option's value was a result of a user action. */\r\n    public isUserInput = false) { }\r\n}\r\n\r\n/**\r\n * Describes a parent component that manages a list of options.\r\n * Contains properties that the options can inherit.\r\n * @docs-private\r\n */\r\nexport interface MatOptionParentComponent {\r\n  disableRipple?: boolean;\r\n  multiple?: boolean;\r\n}\r\n\r\n/**\r\n * Injection token used to provide the parent component to options.\r\n */\r\nexport const MAT_OPTION_PARENT_COMPONENT =\r\n    new InjectionToken<MatOptionParentComponent>('MAT_OPTION_PARENT_COMPONENT');\r\n\r\n/**\r\n * Single option inside of a `<mat-select>` element.\r\n */\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'mat-option',\r\n  exportAs: 'matOption',\r\n  host: {\r\n    'role': 'option',\r\n    '[attr.tabindex]': '_getTabIndex()',\r\n    '[class.mat-selected]': 'selected',\r\n    '[class.mat-option-multiple]': 'multiple',\r\n    '[class.mat-active]': 'active',\r\n    '[id]': 'id',\r\n    '[attr.aria-selected]': 'selected.toString()',\r\n    '[attr.aria-disabled]': 'disabled.toString()',\r\n    '[class.mat-option-disabled]': 'disabled',\r\n    '(click)': '_selectViaInteraction()',\r\n    '(keydown)': '_handleKeydown($event)',\r\n    'class': 'mat-option',\r\n  },\r\n  styleUrls: ['option.css'],\r\n  templateUrl: 'option.html',\r\n  encapsulation: ViewEncapsulation.None,\r\n  preserveWhitespaces: false,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class MatOption implements AfterViewChecked {\r\n  private _selected = false;\r\n  private _active = false;\r\n  private _disabled = false;\r\n  private _id = `mat-option-${_uniqueIdCounter++}`;\r\n  private _mostRecentViewValue = '';\r\n\r\n  /** Whether the wrapping component is in multiple selection mode. */\r\n  get multiple() { return this._parent && this._parent.multiple; }\r\n\r\n  /** The unique ID of the option. */\r\n  get id(): string { return this._id; }\r\n\r\n  /** Whether or not the option is currently selected. */\r\n  get selected(): boolean { return this._selected; }\r\n\r\n  /** The form value of the option. */\r\n  @Input() value: any;\r\n\r\n  /** Whether the option is disabled. */\r\n  @Input()\r\n  get disabled() { return (this.group && this.group.disabled) || this._disabled; }\r\n  set disabled(value: any) { this._disabled = coerceBooleanProperty(value); }\r\n\r\n  /** Whether ripples for the option are disabled. */\r\n  get disableRipple() { return this._parent && this._parent.disableRipple; }\r\n\r\n  /** Event emitted when the option is selected or deselected. */\r\n  @Output() readonly onSelectionChange = new EventEmitter<MatOptionSelectionChange>();\r\n\r\n  /** Emits when the state of the option changes and any parents have to be notified. */\r\n  readonly _stateChanges = new Subject<void>();\r\n\r\n  constructor(\r\n    private _element: ElementRef,\r\n    private _changeDetectorRef: ChangeDetectorRef,\r\n    @Optional() @Inject(MAT_OPTION_PARENT_COMPONENT) private _parent: MatOptionParentComponent,\r\n    @Optional() readonly group: MatOptgroup) {}\r\n\r\n  /**\r\n   * Whether or not the option is currently active and ready to be selected.\r\n   * An active option displays styles as if it is focused, but the\r\n   * focus is actually retained somewhere else. This comes in handy\r\n   * for components like autocomplete where focus must remain on the input.\r\n   */\r\n  get active(): boolean {\r\n    return this._active;\r\n  }\r\n\r\n  /**\r\n   * The displayed value of the option. It is necessary to show the selected option in the\r\n   * select's trigger.\r\n   */\r\n  get viewValue(): string {\r\n    // TODO(kara): Add input property alternative for node envs.\r\n    return (this._getHostElement().textContent || '').trim();\r\n  }\r\n\r\n  /** Selects the option. */\r\n  select(): void {\r\n    this._selected = true;\r\n    this._changeDetectorRef.markForCheck();\r\n    this._emitSelectionChangeEvent();\r\n  }\r\n\r\n  /** Deselects the option. */\r\n  deselect(): void {\r\n    this._selected = false;\r\n    this._changeDetectorRef.markForCheck();\r\n    this._emitSelectionChangeEvent();\r\n  }\r\n\r\n  /** Sets focus onto this option. */\r\n  focus(): void {\r\n    const element = this._getHostElement();\r\n\r\n    if (typeof element.focus === 'function') {\r\n      element.focus();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * This method sets display styles on the option to make it appear\r\n   * active. This is used by the ActiveDescendantKeyManager so key\r\n   * events will display the proper options as active on arrow key events.\r\n   */\r\n  setActiveStyles(): void {\r\n    if (!this._active) {\r\n      this._active = true;\r\n      this._changeDetectorRef.markForCheck();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * This method removes display styles on the option that made it appear\r\n   * active. This is used by the ActiveDescendantKeyManager so key\r\n   * events will display the proper options as active on arrow key events.\r\n   */\r\n  setInactiveStyles(): void {\r\n    if (this._active) {\r\n      this._active = false;\r\n      this._changeDetectorRef.markForCheck();\r\n    }\r\n  }\r\n\r\n  /** Gets the label to be used when determining whether the option should be focused. */\r\n  getLabel(): string {\r\n    return this.viewValue;\r\n  }\r\n\r\n  /** Ensures the option is selected when activated from the keyboard. */\r\n  _handleKeydown(event: KeyboardEvent): void {\r\n    if (event.keyCode === ENTER || event.keyCode === SPACE) {\r\n      this._selectViaInteraction();\r\n\r\n      // Prevent the page from scrolling down and form submits.\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * `Selects the option while indicating the selection came from the user. Used to\r\n   * determine if the select's view -> model callback should be invoked.`\r\n   */\r\n  _selectViaInteraction(): void {\r\n    if (!this.disabled) {\r\n      this._selected = this.multiple ? !this._selected : true;\r\n      this._changeDetectorRef.markForCheck();\r\n      this._emitSelectionChangeEvent(true);\r\n    }\r\n  }\r\n\r\n  /** Returns the correct tabindex for the option depending on disabled state. */\r\n  _getTabIndex(): string {\r\n    return this.disabled ? '-1' : '0';\r\n  }\r\n\r\n  /** Gets the host DOM element. */\r\n  _getHostElement(): HTMLElement {\r\n    return this._element.nativeElement;\r\n  }\r\n\r\n  ngAfterViewChecked() {\r\n    // Since parent components could be using the option's label to display the selected values\r\n    // (e.g. `mat-select`) and they don't have a way of knowing if the option's label has changed\r\n    // we have to check for changes in the DOM ourselves and dispatch an event. These checks are\r\n    // relatively cheap, however we still limit them only to selected options in order to avoid\r\n    // hitting the DOM too often.\r\n    if (this._selected) {\r\n      const viewValue = this.viewValue;\r\n\r\n      if (viewValue !== this._mostRecentViewValue) {\r\n        this._mostRecentViewValue = viewValue;\r\n        this._stateChanges.next();\r\n      }\r\n    }\r\n  }\r\n\r\n  /** Emits the selection change event. */\r\n  private _emitSelectionChangeEvent(isUserInput = false): void {\r\n    this.onSelectionChange.emit(new MatOptionSelectionChange(this, isUserInput));\r\n  }\r\n}\r\n\r\n/**\r\n * Counts the amount of option group labels that precede the specified option.\r\n * @param optionIndex Index of the option at which to start counting.\r\n * @param options Flat list of all of the options.\r\n * @param optionGroups Flat list of all of the option groups.\r\n * @docs-private\r\n */\r\nexport function _countGroupLabelsBeforeOption(optionIndex: number, options: QueryList<MatOption>,\r\n  optionGroups: QueryList<MatOptgroup>): number {\r\n\r\n  if (optionGroups.length) {\r\n    let optionsArray = options.toArray();\r\n    let groups = optionGroups.toArray();\r\n    let groupCounter = 0;\r\n\r\n    for (let i = 0; i < optionIndex + 1; i++) {\r\n      if (optionsArray[i].group && optionsArray[i].group === groups[groupCounter]) {\r\n        groupCounter++;\r\n      }\r\n    }\r\n\r\n    return groupCounter;\r\n  }\r\n\r\n  return 0;\r\n}\r\n\r\n/**\r\n * Determines the position to which to scroll a panel in order for an option to be into view.\r\n * @param optionIndex Index of the option to be scrolled into the view.\r\n * @param optionHeight Height of the options.\r\n * @param currentScrollPosition Current scroll position of the panel.\r\n * @param panelHeight Height of the panel.\r\n * @docs-private\r\n */\r\nexport function _getOptionScrollPosition(optionIndex: number, optionHeight: number,\r\n    currentScrollPosition: number, panelHeight: number): number {\r\n  const optionOffset = optionIndex * optionHeight;\r\n\r\n  if (optionOffset < currentScrollPosition) {\r\n    return optionOffset;\r\n  }\r\n\r\n  if (optionOffset + optionHeight > currentScrollPosition + panelHeight) {\r\n    return Math.max(0, optionOffset - panelHeight + optionHeight);\r\n  }\r\n\r\n  return currentScrollPosition;\r\n}\r\n\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {Component, ViewEncapsulation, Input, ChangeDetectionStrategy} from '@angular/core';\r\nimport {mixinDisabled, CanDisable} from '../common-behaviors/disabled';\r\n\r\n// Boilerplate for applying mixins to MatOptgroup.\r\n/** @docs-private */\r\nexport class MatOptgroupBase { }\r\nexport const _MatOptgroupMixinBase = mixinDisabled(MatOptgroupBase);\r\n\r\n// Counter for unique group ids.\r\nlet _uniqueOptgroupIdCounter = 0;\r\n\r\n/**\r\n * Component that is used to group instances of `mat-option`.\r\n */\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'mat-optgroup',\r\n  exportAs: 'matOptgroup',\r\n  templateUrl: 'optgroup.html',\r\n  encapsulation: ViewEncapsulation.None,\r\n  preserveWhitespaces: false,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  inputs: ['disabled'],\r\n  styleUrls: ['optgroup.css'],\r\n  host: {\r\n    'class': 'mat-optgroup',\r\n    'role': 'group',\r\n    '[class.mat-optgroup-disabled]': 'disabled',\r\n    '[attr.aria-disabled]': 'disabled.toString()',\r\n    '[attr.aria-labelledby]': '_labelId',\r\n  }\r\n})\r\nexport class MatOptgroup extends _MatOptgroupMixinBase implements CanDisable {\r\n  /** Label for the option group. */\r\n  @Input() label: string;\r\n\r\n  /** Unique id for the underlying label. */\r\n  _labelId: string = `mat-optgroup-label-${_uniqueOptgroupIdCounter++}`;\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {NgModule} from '@angular/core';\r\nimport {MatPseudoCheckbox} from './pseudo-checkbox/pseudo-checkbox';\r\n\r\n\r\n@NgModule({\r\n  exports: [MatPseudoCheckbox],\r\n  declarations: [MatPseudoCheckbox]\r\n})\r\nexport class MatPseudoCheckboxModule { }\r\n\r\n\r\nexport * from './pseudo-checkbox/pseudo-checkbox';\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {Component, ViewEncapsulation, Input, ChangeDetectionStrategy} from '@angular/core';\r\n\r\nexport type MatPseudoCheckboxState = 'unchecked' | 'checked' | 'indeterminate';\r\n\r\n/**\r\n * Component that shows a simplified checkbox without including any kind of \"real\" checkbox.\r\n * Meant to be used when the checkbox is purely decorative and a large number of them will be\r\n * included, such as for the options in a multi-select. Uses no SVGs or complex animations.\r\n * Note that theming is meant to be handled by the parent element, e.g.\r\n * `mat-primary .mat-pseudo-checkbox`.\r\n *\r\n * Note that this component will be completely invisible to screen-reader users. This is *not*\r\n * interchangeable with `<mat-checkbox>` and should *not* be used if the user would directly\r\n * interact with the checkbox. The pseudo-checkbox should only be used as an implementation detail\r\n * of more complex components that appropriately handle selected / checked state.\r\n * @docs-private\r\n */\r\n@Component({\r\n  moduleId: module.id,\r\n  encapsulation: ViewEncapsulation.None,\r\n  preserveWhitespaces: false,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  selector: 'mat-pseudo-checkbox',\r\n  styleUrls: ['pseudo-checkbox.css'],\r\n  template: '',\r\n  host: {\r\n    'class': 'mat-pseudo-checkbox',\r\n    '[class.mat-pseudo-checkbox-indeterminate]': 'state === \"indeterminate\"',\r\n    '[class.mat-pseudo-checkbox-checked]': 'state === \"checked\"',\r\n    '[class.mat-pseudo-checkbox-disabled]': 'disabled',\r\n  },\r\n})\r\nexport class MatPseudoCheckbox {\r\n  /** Display state of the checkbox. */\r\n  @Input() state: MatPseudoCheckboxState = 'unchecked';\r\n\r\n  /** Whether the checkbox is disabled. */\r\n  @Input() disabled: boolean = false;\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {NgModule} from '@angular/core';\r\nimport {PlatformModule} from '@angular/cdk/platform';\r\nimport {MatCommonModule} from '../common-behaviors/common-module';\r\nimport {MatRipple} from './ripple';\r\n\r\nexport * from './ripple';\r\nexport * from './ripple-ref';\r\nexport * from './ripple-renderer';\r\n\r\n@NgModule({\r\n  imports: [MatCommonModule, PlatformModule],\r\n  exports: [MatRipple, MatCommonModule],\r\n  declarations: [MatRipple],\r\n})\r\nexport class MatRippleModule {}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {Platform} from '@angular/cdk/platform';\r\nimport {\r\n  Directive,\r\n  ElementRef,\r\n  Inject,\r\n  InjectionToken,\r\n  Input,\r\n  NgZone,\r\n  OnDestroy,\r\n  OnInit,\r\n  Optional,\r\n} from '@angular/core';\r\nimport {RippleRef} from './ripple-ref';\r\nimport {RippleAnimationConfig, RippleConfig, RippleRenderer, RippleTarget} from './ripple-renderer';\r\n\r\n/** Configurable options for `matRipple`. */\r\nexport interface RippleGlobalOptions {\r\n  /**\r\n   * Whether ripples should be disabled. Ripples can be still launched manually by using\r\n   * the `launch()` method. Therefore focus indicators will still show up.\r\n   */\r\n  disabled?: boolean;\r\n\r\n  /**\r\n   * Configuration for the animation duration of the ripples.\r\n   * There are two phases with different durations for the ripples.\r\n   */\r\n  animation?: RippleAnimationConfig;\r\n\r\n  /**\r\n   * If set, the default duration of the fade-in animation is divided by this value. For example,\r\n   * setting it to 0.5 will cause the ripple fade-in animation to take twice as long.\r\n   * A changed speedFactor will not affect the fade-out duration of the ripples.\r\n   * @deprecated Use the `animation` global option instead.\r\n   * @deletion-target 7.0.0\r\n   */\r\n  baseSpeedFactor?: number;\r\n\r\n  /**\r\n   * Whether ripples should start fading out immediately after the mouse our touch is released. By\r\n   * default, ripples will wait for the enter animation to complete and for mouse or touch release.\r\n   */\r\n  terminateOnPointerUp?: boolean;\r\n}\r\n\r\n/** Injection token that can be used to specify the global ripple options. */\r\nexport const MAT_RIPPLE_GLOBAL_OPTIONS =\r\n    new InjectionToken<RippleGlobalOptions>('mat-ripple-global-options');\r\n\r\n@Directive({\r\n  selector: '[mat-ripple], [matRipple]',\r\n  exportAs: 'matRipple',\r\n  host: {\r\n    'class': 'mat-ripple',\r\n    '[class.mat-ripple-unbounded]': 'unbounded'\r\n  }\r\n})\r\nexport class MatRipple implements OnInit, OnDestroy, RippleTarget {\r\n\r\n  /** Custom color for all ripples. */\r\n  @Input('matRippleColor') color: string;\r\n\r\n  /** Whether the ripples should be visible outside the component's bounds. */\r\n  @Input('matRippleUnbounded') unbounded: boolean;\r\n\r\n  /**\r\n   * Whether the ripple always originates from the center of the host element's bounds, rather\r\n   * than originating from the location of the click event.\r\n   */\r\n  @Input('matRippleCentered') centered: boolean;\r\n\r\n  /**\r\n   * If set, the radius in pixels of foreground ripples when fully expanded. If unset, the radius\r\n   * will be the distance from the center of the ripple to the furthest corner of the host element's\r\n   * bounding rectangle.\r\n   */\r\n  @Input('matRippleRadius') radius: number = 0;\r\n\r\n  /**\r\n   * If set, the normal duration of ripple animations is divided by this value. For example,\r\n   * setting it to 0.5 will cause the animations to take twice as long.\r\n   * A changed speedFactor will not modify the fade-out duration of the ripples.\r\n   * @deprecated Use the [matRippleAnimation] binding instead.\r\n   * @deletion-target 7.0.0\r\n   */\r\n  @Input('matRippleSpeedFactor') speedFactor: number = 1;\r\n\r\n  /**\r\n   * Configuration for the ripple animation. Allows modifying the enter and exit animation\r\n   * duration of the ripples.\r\n   */\r\n  @Input('matRippleAnimation') animation: RippleAnimationConfig;\r\n\r\n  /**\r\n   * Whether click events will not trigger the ripple. Ripples can be still launched manually\r\n   * by using the `launch()` method.\r\n   */\r\n  @Input('matRippleDisabled')\r\n  get disabled() { return this._disabled; }\r\n  set disabled(value: boolean) {\r\n    this._disabled = value;\r\n    this._setupTriggerEventsIfEnabled();\r\n  }\r\n  private _disabled: boolean = false;\r\n\r\n  /**\r\n   * The element that triggers the ripple when click events are received.\r\n   * Defaults to the directive's host element.\r\n   */\r\n  @Input('matRippleTrigger')\r\n  get trigger() { return this._trigger || this._elementRef.nativeElement; }\r\n  set trigger(trigger: HTMLElement) {\r\n    this._trigger = trigger;\r\n    this._setupTriggerEventsIfEnabled();\r\n  }\r\n  private _trigger: HTMLElement;\r\n\r\n  /** Renderer for the ripple DOM manipulations. */\r\n  private _rippleRenderer: RippleRenderer;\r\n\r\n  /** Options that are set globally for all ripples. */\r\n  private _globalOptions: RippleGlobalOptions;\r\n\r\n  /** Whether ripple directive is initialized and the input bindings are set. */\r\n  private _isInitialized: boolean = false;\r\n\r\n  constructor(private _elementRef: ElementRef,\r\n              ngZone: NgZone,\r\n              platform: Platform,\r\n              @Optional() @Inject(MAT_RIPPLE_GLOBAL_OPTIONS) globalOptions: RippleGlobalOptions) {\r\n\r\n    this._globalOptions = globalOptions || {};\r\n    this._rippleRenderer = new RippleRenderer(this, ngZone, _elementRef, platform);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this._isInitialized = true;\r\n    this._setupTriggerEventsIfEnabled();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this._rippleRenderer._removeTriggerEvents();\r\n  }\r\n\r\n  /** Fades out all currently showing ripple elements. */\r\n  fadeOutAll() {\r\n    this._rippleRenderer.fadeOutAll();\r\n  }\r\n\r\n  /** Ripple configuration from the directive's input values. */\r\n  get rippleConfig(): RippleConfig {\r\n    return {\r\n      centered: this.centered,\r\n      radius: this.radius,\r\n      color: this.color,\r\n      animation: {...this._globalOptions.animation, ...this.animation},\r\n      terminateOnPointerUp: this._globalOptions.terminateOnPointerUp,\r\n      speedFactor: this.speedFactor * (this._globalOptions.baseSpeedFactor || 1),\r\n    };\r\n  }\r\n\r\n  /** Whether ripples on pointer-down are disabled or not. */\r\n  get rippleDisabled(): boolean {\r\n    return this.disabled || !!this._globalOptions.disabled;\r\n  }\r\n\r\n  /** Sets up the the trigger event listeners if ripples are enabled. */\r\n  private _setupTriggerEventsIfEnabled() {\r\n    if (!this.disabled && this._isInitialized) {\r\n      this._rippleRenderer.setupTriggerEvents(this.trigger);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Launches a manual ripple using the specified ripple configuration.\r\n   * @param config Configuration for the manual ripple.\r\n   */\r\n  launch(config: RippleConfig): RippleRef;\r\n\r\n  /**\r\n   * Launches a manual ripple at the specified coordinates within the element.\r\n   * @param x Coordinate within the element, along the X axis at which to fade-in the ripple.\r\n   * @param y Coordinate within the element, along the Y axis at which to fade-in the ripple.\r\n   * @param config Optional ripple configuration for the manual ripple.\r\n   */\r\n  launch(x: number, y: number, config?: RippleConfig): RippleRef;\r\n\r\n  /** Launches a manual ripple at the specified coordinated or just by the ripple config. */\r\n  launch(configOrX: number | RippleConfig, y: number = 0, config?: RippleConfig): RippleRef {\r\n    if (typeof configOrX === 'number') {\r\n      return this._rippleRenderer.fadeInRipple(configOrX, y, {...this.rippleConfig, ...config});\r\n    } else {\r\n      return this._rippleRenderer.fadeInRipple(0, 0, {...this.rippleConfig, ...configOrX});\r\n    }\r\n  }\r\n}\r\n\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\nimport {ElementRef, NgZone} from '@angular/core';\r\nimport {Platform, supportsPassiveEventListeners} from '@angular/cdk/platform';\r\nimport {RippleRef, RippleState} from './ripple-ref';\r\n\r\nexport type RippleConfig = {\r\n  color?: string;\r\n  centered?: boolean;\r\n  radius?: number;\r\n  persistent?: boolean;\r\n  animation?: RippleAnimationConfig;\r\n  terminateOnPointerUp?: boolean;\r\n  /**\r\n   * @deprecated Use the `animation` property instead.\r\n   * @deletion-target 7.0.0\r\n   */\r\n  speedFactor?: number;\r\n};\r\n\r\n/**\r\n * Interface that describes the configuration for the animation of a ripple.\r\n * There are two animation phases with different durations for the ripples.\r\n */\r\nexport interface RippleAnimationConfig {\r\n  /** Duration in milliseconds for the enter animation (expansion from point of contact). */\r\n  enterDuration?: number;\r\n  /** Duration in milliseconds for the exit animation (fade-out). */\r\n  exitDuration?: number;\r\n}\r\n\r\n/**\r\n * Interface that describes the target for launching ripples.\r\n * It defines the ripple configuration and disabled state for interaction ripples.\r\n * @docs-private\r\n */\r\nexport interface RippleTarget {\r\n  /** Configuration for ripples that are launched on pointer down. */\r\n  rippleConfig: RippleConfig;\r\n  /** Whether ripples on pointer down should be disabled. */\r\n  rippleDisabled: boolean;\r\n}\r\n\r\n/**\r\n * Default ripple animation configuration for ripples without an explicit\r\n * animation config specified.\r\n */\r\nexport const defaultRippleAnimationConfig = {\r\n  enterDuration: 450,\r\n  exitDuration: 400\r\n};\r\n\r\n/**\r\n * Timeout for ignoring mouse events. Mouse events will be temporary ignored after touch\r\n * events to avoid synthetic mouse events.\r\n */\r\nconst ignoreMouseEventsTimeout = 800;\r\n\r\n/**\r\n * Helper service that performs DOM manipulations. Not intended to be used outside this module.\r\n * The constructor takes a reference to the ripple directive's host element and a map of DOM\r\n * event handlers to be installed on the element that triggers ripple animations.\r\n * This will eventually become a custom renderer once Angular support exists.\r\n * @docs-private\r\n */\r\nexport class RippleRenderer {\r\n\r\n  /** Element where the ripples are being added to. */\r\n  private _containerElement: HTMLElement;\r\n\r\n  /** Element which triggers the ripple elements on mouse events. */\r\n  private _triggerElement: HTMLElement | null;\r\n\r\n  /** Whether the pointer is currently down or not. */\r\n  private _isPointerDown = false;\r\n\r\n  /** Events to be registered on the trigger element. */\r\n  private _triggerEvents = new Map<string, any>();\r\n\r\n  /** Set of currently active ripple references. */\r\n  private _activeRipples = new Set<RippleRef>();\r\n\r\n  /** Time in milliseconds when the last touchstart event happened. */\r\n  private _lastTouchStartEvent: number;\r\n\r\n  /** Options that apply to all the event listeners that are bound by the renderer. */\r\n  private _eventOptions = supportsPassiveEventListeners() ? ({passive: true} as any) : false;\r\n\r\n  constructor(private _target: RippleTarget,\r\n              private _ngZone: NgZone,\r\n              elementRef: ElementRef,\r\n              platform: Platform) {\r\n\r\n    // Only do anything if we're on the browser.\r\n    if (platform.isBrowser) {\r\n      this._containerElement = elementRef.nativeElement;\r\n\r\n      // Specify events which need to be registered on the trigger.\r\n      this._triggerEvents.set('mousedown', this.onMousedown);\r\n      this._triggerEvents.set('mouseup', this.onPointerUp);\r\n      this._triggerEvents.set('mouseleave', this.onPointerUp);\r\n\r\n      this._triggerEvents.set('touchstart', this.onTouchStart);\r\n      this._triggerEvents.set('touchend', this.onPointerUp);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Fades in a ripple at the given coordinates.\r\n   * @param x Coordinate within the element, along the X axis at which to start the ripple.\r\n   * @param y Coordinate within the element, along the Y axis at which to start the ripple.\r\n   * @param config Extra ripple options.\r\n   */\r\n  fadeInRipple(x: number, y: number, config: RippleConfig = {}): RippleRef {\r\n    const containerRect = this._containerElement.getBoundingClientRect();\r\n    const animationConfig = {...defaultRippleAnimationConfig, ...config.animation};\r\n\r\n    if (config.centered) {\r\n      x = containerRect.left + containerRect.width / 2;\r\n      y = containerRect.top + containerRect.height / 2;\r\n    }\r\n\r\n    const radius = config.radius || distanceToFurthestCorner(x, y, containerRect);\r\n    const offsetX = x - containerRect.left;\r\n    const offsetY = y - containerRect.top;\r\n    const duration = animationConfig.enterDuration / (config.speedFactor || 1);\r\n\r\n    const ripple = document.createElement('div');\r\n    ripple.classList.add('mat-ripple-element');\r\n\r\n    ripple.style.left = `${offsetX - radius}px`;\r\n    ripple.style.top = `${offsetY - radius}px`;\r\n    ripple.style.height = `${radius * 2}px`;\r\n    ripple.style.width = `${radius * 2}px`;\r\n\r\n    // If the color is not set, the default CSS color will be used.\r\n    ripple.style.backgroundColor = config.color || null;\r\n    ripple.style.transitionDuration = `${duration}ms`;\r\n\r\n    this._containerElement.appendChild(ripple);\r\n\r\n    // By default the browser does not recalculate the styles of dynamically created\r\n    // ripple elements. This is critical because then the `scale` would not animate properly.\r\n    enforceStyleRecalculation(ripple);\r\n\r\n    ripple.style.transform = 'scale(1)';\r\n\r\n    // Exposed reference to the ripple that will be returned.\r\n    const rippleRef = new RippleRef(this, ripple, config);\r\n\r\n    rippleRef.state = RippleState.FADING_IN;\r\n\r\n    // Add the ripple reference to the list of all active ripples.\r\n    this._activeRipples.add(rippleRef);\r\n\r\n    // Wait for the ripple element to be completely faded in.\r\n    // Once it's faded in, the ripple can be hidden immediately if the mouse is released.\r\n    this.runTimeoutOutsideZone(() => {\r\n      rippleRef.state = RippleState.VISIBLE;\r\n\r\n      if (!config.persistent && !this._isPointerDown) {\r\n        rippleRef.fadeOut();\r\n      }\r\n    }, duration);\r\n\r\n    return rippleRef;\r\n  }\r\n\r\n  /** Fades out a ripple reference. */\r\n  fadeOutRipple(rippleRef: RippleRef) {\r\n    // For ripples that are not active anymore, don't re-un the fade-out animation.\r\n    if (!this._activeRipples.delete(rippleRef)) {\r\n      return;\r\n    }\r\n\r\n    const rippleEl = rippleRef.element;\r\n    const animationConfig = {...defaultRippleAnimationConfig, ...rippleRef.config.animation};\r\n\r\n    rippleEl.style.transitionDuration = `${animationConfig.exitDuration}ms`;\r\n    rippleEl.style.opacity = '0';\r\n\r\n    rippleRef.state = RippleState.FADING_OUT;\r\n\r\n    // Once the ripple faded out, the ripple can be safely removed from the DOM.\r\n    this.runTimeoutOutsideZone(() => {\r\n      rippleRef.state = RippleState.HIDDEN;\r\n      rippleEl.parentNode!.removeChild(rippleEl);\r\n    }, animationConfig.exitDuration);\r\n  }\r\n\r\n  /** Fades out all currently active ripples. */\r\n  fadeOutAll() {\r\n    this._activeRipples.forEach(ripple => ripple.fadeOut());\r\n  }\r\n\r\n  /** Sets up the trigger event listeners */\r\n  setupTriggerEvents(element: HTMLElement) {\r\n    if (!element || element === this._triggerElement) {\r\n      return;\r\n    }\r\n\r\n    // Remove all previously registered event listeners from the trigger element.\r\n    this._removeTriggerEvents();\r\n\r\n    this._ngZone.runOutsideAngular(() => {\r\n      this._triggerEvents.forEach((fn, type) =>\r\n          element.addEventListener(type, fn, this._eventOptions));\r\n    });\r\n\r\n    this._triggerElement = element;\r\n  }\r\n\r\n  /** Function being called whenever the trigger is being pressed using mouse. */\r\n  private onMousedown = (event: MouseEvent) => {\r\n    const isSyntheticEvent = this._lastTouchStartEvent &&\r\n        Date.now() < this._lastTouchStartEvent + ignoreMouseEventsTimeout;\r\n\r\n    if (!this._target.rippleDisabled && !isSyntheticEvent) {\r\n      this._isPointerDown = true;\r\n      this.fadeInRipple(event.clientX, event.clientY, this._target.rippleConfig);\r\n    }\r\n  }\r\n\r\n  /** Function being called whenever the trigger is being pressed using touch. */\r\n  private onTouchStart = (event: TouchEvent) => {\r\n    if (!this._target.rippleDisabled) {\r\n      // Some browsers fire mouse events after a `touchstart` event. Those synthetic mouse\r\n      // events will launch a second ripple if we don't ignore mouse events for a specific\r\n      // time after a touchstart event.\r\n      this._lastTouchStartEvent = Date.now();\r\n      this._isPointerDown = true;\r\n\r\n      this.fadeInRipple(\r\n          event.touches[0].clientX, event.touches[0].clientY, this._target.rippleConfig);\r\n    }\r\n  }\r\n\r\n  /** Function being called whenever the trigger is being released. */\r\n  private onPointerUp = () => {\r\n    if (!this._isPointerDown) {\r\n      return;\r\n    }\r\n\r\n    this._isPointerDown = false;\r\n\r\n    // Fade-out all ripples that are visible and not persistent.\r\n    this._activeRipples.forEach(ripple => {\r\n      // By default, only ripples that are completely visible will fade out on pointer release.\r\n      // If the `terminateOnPointerUp` option is set, ripples that still fade in will also fade out.\r\n      const isVisible = ripple.state === RippleState.VISIBLE ||\r\n        ripple.config.terminateOnPointerUp && ripple.state === RippleState.FADING_IN;\r\n\r\n      if (!ripple.config.persistent && isVisible) {\r\n        ripple.fadeOut();\r\n      }\r\n    });\r\n  }\r\n\r\n  /** Runs a timeout outside of the Angular zone to avoid triggering the change detection. */\r\n  private runTimeoutOutsideZone(fn: Function, delay = 0) {\r\n    this._ngZone.runOutsideAngular(() => setTimeout(fn, delay));\r\n  }\r\n\r\n  /** Removes previously registered event listeners from the trigger element. */\r\n  _removeTriggerEvents() {\r\n    if (this._triggerElement) {\r\n      this._triggerEvents.forEach((fn, type) => {\r\n        this._triggerElement!.removeEventListener(type, fn, this._eventOptions);\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\n/** Enforces a style recalculation of a DOM element by computing its styles. */\r\nfunction enforceStyleRecalculation(element: HTMLElement) {\r\n  // Enforce a style recalculation by calling `getComputedStyle` and accessing any property.\r\n  // Calling `getPropertyValue` is important to let optimizers know that this is not a noop.\r\n  // See: https://gist.github.com/paulirish/5d52fb081b3570c81e3a\r\n  window.getComputedStyle(element).getPropertyValue('opacity');\r\n}\r\n\r\n/**\r\n * Returns the distance from the point (x, y) to the furthest corner of a rectangle.\r\n */\r\nfunction distanceToFurthestCorner(x: number, y: number, rect: ClientRect) {\r\n  const distX = Math.max(Math.abs(x - rect.left), Math.abs(x - rect.right));\r\n  const distY = Math.max(Math.abs(y - rect.top), Math.abs(y - rect.bottom));\r\n  return Math.sqrt(distX * distX + distY * distY);\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {RippleConfig, RippleRenderer} from './ripple-renderer';\r\n\r\n/** Possible states for a ripple element. */\r\nexport enum RippleState {\r\n  FADING_IN, VISIBLE, FADING_OUT, HIDDEN\r\n}\r\n\r\n/**\r\n * Reference to a previously launched ripple element.\r\n */\r\nexport class RippleRef {\r\n\r\n  /** Current state of the ripple reference. */\r\n  state: RippleState = RippleState.HIDDEN;\r\n\r\n  constructor(\r\n    private _renderer: RippleRenderer,\r\n    public element: HTMLElement,\r\n    public config: RippleConfig) {\r\n  }\r\n\r\n  /** Fades out the ripple element. */\r\n  fadeOut() {\r\n    this._renderer.fadeOutRipple(this);\r\n  }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {\r\n  NgModule,\r\n  Directive,\r\n  ElementRef,\r\n  QueryList,\r\n} from '@angular/core';\r\nimport {MatCommonModule} from '../common-behaviors/common-module';\r\n\r\n\r\n/**\r\n * Shared directive to count lines inside a text area, such as a list item.\r\n * Line elements can be extracted with a @ContentChildren(MatLine) query, then\r\n * counted by checking the query list's length.\r\n */\r\n@Directive({\r\n  selector: '[mat-line], [matLine]',\r\n  host: {'class': 'mat-line'}\r\n})\r\nexport class MatLine {}\r\n\r\n/**\r\n * Helper that takes a query list of lines and sets the correct class on the host.\r\n * @docs-private\r\n */\r\nexport class MatLineSetter {\r\n  constructor(private _lines: QueryList<MatLine>, private _element: ElementRef) {\r\n    this._setLineClass(this._lines.length);\r\n\r\n    this._lines.changes.subscribe(() => {\r\n      this._setLineClass(this._lines.length);\r\n    });\r\n  }\r\n\r\n  private _setLineClass(count: number): void {\r\n    this._resetClasses();\r\n    if (count === 2 || count === 3) {\r\n      this._setClass(`mat-${count}-line`, true);\r\n    } else if (count > 3) {\r\n      this._setClass(`mat-multi-line`, true);\r\n    }\r\n  }\r\n\r\n  private _resetClasses(): void {\r\n    this._setClass('mat-2-line', false);\r\n    this._setClass('mat-3-line', false);\r\n    this._setClass('mat-multi-line', false);\r\n  }\r\n\r\n  private _setClass(className: string, isAdd: boolean): void {\r\n    if (isAdd) {\r\n      this._element.nativeElement.classList.add(className);\r\n    } else {\r\n      this._element.nativeElement.classList.remove(className);\r\n    }\r\n  }\r\n\r\n}\r\n\r\n@NgModule({\r\n  imports: [MatCommonModule],\r\n  exports: [MatLine, MatCommonModule],\r\n  declarations: [MatLine],\r\n})\r\nexport class MatLineModule { }\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {Injectable, InjectionToken, Inject, Optional} from '@angular/core';\r\nimport {HammerGestureConfig} from '@angular/platform-browser';\r\nimport {MatCommonModule} from '../common-behaviors/common-module';\r\nimport {\r\n  HammerStatic,\r\n  HammerInstance,\r\n  Recognizer,\r\n  RecognizerStatic,\r\n  HammerOptions,\r\n} from './gesture-annotations';\r\n\r\n/**\r\n * Injection token that can be used to provide options to the Hammerjs instance.\r\n * More info at http://hammerjs.github.io/api/.\r\n */\r\nexport const MAT_HAMMER_OPTIONS = new InjectionToken<HammerOptions>('MAT_HAMMER_OPTIONS');\r\n\r\n/** Adjusts configuration of our gesture library, Hammer. */\r\n@Injectable()\r\nexport class GestureConfig extends HammerGestureConfig {\r\n  private _hammer: HammerStatic = typeof window !== 'undefined' ? (window as any).Hammer : null;\r\n\r\n  /** List of new event names to add to the gesture support list */\r\n  events: string[] = this._hammer ? [\r\n    'longpress',\r\n    'slide',\r\n    'slidestart',\r\n    'slideend',\r\n    'slideright',\r\n    'slideleft'\r\n  ] : [];\r\n\r\n  constructor(\r\n    @Optional() @Inject(MAT_HAMMER_OPTIONS) private _hammerOptions?: HammerOptions,\r\n    @Optional() commonModule?: MatCommonModule) {\r\n    super();\r\n    if (commonModule) {\r\n      commonModule._checkHammerIsAvailable();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Builds Hammer instance manually to add custom recognizers that match the Material Design spec.\r\n   *\r\n   * Our gesture names come from the Material Design gestures spec:\r\n   * https://www.google.com/design/spec/patterns/gestures.html#gestures-touch-mechanics\r\n   *\r\n   * More information on default recognizers can be found in Hammer docs:\r\n   * http://hammerjs.github.io/recognizer-pan/\r\n   * http://hammerjs.github.io/recognizer-press/\r\n   *\r\n   * @param element Element to which to assign the new HammerJS gestures.\r\n   * @returns Newly-created HammerJS instance.\r\n   */\r\n  buildHammer(element: HTMLElement): HammerInstance {\r\n    const mc = new this._hammer(element, this._hammerOptions || undefined);\r\n\r\n    // Default Hammer Recognizers.\r\n    const pan = new this._hammer.Pan();\r\n    const swipe = new this._hammer.Swipe();\r\n    const press = new this._hammer.Press();\r\n\r\n    // Notice that a HammerJS recognizer can only depend on one other recognizer once.\r\n    // Otherwise the previous `recognizeWith` will be dropped.\r\n    // TODO: Confirm threshold numbers with Material Design UX Team\r\n    const slide = this._createRecognizer(pan, {event: 'slide', threshold: 0}, swipe);\r\n    const longpress = this._createRecognizer(press, {event: 'longpress', time: 500});\r\n\r\n    // Overwrite the default `pan` event to use the swipe event.\r\n    pan.recognizeWith(swipe);\r\n\r\n    // Add customized gestures to Hammer manager\r\n    mc.add([swipe, press, pan, slide, longpress]);\r\n\r\n    return mc as HammerInstance;\r\n  }\r\n\r\n  /** Creates a new recognizer, without affecting the default recognizers of HammerJS */\r\n  private _createRecognizer(base: Recognizer, options: any, ...inheritances: Recognizer[]) {\r\n    let recognizer = new (base.constructor as RecognizerStatic)(options);\r\n\r\n    inheritances.push(base);\r\n    inheritances.forEach(item => recognizer.recognizeWith(item));\r\n\r\n    return recognizer;\r\n  }\r\n\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {Injectable} from '@angular/core';\r\nimport {FormGroupDirective, NgForm, FormControl} from '@angular/forms';\r\n\r\n/** Error state matcher that matches when a control is invalid and dirty. */\r\n@Injectable()\r\nexport class ShowOnDirtyErrorStateMatcher implements ErrorStateMatcher {\r\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\r\n    return !!(control && control.invalid && (control.dirty || (form && form.submitted)));\r\n  }\r\n}\r\n\r\n/** Provider that defines how form controls behave with regards to displaying error messages. */\r\n@Injectable()\r\nexport class ErrorStateMatcher {\r\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\r\n    return !!(control && control.invalid && (control.touched || (form && form.submitted)));\r\n  }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {NgModule} from '@angular/core';\r\nimport {DateAdapter, MAT_DATE_LOCALE_PROVIDER} from './date-adapter';\r\nimport {MAT_DATE_FORMATS} from './date-formats';\r\nimport {NativeDateAdapter} from './native-date-adapter';\r\nimport {MAT_NATIVE_DATE_FORMATS} from './native-date-formats';\r\n\r\nexport * from './date-adapter';\r\nexport * from './date-formats';\r\nexport * from './native-date-adapter';\r\nexport * from './native-date-formats';\r\n\r\n\r\n@NgModule({\r\n  providers: [\r\n    {provide: DateAdapter, useClass: NativeDateAdapter},\r\n    MAT_DATE_LOCALE_PROVIDER\r\n  ],\r\n})\r\nexport class NativeDateModule {}\r\n\r\n\r\n@NgModule({\r\n  imports: [NativeDateModule],\r\n  providers: [{provide: MAT_DATE_FORMATS, useValue: MAT_NATIVE_DATE_FORMATS}],\r\n})\r\nexport class MatNativeDateModule {}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {MatDateFormats} from './date-formats';\r\n\r\n\r\nexport const MAT_NATIVE_DATE_FORMATS: MatDateFormats = {\r\n  parse: {\r\n    dateInput: null,\r\n  },\r\n  display: {\r\n    dateInput: {year: 'numeric', month: 'numeric', day: 'numeric'},\r\n    monthYearLabel: {year: 'numeric', month: 'short'},\r\n    dateA11yLabel: {year: 'numeric', month: 'long', day: 'numeric'},\r\n    monthYearA11yLabel: {year: 'numeric', month: 'long'},\r\n  }\r\n};\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {Inject, Injectable, Optional} from '@angular/core';\r\nimport {DateAdapter, MAT_DATE_LOCALE} from './date-adapter';\r\n\r\n// TODO(mmalerba): Remove when we no longer support safari 9.\r\n/** Whether the browser supports the Intl API. */\r\nconst SUPPORTS_INTL_API = typeof Intl != 'undefined';\r\n\r\n\r\n/** The default month names to use if Intl API is not available. */\r\nconst DEFAULT_MONTH_NAMES = {\r\n  'long': [\r\n    'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September',\r\n    'October', 'November', 'December'\r\n  ],\r\n  'short': ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\r\n  'narrow': ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D']\r\n};\r\n\r\n\r\n/** The default date names to use if Intl API is not available. */\r\nconst DEFAULT_DATE_NAMES = range(31, i => String(i + 1));\r\n\r\n\r\n/** The default day of the week names to use if Intl API is not available. */\r\nconst DEFAULT_DAY_OF_WEEK_NAMES = {\r\n  'long': ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\r\n  'short': ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\r\n  'narrow': ['S', 'M', 'T', 'W', 'T', 'F', 'S']\r\n};\r\n\r\n\r\n/**\r\n * Matches strings that have the form of a valid RFC 3339 string\r\n * (https://tools.ietf.org/html/rfc3339). Note that the string may not actually be a valid date\r\n * because the regex will match strings an with out of bounds month, date, etc.\r\n */\r\nconst ISO_8601_REGEX =\r\n    /^\\d{4}-\\d{2}-\\d{2}(?:T\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?(?:Z|(?:(?:\\+|-)\\d{2}:\\d{2}))?)?$/;\r\n\r\n\r\n/** Creates an array and fills it with values. */\r\nfunction range<T>(length: number, valueFunction: (index: number) => T): T[] {\r\n  const valuesArray = Array(length);\r\n  for (let i = 0; i < length; i++) {\r\n    valuesArray[i] = valueFunction(i);\r\n  }\r\n  return valuesArray;\r\n}\r\n\r\n/** Adapts the native JS Date for use with cdk-based components that work with dates. */\r\n@Injectable()\r\nexport class NativeDateAdapter extends DateAdapter<Date> {\r\n  /** Whether to clamp the date between 1 and 9999 to avoid IE and Edge errors. */\r\n  private readonly _clampDate: boolean;\r\n\r\n  /**\r\n   * Whether to use `timeZone: 'utc'` with `Intl.DateTimeFormat` when formatting dates.\r\n   * Without this `Intl.DateTimeFormat` sometimes chooses the wrong timeZone, which can throw off\r\n   * the result. (e.g. in the en-US locale `new Date(1800, 7, 14).toLocaleDateString()`\r\n   * will produce `'8/13/1800'`.\r\n   *\r\n   * TODO(mmalerba): drop this variable. It's not being used in the code right now. We're now\r\n   * getting the string representation of a Date object from it's utc representation. We're keeping\r\n   * it here for sometime, just for precaution, in case we decide to revert some of these changes\r\n   * though.\r\n   */\r\n  useUtcForDisplay: boolean;\r\n\r\n  constructor(@Optional() @Inject(MAT_DATE_LOCALE) matDateLocale: string) {\r\n    super();\r\n    super.setLocale(matDateLocale);\r\n\r\n    // IE does its own time zone correction, so we disable this on IE.\r\n    // TODO(mmalerba): replace with checks from PLATFORM, logic currently duplicated to avoid\r\n    // breaking change from injecting the Platform.\r\n    const isBrowser = typeof document === 'object' && !!document;\r\n    const isIE = isBrowser && /(msie|trident)/i.test(navigator.userAgent);\r\n\r\n    this.useUtcForDisplay = !isIE;\r\n    this._clampDate = isIE || (isBrowser && /(edge)/i.test(navigator.userAgent));\r\n  }\r\n\r\n  getYear(date: Date): number {\r\n    return date.getFullYear();\r\n  }\r\n\r\n  getMonth(date: Date): number {\r\n    return date.getMonth();\r\n  }\r\n\r\n  getDate(date: Date): number {\r\n    return date.getDate();\r\n  }\r\n\r\n  getDayOfWeek(date: Date): number {\r\n    return date.getDay();\r\n  }\r\n\r\n  getMonthNames(style: 'long' | 'short' | 'narrow'): string[] {\r\n    if (SUPPORTS_INTL_API) {\r\n      const dtf = new Intl.DateTimeFormat(this.locale, {month: style, timeZone: 'utc'});\r\n      return range(12, i =>\r\n          this._stripDirectionalityCharacters(this._format(dtf, new Date(2017, i, 1))));\r\n    }\r\n    return DEFAULT_MONTH_NAMES[style];\r\n  }\r\n\r\n  getDateNames(): string[] {\r\n    if (SUPPORTS_INTL_API) {\r\n      const dtf = new Intl.DateTimeFormat(this.locale, {day: 'numeric', timeZone: 'utc'});\r\n      return range(31, i => this._stripDirectionalityCharacters(\r\n          this._format(dtf, new Date(2017, 0, i + 1))));\r\n    }\r\n    return DEFAULT_DATE_NAMES;\r\n  }\r\n\r\n  getDayOfWeekNames(style: 'long' | 'short' | 'narrow'): string[] {\r\n    if (SUPPORTS_INTL_API) {\r\n      const dtf = new Intl.DateTimeFormat(this.locale, {weekday: style, timeZone: 'utc'});\r\n      return range(7, i => this._stripDirectionalityCharacters(\r\n          this._format(dtf, new Date(2017, 0, i + 1))));\r\n    }\r\n    return DEFAULT_DAY_OF_WEEK_NAMES[style];\r\n  }\r\n\r\n  getYearName(date: Date): string {\r\n    if (SUPPORTS_INTL_API) {\r\n      const dtf = new Intl.DateTimeFormat(this.locale, {year: 'numeric', timeZone: 'utc'});\r\n      return this._stripDirectionalityCharacters(this._format(dtf, date));\r\n    }\r\n    return String(this.getYear(date));\r\n  }\r\n\r\n  getFirstDayOfWeek(): number {\r\n    // We can't tell using native JS Date what the first day of the week is, we default to Sunday.\r\n    return 0;\r\n  }\r\n\r\n  getNumDaysInMonth(date: Date): number {\r\n    return this.getDate(this._createDateWithOverflow(\r\n        this.getYear(date), this.getMonth(date) + 1, 0));\r\n  }\r\n\r\n  clone(date: Date): Date {\r\n    return this.createDate(this.getYear(date), this.getMonth(date), this.getDate(date));\r\n  }\r\n\r\n  createDate(year: number, month: number, date: number): Date {\r\n    // Check for invalid month and date (except upper bound on date which we have to check after\r\n    // creating the Date).\r\n    if (month < 0 || month > 11) {\r\n      throw Error(`Invalid month index \"${month}\". Month index has to be between 0 and 11.`);\r\n    }\r\n\r\n    if (date < 1) {\r\n      throw Error(`Invalid date \"${date}\". Date has to be greater than 0.`);\r\n    }\r\n\r\n    let result = this._createDateWithOverflow(year, month, date);\r\n    // Check that the date wasn't above the upper bound for the month, causing the month to overflow\r\n    if (result.getMonth() != month) {\r\n      throw Error(`Invalid date \"${date}\" for month with index \"${month}\".`);\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  today(): Date {\r\n    return new Date();\r\n  }\r\n\r\n  parse(value: any): Date | null {\r\n    // We have no way using the native JS Date to set the parse format or locale, so we ignore these\r\n    // parameters.\r\n    if (typeof value == 'number') {\r\n      return new Date(value);\r\n    }\r\n    return value ? new Date(Date.parse(value)) : null;\r\n  }\r\n\r\n  format(date: Date, displayFormat: Object): string {\r\n    if (!this.isValid(date)) {\r\n      throw Error('NativeDateAdapter: Cannot format invalid date.');\r\n    }\r\n\r\n    if (SUPPORTS_INTL_API) {\r\n      // On IE and Edge the i18n API will throw a hard error that can crash the entire app\r\n      // if we attempt to format a date whose year is less than 1 or greater than 9999.\r\n      if (this._clampDate && (date.getFullYear() < 1 || date.getFullYear() > 9999)) {\r\n        date = this.clone(date);\r\n        date.setFullYear(Math.max(1, Math.min(9999, date.getFullYear())));\r\n      }\r\n\r\n      displayFormat = {...displayFormat, timeZone: 'utc'};\r\n\r\n      const dtf = new Intl.DateTimeFormat(this.locale, displayFormat);\r\n      return this._stripDirectionalityCharacters(this._format(dtf, date));\r\n    }\r\n    return this._stripDirectionalityCharacters(date.toDateString());\r\n  }\r\n\r\n  addCalendarYears(date: Date, years: number): Date {\r\n    return this.addCalendarMonths(date, years * 12);\r\n  }\r\n\r\n  addCalendarMonths(date: Date, months: number): Date {\r\n    let newDate = this._createDateWithOverflow(\r\n        this.getYear(date), this.getMonth(date) + months, this.getDate(date));\r\n\r\n    // It's possible to wind up in the wrong month if the original month has more days than the new\r\n    // month. In this case we want to go to the last day of the desired month.\r\n    // Note: the additional + 12 % 12 ensures we end up with a positive number, since JS % doesn't\r\n    // guarantee this.\r\n    if (this.getMonth(newDate) != ((this.getMonth(date) + months) % 12 + 12) % 12) {\r\n      newDate = this._createDateWithOverflow(this.getYear(newDate), this.getMonth(newDate), 0);\r\n    }\r\n\r\n    return newDate;\r\n  }\r\n\r\n  addCalendarDays(date: Date, days: number): Date {\r\n    return this._createDateWithOverflow(\r\n        this.getYear(date), this.getMonth(date), this.getDate(date) + days);\r\n  }\r\n\r\n  toIso8601(date: Date): string {\r\n    return [\r\n      date.getUTCFullYear(),\r\n      this._2digit(date.getUTCMonth() + 1),\r\n      this._2digit(date.getUTCDate())\r\n    ].join('-');\r\n  }\r\n\r\n  /**\r\n   * Returns the given value if given a valid Date or null. Deserializes valid ISO 8601 strings\r\n   * (https://www.ietf.org/rfc/rfc3339.txt) into valid Dates and empty string into null. Returns an\r\n   * invalid date for all other values.\r\n   */\r\n  deserialize(value: any): Date | null {\r\n    if (typeof value === 'string') {\r\n      if (!value) {\r\n        return null;\r\n      }\r\n      // The `Date` constructor accepts formats other than ISO 8601, so we need to make sure the\r\n      // string is the right format first.\r\n      if (ISO_8601_REGEX.test(value)) {\r\n        let date = new Date(value);\r\n        if (this.isValid(date)) {\r\n          return date;\r\n        }\r\n      }\r\n    }\r\n    return super.deserialize(value);\r\n  }\r\n\r\n  isDateInstance(obj: any) {\r\n    return obj instanceof Date;\r\n  }\r\n\r\n  isValid(date: Date) {\r\n    return !isNaN(date.getTime());\r\n  }\r\n\r\n  invalid(): Date {\r\n    return new Date(NaN);\r\n  }\r\n\r\n  /** Creates a date but allows the month and date to overflow. */\r\n  private _createDateWithOverflow(year: number, month: number, date: number) {\r\n    const result = new Date(year, month, date);\r\n\r\n    // We need to correct for the fact that JS native Date treats years in range [0, 99] as\r\n    // abbreviations for 19xx.\r\n    if (year >= 0 && year < 100) {\r\n      result.setFullYear(this.getYear(result) - 1900);\r\n    }\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Pads a number to make it two digits.\r\n   * @param n The number to pad.\r\n   * @returns The padded number.\r\n   */\r\n  private _2digit(n: number) {\r\n    return ('00' + n).slice(-2);\r\n  }\r\n\r\n  /**\r\n   * Strip out unicode LTR and RTL characters. Edge and IE insert these into formatted dates while\r\n   * other browsers do not. We remove them to make output consistent and because they interfere with\r\n   * date parsing.\r\n   * @param str The string to strip direction characters from.\r\n   * @returns The stripped string.\r\n   */\r\n  private _stripDirectionalityCharacters(str: string) {\r\n    return str.replace(/[\\u200e\\u200f]/g, '');\r\n  }\r\n\r\n  /**\r\n   * When converting Date object to string, javascript built-in functions may return wrong\r\n   * results because it applies its internal DST rules. The DST rules around the world change\r\n   * very frequently, and the current valid rule is not always valid in previous years though.\r\n   * We work around this problem building a new Date object which has its internal UTC\r\n   * representation with the local date and time.\r\n   * @param dtf Intl.DateTimeFormat object, containg the desired string format. It must have\r\n   *    timeZone set to 'utc' to work fine.\r\n   * @param date Date from which we want to get the string representation according to dtf\r\n   * @returns A Date object with its UTC representation based on the passed in date info\r\n   */\r\n  private _format(dtf: Intl.DateTimeFormat, date: Date) {\r\n    const d = new Date(Date.UTC(\r\n        date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(),\r\n        date.getMinutes(), date.getSeconds(), date.getMilliseconds()));\r\n    return dtf.format(d);\r\n  }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {InjectionToken} from '@angular/core';\r\n\r\n\r\nexport type MatDateFormats = {\r\n  parse: {\r\n    dateInput: any\r\n  },\r\n  display: {\r\n    dateInput: any,\r\n    monthYearLabel: any,\r\n    dateA11yLabel: any,\r\n    monthYearA11yLabel: any,\r\n  }\r\n};\r\n\r\n\r\nexport const MAT_DATE_FORMATS = new InjectionToken<MatDateFormats>('mat-date-formats');\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {InjectionToken, LOCALE_ID} from '@angular/core';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport {Subject} from 'rxjs/Subject';\r\n\r\n\r\n/** InjectionToken for datepicker that can be used to override default locale code. */\r\nexport const MAT_DATE_LOCALE = new InjectionToken<string>('MAT_DATE_LOCALE');\r\n\r\n/** Provider for MAT_DATE_LOCALE injection token. */\r\nexport const MAT_DATE_LOCALE_PROVIDER = {provide: MAT_DATE_LOCALE, useExisting: LOCALE_ID};\r\n\r\n/** Adapts type `D` to be usable as a date by cdk-based components that work with dates. */\r\nexport abstract class DateAdapter<D> {\r\n  /** The locale to use for all dates. */\r\n  protected locale: any;\r\n\r\n  /** A stream that emits when the locale changes. */\r\n  get localeChanges(): Observable<void> { return this._localeChanges; }\r\n  protected _localeChanges = new Subject<void>();\r\n\r\n  /**\r\n   * Gets the year component of the given date.\r\n   * @param date The date to extract the year from.\r\n   * @returns The year component.\r\n   */\r\n  abstract getYear(date: D): number;\r\n\r\n  /**\r\n   * Gets the month component of the given date.\r\n   * @param date The date to extract the month from.\r\n   * @returns The month component (0-indexed, 0 = January).\r\n   */\r\n  abstract getMonth(date: D): number;\r\n\r\n  /**\r\n   * Gets the date of the month component of the given date.\r\n   * @param date The date to extract the date of the month from.\r\n   * @returns The month component (1-indexed, 1 = first of month).\r\n   */\r\n  abstract getDate(date: D): number;\r\n\r\n  /**\r\n   * Gets the day of the week component of the given date.\r\n   * @param date The date to extract the day of the week from.\r\n   * @returns The month component (0-indexed, 0 = Sunday).\r\n   */\r\n  abstract getDayOfWeek(date: D): number;\r\n\r\n  /**\r\n   * Gets a list of names for the months.\r\n   * @param style The naming style (e.g. long = 'January', short = 'Jan', narrow = 'J').\r\n   * @returns An ordered list of all month names, starting with January.\r\n   */\r\n  abstract getMonthNames(style: 'long' | 'short' | 'narrow'): string[];\r\n\r\n  /**\r\n   * Gets a list of names for the dates of the month.\r\n   * @returns An ordered list of all date of the month names, starting with '1'.\r\n   */\r\n  abstract getDateNames(): string[];\r\n\r\n  /**\r\n   * Gets a list of names for the days of the week.\r\n   * @param style The naming style (e.g. long = 'Sunday', short = 'Sun', narrow = 'S').\r\n   * @returns An ordered list of all weekday names, starting with Sunday.\r\n   */\r\n  abstract getDayOfWeekNames(style: 'long' | 'short' | 'narrow'): string[];\r\n\r\n  /**\r\n   * Gets the name for the year of the given date.\r\n   * @param date The date to get the year name for.\r\n   * @returns The name of the given year (e.g. '2017').\r\n   */\r\n  abstract getYearName(date: D): string;\r\n\r\n  /**\r\n   * Gets the first day of the week.\r\n   * @returns The first day of the week (0-indexed, 0 = Sunday).\r\n   */\r\n  abstract getFirstDayOfWeek(): number;\r\n\r\n  /**\r\n   * Gets the number of days in the month of the given date.\r\n   * @param date The date whose month should be checked.\r\n   * @returns The number of days in the month of the given date.\r\n   */\r\n  abstract getNumDaysInMonth(date: D): number;\r\n\r\n  /**\r\n   * Clones the given date.\r\n   * @param date The date to clone\r\n   * @returns A new date equal to the given date.\r\n   */\r\n  abstract clone(date: D): D;\r\n\r\n  /**\r\n   * Creates a date with the given year, month, and date. Does not allow over/under-flow of the\r\n   * month and date.\r\n   * @param year The full year of the date. (e.g. 89 means the year 89, not the year 1989).\r\n   * @param month The month of the date (0-indexed, 0 = January). Must be an integer 0 - 11.\r\n   * @param date The date of month of the date. Must be an integer 1 - length of the given month.\r\n   * @returns The new date, or null if invalid.\r\n   */\r\n  abstract createDate(year: number, month: number, date: number): D;\r\n\r\n  /**\r\n   * Gets today's date.\r\n   * @returns Today's date.\r\n   */\r\n  abstract today(): D;\r\n\r\n  /**\r\n   * Parses a date from a user-provided value.\r\n   * @param value The value to parse.\r\n   * @param parseFormat The expected format of the value being parsed\r\n   *     (type is implementation-dependent).\r\n   * @returns The parsed date.\r\n   */\r\n  abstract parse(value: any, parseFormat: any): D | null;\r\n\r\n  /**\r\n   * Formats a date as a string according to the given format.\r\n   * @param date The value to format.\r\n   * @param displayFormat The format to use to display the date as a string.\r\n   * @returns The formatted date string.\r\n   */\r\n  abstract format(date: D, displayFormat: any): string;\r\n\r\n  /**\r\n   * Adds the given number of years to the date. Years are counted as if flipping 12 pages on the\r\n   * calendar for each year and then finding the closest date in the new month. For example when\r\n   * adding 1 year to Feb 29, 2016, the resulting date will be Feb 28, 2017.\r\n   * @param date The date to add years to.\r\n   * @param years The number of years to add (may be negative).\r\n   * @returns A new date equal to the given one with the specified number of years added.\r\n   */\r\n  abstract addCalendarYears(date: D, years: number): D;\r\n\r\n  /**\r\n   * Adds the given number of months to the date. Months are counted as if flipping a page on the\r\n   * calendar for each month and then finding the closest date in the new month. For example when\r\n   * adding 1 month to Jan 31, 2017, the resulting date will be Feb 28, 2017.\r\n   * @param date The date to add months to.\r\n   * @param months The number of months to add (may be negative).\r\n   * @returns A new date equal to the given one with the specified number of months added.\r\n   */\r\n  abstract addCalendarMonths(date: D, months: number): D;\r\n\r\n  /**\r\n   * Adds the given number of days to the date. Days are counted as if moving one cell on the\r\n   * calendar for each day.\r\n   * @param date The date to add days to.\r\n   * @param days The number of days to add (may be negative).\r\n   * @returns A new date equal to the given one with the specified number of days added.\r\n   */\r\n  abstract addCalendarDays(date: D, days: number): D;\r\n\r\n  /**\r\n   * Gets the RFC 3339 compatible string (https://tools.ietf.org/html/rfc3339) for the given date.\r\n   * This method is used to generate date strings that are compatible with native HTML attributes\r\n   * such as the `min` or `max` attribute of an `<input>`.\r\n   * @param date The date to get the ISO date string for.\r\n   * @returns The ISO date string date string.\r\n   */\r\n  abstract toIso8601(date: D): string;\r\n\r\n  /**\r\n   * Checks whether the given object is considered a date instance by this DateAdapter.\r\n   * @param obj The object to check\r\n   * @returns Whether the object is a date instance.\r\n   */\r\n  abstract isDateInstance(obj: any): boolean;\r\n\r\n  /**\r\n   * Checks whether the given date is valid.\r\n   * @param date The date to check.\r\n   * @returns Whether the date is valid.\r\n   */\r\n  abstract isValid(date: D): boolean;\r\n\r\n  /**\r\n   * Gets date instance that is not valid.\r\n   * @returns An invalid date.\r\n   */\r\n  abstract invalid(): D;\r\n\r\n  /**\r\n   * Attempts to deserialize a value to a valid date object. This is different from parsing in that\r\n   * deserialize should only accept non-ambiguous, locale-independent formats (e.g. a ISO 8601\r\n   * string). The default implementation does not allow any deserialization, it simply checks that\r\n   * the given value is already a valid date object or null. The `<mat-datepicker>` will call this\r\n   * method on all of it's `@Input()` properties that accept dates. It is therefore possible to\r\n   * support passing values from your backend directly to these properties by overriding this method\r\n   * to also deserialize the format used by your backend.\r\n   * @param value The value to be deserialized into a date object.\r\n   * @returns The deserialized date object, either a valid date, null if the value can be\r\n   *     deserialized into a null date (e.g. the empty string), or an invalid date.\r\n   */\r\n  deserialize(value: any): D | null {\r\n    if (value == null || this.isDateInstance(value) && this.isValid(value)) {\r\n      return value;\r\n    }\r\n    return this.invalid();\r\n  }\r\n\r\n  /**\r\n   * Sets the locale used for all dates.\r\n   * @param locale The new locale.\r\n   */\r\n  setLocale(locale: any) {\r\n    this.locale = locale;\r\n    this._localeChanges.next();\r\n  }\r\n\r\n  /**\r\n   * Compares two dates.\r\n   * @param first The first date to compare.\r\n   * @param second The second date to compare.\r\n   * @returns 0 if the dates are equal, a number less than 0 if the first date is earlier,\r\n   *     a number greater than 0 if the first date is later.\r\n   */\r\n  compareDate(first: D, second: D): number {\r\n    return this.getYear(first) - this.getYear(second) ||\r\n        this.getMonth(first) - this.getMonth(second) ||\r\n        this.getDate(first) - this.getDate(second);\r\n  }\r\n\r\n  /**\r\n   * Checks if two dates are equal.\r\n   * @param first The first date to check.\r\n   * @param second The second date to check.\r\n   * @returns Whether the two dates are equal.\r\n   *     Null dates are considered equal to other null dates.\r\n   */\r\n  sameDate(first: D | null, second: D | null): boolean {\r\n    if (first && second) {\r\n      let firstValid = this.isValid(first);\r\n      let secondValid = this.isValid(second);\r\n      if (firstValid && secondValid) {\r\n        return !this.compareDate(first, second);\r\n      }\r\n      return firstValid == secondValid;\r\n    }\r\n    return first == second;\r\n  }\r\n\r\n  /**\r\n   * Clamp the given date between min and max dates.\r\n   * @param date The date to clamp.\r\n   * @param min The minimum value to allow. If null or omitted no min is enforced.\r\n   * @param max The maximum value to allow. If null or omitted no max is enforced.\r\n   * @returns `min` if `date` is less than `min`, `max` if date is greater than `max`,\r\n   *     otherwise `date`.\r\n   */\r\n  clampDate(date: D, min?: D | null, max?: D | null): D {\r\n    if (min && this.compareDate(date, min) < 0) {\r\n      return min;\r\n    }\r\n    if (max && this.compareDate(date, max) > 0) {\r\n      return max;\r\n    }\r\n    return date;\r\n  }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {Constructor} from './constructor';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport {Subscriber} from 'rxjs/Subscriber';\r\n\r\n/**\r\n * Mixin that adds an initialized property to a directive which, when subscribed to, will emit a\r\n * value once markInitialized has been called, which should be done during the ngOnInit function.\r\n * If the subscription is made after it has already been marked as initialized, then it will trigger\r\n * an emit immediately.\r\n * @docs-private\r\n */\r\nexport interface HasInitialized {\r\n  /** Stream that emits once during the directive/component's ngOnInit. */\r\n  initialized: Observable<void>;\r\n\r\n  /**\r\n   * Sets the state as initialized and must be called during ngOnInit to notify subscribers that\r\n   * the directive has been initialized.\r\n   * @docs-private\r\n   */\r\n  _markInitialized: () => void;\r\n}\r\n\r\n/** Mixin to augment a directive with an initialized property that will emits when ngOnInit ends. */\r\nexport function mixinInitialized<T extends Constructor<{}>>(base: T):\r\n    Constructor<HasInitialized> & T {\r\n  return class extends base {\r\n    /** Whether this directive has been marked as initialized. */\r\n    _isInitialized = false;\r\n\r\n    /**\r\n     * List of subscribers that subscribed before the directive was initialized. Should be notified\r\n     * during _markInitialized. Set to null after pending subscribers are notified, and should\r\n     * not expect to be populated after.\r\n     */\r\n    _pendingSubscribers: Subscriber<void>[] | null = [];\r\n\r\n    /**\r\n     * Observable stream that emits when the directive initializes. If already initialized, the\r\n     * subscriber is stored to be notified once _markInitialized is called.\r\n     */\r\n    initialized = new Observable<void>(subscriber => {\r\n      // If initialized, immediately notify the subscriber. Otherwise store the subscriber to notify\r\n      // when _markInitialized is called.\r\n      if (this._isInitialized) {\r\n        this._notifySubscriber(subscriber);\r\n      } else {\r\n        this._pendingSubscribers!.push(subscriber);\r\n      }\r\n    });\r\n\r\n    constructor(...args: any[]) { super(...args); }\r\n\r\n    /**\r\n     * Marks the state as initialized and notifies pending subscribers. Should be called at the end\r\n     * of ngOnInit.\r\n     * @docs-private\r\n     */\r\n    _markInitialized(): void {\r\n      if (this._isInitialized) {\r\n        throw Error('This directive has already been marked as initialized and ' +\r\n            'should not be called twice.');\r\n      }\r\n\r\n      this._isInitialized = true;\r\n\r\n      this._pendingSubscribers!.forEach(this._notifySubscriber);\r\n      this._pendingSubscribers = null;\r\n    }\r\n\r\n    /** Emits and completes the subscriber stream (should only emit once). */\r\n    _notifySubscriber(subscriber: Subscriber<void>): void {\r\n      subscriber.next();\r\n      subscriber.complete();\r\n    }\r\n  };\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {Constructor} from './constructor';\r\nimport {ErrorStateMatcher} from '../error/error-options';\r\nimport {FormControl, FormGroupDirective, NgControl, NgForm} from '@angular/forms';\r\nimport {Subject} from 'rxjs/Subject';\r\n\r\n/** @docs-private */\r\nexport interface CanUpdateErrorState {\r\n  updateErrorState();\r\n  readonly stateChanges: Subject<void>;\r\n  errorState: boolean;\r\n  errorStateMatcher: ErrorStateMatcher;\r\n}\r\n\r\n/** @docs-private */\r\nexport interface HasErrorState {\r\n  _parentFormGroup: FormGroupDirective;\r\n  _parentForm: NgForm;\r\n  _defaultErrorStateMatcher: ErrorStateMatcher;\r\n  ngControl: NgControl;\r\n}\r\n\r\n/**\r\n * Mixin to augment a directive with updateErrorState method.\r\n * For component with `errorState` and need to update `errorState`.\r\n */\r\nexport function mixinErrorState<T extends Constructor<HasErrorState>>(base: T)\r\n: Constructor<CanUpdateErrorState> & T {\r\n  return class extends base {\r\n    /** Whether the component is in an error state. */\r\n    errorState: boolean = false;\r\n\r\n    /**\r\n     * Stream that emits whenever the state of the input changes such that the wrapping\r\n     * `MatFormField` needs to run change detection.\r\n     */\r\n    readonly stateChanges = new Subject<void>();\r\n\r\n    errorStateMatcher: ErrorStateMatcher;\r\n\r\n    updateErrorState() {\r\n      const oldState = this.errorState;\r\n      const parent = this._parentFormGroup || this._parentForm;\r\n      const matcher = this.errorStateMatcher || this._defaultErrorStateMatcher;\r\n      const control = this.ngControl ? this.ngControl.control as FormControl : null;\r\n      const newState = matcher.isErrorState(control, parent);\r\n\r\n      if (newState !== oldState) {\r\n        this.errorState = newState;\r\n        this.stateChanges.next();\r\n      }\r\n    }\r\n\r\n    constructor(...args: any[]) {\r\n      super(...args);\r\n    }\r\n  };\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {Constructor} from './constructor';\r\nimport {CanDisable} from './disabled';\r\n\r\n/** @docs-private */\r\nexport interface HasTabIndex {\r\n  /** Tabindex of the component. */\r\n  tabIndex: number;\r\n}\r\n\r\n/** Mixin to augment a directive with a `tabIndex` property. */\r\nexport function mixinTabIndex<T extends Constructor<CanDisable>>(base: T, defaultTabIndex = 0)\r\n    : Constructor<HasTabIndex> & T {\r\n  return class extends base {\r\n    private _tabIndex: number = defaultTabIndex;\r\n\r\n    get tabIndex(): number { return this.disabled ? -1 : this._tabIndex; }\r\n    set tabIndex(value: number) {\r\n      // If the specified tabIndex value is null or undefined, fall back to the default value.\r\n      this._tabIndex = value != null ? value : defaultTabIndex;\r\n    }\r\n\r\n    constructor(...args: any[]) {\r\n      super(...args);\r\n    }\r\n  };\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\r\nimport {Constructor} from './constructor';\r\n\r\n/** @docs-private */\r\nexport interface CanDisableRipple {\r\n  /** Whether ripples are disabled. */\r\n  disableRipple: boolean;\r\n}\r\n\r\n/** Mixin to augment a directive with a `disableRipple` property. */\r\nexport function mixinDisableRipple<T extends Constructor<{}>>(base: T)\r\n    : Constructor<CanDisableRipple> & T {\r\n  return class extends base {\r\n    private _disableRipple: boolean = false;\r\n\r\n    /** Whether the ripple effect is disabled or not. */\r\n    get disableRipple() { return this._disableRipple; }\r\n    set disableRipple(value: any) { this._disableRipple = coerceBooleanProperty(value); }\r\n\r\n    constructor(...args: any[]) { super(...args); }\r\n  };\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {Constructor} from './constructor';\r\nimport {ElementRef} from '@angular/core';\r\n\r\n/** @docs-private */\r\nexport interface CanColor {\r\n  /** Theme color palette for the component. */\r\n  color: ThemePalette;\r\n}\r\n\r\n/** @docs-private */\r\nexport interface HasElementRef {\r\n  _elementRef: ElementRef;\r\n}\r\n\r\n/** Possible color palette values. */\r\nexport type ThemePalette = 'primary' | 'accent' | 'warn' | undefined;\r\n\r\n/** Mixin to augment a directive with a `color` property. */\r\nexport function mixinColor<T extends Constructor<HasElementRef>>(base: T,\r\n    defaultColor?: ThemePalette): Constructor<CanColor> & T {\r\n  return class extends base {\r\n    private _color: ThemePalette;\r\n\r\n    get color(): ThemePalette { return this._color; }\r\n    set color(value: ThemePalette) {\r\n      const colorPalette = value || defaultColor;\r\n\r\n      if (colorPalette !== this._color) {\r\n        if (this._color) {\r\n          this._elementRef.nativeElement.classList.remove(`mat-${this._color}`);\r\n        }\r\n        if (colorPalette) {\r\n          this._elementRef.nativeElement.classList.add(`mat-${colorPalette}`);\r\n        }\r\n\r\n        this._color = colorPalette;\r\n      }\r\n    }\r\n\r\n    constructor(...args: any[]) {\r\n      super(...args);\r\n\r\n      // Set the default color that can be specified from the mixin.\r\n      this.color = defaultColor;\r\n    }\r\n  };\r\n}\r\n\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\r\nimport {Constructor} from './constructor';\r\n\r\n/** @docs-private */\r\nexport interface CanDisable {\r\n  /** Whether the component is disabled. */\r\n  disabled: boolean;\r\n}\r\n\r\n/** Mixin to augment a directive with a `disabled` property. */\r\nexport function mixinDisabled<T extends Constructor<{}>>(base: T): Constructor<CanDisable> & T {\r\n  return class extends base {\r\n    private _disabled: boolean = false;\r\n\r\n    get disabled() { return this._disabled; }\r\n    set disabled(value: any) { this._disabled = coerceBooleanProperty(value); }\r\n\r\n    constructor(...args: any[]) { super(...args); }\r\n  };\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {NgModule, InjectionToken, Optional, Inject, isDevMode} from '@angular/core';\r\nimport {BidiModule} from '@angular/cdk/bidi';\r\n\r\n\r\n/** Injection token that configures whether the Material sanity checks are enabled. */\r\nexport const MATERIAL_SANITY_CHECKS = new InjectionToken<boolean>('mat-sanity-checks');\r\n\r\n\r\n/**\r\n * Module that captures anything that should be loaded and/or run for *all* Angular Material\r\n * components. This includes Bidi, etc.\r\n *\r\n * This module should be imported to each top-level component module (e.g., MatTabsModule).\r\n */\r\n@NgModule({\r\n  imports: [BidiModule],\r\n  exports: [BidiModule],\r\n  providers: [{\r\n    provide: MATERIAL_SANITY_CHECKS, useValue: true,\r\n  }],\r\n})\r\nexport class MatCommonModule {\r\n  /** Whether we've done the global sanity checks (e.g. a theme is loaded, there is a doctype). */\r\n  private _hasDoneGlobalChecks = false;\r\n\r\n  /** Whether we've already checked for HammerJs availability. */\r\n  private _hasCheckedHammer = false;\r\n\r\n  /** Reference to the global `document` object. */\r\n  private _document = typeof document === 'object' && document ? document : null;\r\n\r\n  /** Reference to the global 'window' object. */\r\n  private _window = typeof window === 'object' && window ? window : null;\r\n\r\n  constructor(@Optional() @Inject(MATERIAL_SANITY_CHECKS) private _sanityChecksEnabled: boolean) {\r\n    if (this._areChecksEnabled() && !this._hasDoneGlobalChecks) {\r\n      this._checkDoctypeIsDefined();\r\n      this._checkThemeIsPresent();\r\n      this._hasDoneGlobalChecks = true;\r\n    }\r\n  }\r\n\r\n  /** Whether any sanity checks are enabled */\r\n  private _areChecksEnabled(): boolean {\r\n    return this._sanityChecksEnabled && isDevMode() && !this._isTestEnv();\r\n  }\r\n\r\n  /** Whether the code is running in tests. */\r\n  private _isTestEnv() {\r\n    return this._window && (this._window['__karma__'] || this._window['jasmine']);\r\n  }\r\n\r\n  private _checkDoctypeIsDefined(): void {\r\n    if (this._document && !this._document.doctype) {\r\n      console.warn(\r\n        'Current document does not have a doctype. This may cause ' +\r\n        'some Angular Material components not to behave as expected.'\r\n      );\r\n    }\r\n  }\r\n\r\n  private _checkThemeIsPresent(): void {\r\n    if (this._document && typeof getComputedStyle === 'function') {\r\n      const testElement = this._document.createElement('div');\r\n\r\n      testElement.classList.add('mat-theme-loaded-marker');\r\n      this._document.body.appendChild(testElement);\r\n\r\n      const computedStyle = getComputedStyle(testElement);\r\n\r\n      // In some situations, the computed style of the test element can be null. For example in\r\n      // Firefox, the computed style is null if an application is running inside of a hidden iframe.\r\n      // See: https://bugzilla.mozilla.org/show_bug.cgi?id=548397\r\n      if (computedStyle && computedStyle.display !== 'none') {\r\n        console.warn(\r\n          'Could not find Angular Material core theme. Most Material ' +\r\n          'components may not work as expected. For more info refer ' +\r\n          'to the theming guide: https://material.angular.io/guide/theming'\r\n        );\r\n      }\r\n\r\n      this._document.body.removeChild(testElement);\r\n    }\r\n  }\r\n\r\n  /** Checks whether HammerJS is available. */\r\n  _checkHammerIsAvailable(): void {\r\n    if (this._hasCheckedHammer || !this._window) {\r\n      return;\r\n    }\r\n\r\n    if (this._areChecksEnabled() && !this._window['Hammer']) {\r\n      console.warn(\r\n        'Could not find HammerJS. Certain Angular Material components may not work correctly.');\r\n    }\r\n    this._hasCheckedHammer = true;\r\n  }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\n/** @docs-private */\r\nexport class AnimationCurves {\r\n  static STANDARD_CURVE = 'cubic-bezier(0.4,0.0,0.2,1)';\r\n  static DECELERATION_CURVE = 'cubic-bezier(0.0,0.0,0.2,1)';\r\n  static ACCELERATION_CURVE = 'cubic-bezier(0.4,0.0,1,1)';\r\n  static SHARP_CURVE = 'cubic-bezier(0.4,0.0,0.6,1)';\r\n}\r\n\r\n\r\n/** @docs-private */\r\nexport class AnimationDurations {\r\n  static COMPLEX = '375ms';\r\n  static ENTERING = '225ms';\r\n  static EXITING = '195ms';\r\n}\r\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n"],"names":["Version","PlatformModule","NgModule","Inject","DOCUMENT","ViewEncapsulation","ChangeDetectionStrategy","Component","isDevMode","tslib_1.__extends","Directive","VIEWPORT_RULER_PROVIDER","ScrollDispatchModule","ObserversModule","PortalModule","CommonModule","Attribute","Optional","Platform","NgZone","Input","ViewportRuler","ChangeDetectorRef","merge","takeUntil","observableOf","coerceBooleanProperty","Subject","Output","ViewChild","Directionality","SPACE","ENTER","END","HOME","LEFT_ARROW","RIGHT_ARROW","coerceNumberProperty","EventEmitter","Subscription","ElementRef","CdkPortalOutlet","forwardRef","ViewContainerRef","ComponentFactoryResolver","animate","style","transition","state","trigger","TemplatePortal","CdkPortal","TemplateRef","DataSource","combineLatest","startWith","map","empty","filter","BehaviorSubject","_isNumberValue","CdkTableModule","CDK_ROW_TEMPLATE","CdkRowDef","CdkHeaderRowDef","CdkCell","CdkColumnDef","CdkHeaderCell","CdkHeaderCellDef","CdkCellDef","CdkTable","CDK_TABLE_TEMPLATE","A11yModule","CdkStepperModule","CdkStepperPrevious","CdkStepper","CdkStepperNext","ContentChildren","CdkStep","Injectable","CdkStepLabel","query","animateChild","keyframes","SkipSelf","LIVE_ANNOUNCER_PROVIDER","LayoutModule","OverlayModule","tslib_1.__assign","_applyConfigDefaults","BreakpointObserver","Injector","LiveAnnouncer","Overlay","PortalInjector","OverlayConfig","Breakpoints","take","ComponentPortal","BasePortalOutlet","InjectionToken","HAMMER_GESTURE_CONFIG","BidiModule","DOWN_ARROW","UP_ARROW","PAGE_DOWN","PAGE_UP","NG_VALUE_ACCESSOR","FocusMonitor","nextUniqueId","ContentChild","debounceTime","UNIQUE_SELECTION_DISPATCHER_PROVIDER","UniqueSelectionDispatcher","ɵ0","ARIA_DESCRIBER_PROVIDER","delay","AriaDescriber","ScrollDispatcher","ESCAPE","CdkConnectedOverlay","NgControl","Self","FormGroupDirective","NgForm","ActiveDescendantKeyManager","SelectionModel","switchMap","defer","isFakeMousedownFromScreenReader","FocusKeyManager","ApplicationRef","DomPortalOutlet","DomSanitizer","HttpClient","finalize","share","SecurityContext","forkJoin","catchError","tap","observableThrow","CdkAccordionModule","uniqueId","CdkAccordion","Validators","NG_VALIDATORS","getSupportedInputTypes","auditTime","fromEvent","OverlayContainer","Location","BACKSPACE","DELETE","CheckboxRequiredValidator","_uniqueIdCounter","Host","TAB","supportsPassiveEventListeners","HammerGestureConfig","LOCALE_ID","Observable"],"mappings":"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"}
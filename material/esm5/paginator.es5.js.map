{"version":3,"file":"paginator.es5.js","sources":["../../../src/lib/paginator/index.ts","../../../src/lib/paginator/public-api.ts","../../../src/lib/paginator/paginator-module.ts","../../../src/lib/paginator/paginator.ts","../../../src/lib/paginator/paginator-intl.ts"],"sourcesContent":["/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nexport * from './paginator-module';\r\nexport * from './paginator';\r\nexport * from './paginator-intl';\r\n\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {CommonModule} from '@angular/common';\r\nimport {NgModule} from '@angular/core';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport {MatTooltipModule} from '@angular/material/tooltip';\r\nimport {MatPaginator} from './paginator';\r\nimport {MAT_PAGINATOR_INTL_PROVIDER} from './paginator-intl';\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    MatButtonModule,\r\n    MatSelectModule,\r\n    MatTooltipModule,\r\n  ],\r\n  exports: [MatPaginator],\r\n  declarations: [MatPaginator],\r\n  providers: [MAT_PAGINATOR_INTL_PROVIDER],\r\n})\r\nexport class MatPaginatorModule {}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {coerceNumberProperty, coerceBooleanProperty} from '@angular/cdk/coercion';\r\nimport {\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output,\r\n  ViewEncapsulation,\r\n} from '@angular/core';\r\nimport {Subscription} from 'rxjs/Subscription';\r\nimport {MatPaginatorIntl} from './paginator-intl';\r\n\r\n/** The default page size if there is no page size and there are no provided page size options. */\r\nconst DEFAULT_PAGE_SIZE = 50;\r\n\r\n/**\r\n * Change event object that is emitted when the user selects a\r\n * different page size or navigates to another page.\r\n */\r\nexport class PageEvent {\r\n  /** The current page index. */\r\n  pageIndex: number;\r\n\r\n  /** The current page size */\r\n  pageSize: number;\r\n\r\n  /** The current total number of items being paged */\r\n  length: number;\r\n}\r\n\r\n/**\r\n * Component to provide navigation between paged information. Displays the size of the current\r\n * page, user-selectable options to change that size, what items are being shown, and\r\n * navigational button to go to the previous or next page.\r\n */\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'mat-paginator',\r\n  exportAs: 'matPaginator',\r\n  templateUrl: 'paginator.html',\r\n  styleUrls: ['paginator.css'],\r\n  host: {\r\n    'class': 'mat-paginator',\r\n  },\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  encapsulation: ViewEncapsulation.None,\r\n  preserveWhitespaces: false,\r\n})\r\nexport class MatPaginator implements OnInit, OnDestroy {\r\n  private _initialized: boolean;\r\n  private _intlChanges: Subscription;\r\n\r\n  /** The zero-based page index of the displayed list of items. Defaulted to 0. */\r\n  @Input()\r\n  get pageIndex(): number { return this._pageIndex; }\r\n  set pageIndex(value: number) {\r\n    this._pageIndex = coerceNumberProperty(value);\r\n    this._changeDetectorRef.markForCheck();\r\n  }\r\n  _pageIndex: number = 0;\r\n\r\n  /** The length of the total number of items that are being paginated. Defaulted to 0. */\r\n  @Input()\r\n  get length(): number { return this._length; }\r\n  set length(value: number) {\r\n    this._length = coerceNumberProperty(value);\r\n    this._changeDetectorRef.markForCheck();\r\n  }\r\n  _length: number = 0;\r\n\r\n  /** Number of items to display on a page. By default set to 50. */\r\n  @Input()\r\n  get pageSize(): number { return this._pageSize; }\r\n  set pageSize(value: number) {\r\n    this._pageSize = coerceNumberProperty(value);\r\n    this._updateDisplayedPageSizeOptions();\r\n  }\r\n  private _pageSize: number;\r\n\r\n  /** The set of provided page size options to display to the user. */\r\n  @Input()\r\n  get pageSizeOptions(): number[] { return this._pageSizeOptions; }\r\n  set pageSizeOptions(value: number[]) {\r\n    this._pageSizeOptions = (value || []).map(p => coerceNumberProperty(p));\r\n    this._updateDisplayedPageSizeOptions();\r\n  }\r\n  private _pageSizeOptions: number[] = [];\r\n\r\n  /** Whether to hide the page size selection UI from the user. */\r\n  @Input()\r\n  get hidePageSize(): boolean { return this._hidePageSize; }\r\n  set hidePageSize(value: boolean) {\r\n    this._hidePageSize = coerceBooleanProperty(value);\r\n  }\r\n  private _hidePageSize = false;\r\n\r\n\r\n  /** Whether to show the first/last buttons UI to the user. */\r\n  @Input()\r\n  get showFirstLastButtons(): boolean { return this._showFirstLastButtons; }\r\n  set showFirstLastButtons(value: boolean) {\r\n    this._showFirstLastButtons = coerceBooleanProperty(value);\r\n  }\r\n  private _showFirstLastButtons = false;\r\n\r\n  /** Event emitted when the paginator changes the page size or page index. */\r\n  @Output() readonly page: EventEmitter<PageEvent> = new EventEmitter<PageEvent>();\r\n\r\n  /** Displayed set of page size options. Will be sorted and include current page size. */\r\n  _displayedPageSizeOptions: number[];\r\n\r\n  constructor(public _intl: MatPaginatorIntl,\r\n              private _changeDetectorRef: ChangeDetectorRef) {\r\n    this._intlChanges = _intl.changes.subscribe(() => this._changeDetectorRef.markForCheck());\r\n  }\r\n\r\n  ngOnInit() {\r\n    this._initialized = true;\r\n    this._updateDisplayedPageSizeOptions();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this._intlChanges.unsubscribe();\r\n  }\r\n\r\n  /** Advances to the next page if it exists. */\r\n  nextPage(): void {\r\n    if (!this.hasNextPage()) { return; }\r\n    this.pageIndex++;\r\n    this._emitPageEvent();\r\n  }\r\n\r\n  /** Move back to the previous page if it exists. */\r\n  previousPage(): void {\r\n    if (!this.hasPreviousPage()) { return; }\r\n    this.pageIndex--;\r\n    this._emitPageEvent();\r\n  }\r\n\r\n  /** Move to the first page if not already there. */\r\n  firstPage(): void {\r\n    // hasPreviousPage being false implies at the start\r\n    if (!this.hasPreviousPage()) { return; }\r\n    this.pageIndex = 0;\r\n    this._emitPageEvent();\r\n  }\r\n\r\n  /** Move to the last page if not already there. */\r\n  lastPage(): void {\r\n    // hasNextPage being false implies at the end\r\n    if (!this.hasNextPage()) { return; }\r\n    this.pageIndex = this.getNumberOfPages();\r\n    this._emitPageEvent();\r\n  }\r\n\r\n  /** Whether there is a previous page. */\r\n  hasPreviousPage(): boolean {\r\n    return this.pageIndex >= 1 && this.pageSize != 0;\r\n  }\r\n\r\n  /** Whether there is a next page. */\r\n  hasNextPage(): boolean {\r\n    const numberOfPages = this.getNumberOfPages();\r\n    return this.pageIndex < numberOfPages && this.pageSize != 0;\r\n  }\r\n\r\n  /** Calculate the number of pages */\r\n  getNumberOfPages(): number {\r\n    return Math.ceil(this.length / this.pageSize) - 1;\r\n  }\r\n\r\n\r\n  /**\r\n   * Changes the page size so that the first item displayed on the page will still be\r\n   * displayed using the new page size.\r\n   *\r\n   * For example, if the page size is 10 and on the second page (items indexed 10-19) then\r\n   * switching so that the page size is 5 will set the third page as the current page so\r\n   * that the 10th item will still be displayed.\r\n   */\r\n  _changePageSize(pageSize: number) {\r\n    // Current page needs to be updated to reflect the new page size. Navigate to the page\r\n    // containing the previous page's first item.\r\n    const startIndex = this.pageIndex * this.pageSize;\r\n    this.pageIndex = Math.floor(startIndex / pageSize) || 0;\r\n\r\n    this.pageSize = pageSize;\r\n    this._emitPageEvent();\r\n  }\r\n\r\n  /**\r\n   * Updates the list of page size options to display to the user. Includes making sure that\r\n   * the page size is an option and that the list is sorted.\r\n   */\r\n  private _updateDisplayedPageSizeOptions() {\r\n    if (!this._initialized) { return; }\r\n\r\n    // If no page size is provided, use the first page size option or the default page size.\r\n    if (!this.pageSize) {\r\n      this._pageSize = this.pageSizeOptions.length != 0 ?\r\n          this.pageSizeOptions[0] :\r\n          DEFAULT_PAGE_SIZE;\r\n    }\r\n\r\n    this._displayedPageSizeOptions = this.pageSizeOptions.slice();\r\n    if (this._displayedPageSizeOptions.indexOf(this.pageSize) == -1) {\r\n      this._displayedPageSizeOptions.push(this.pageSize);\r\n    }\r\n\r\n    // Sort the numbers using a number-specific sort function.\r\n    this._displayedPageSizeOptions.sort((a, b) => a - b);\r\n\r\n    this._changeDetectorRef.markForCheck();\r\n  }\r\n\r\n  /** Emits an event notifying that a change of the paginator's properties has been triggered. */\r\n  private _emitPageEvent() {\r\n    this.page.emit({\r\n      pageIndex: this.pageIndex,\r\n      pageSize: this.pageSize,\r\n      length: this.length\r\n    });\r\n  }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {Injectable, SkipSelf, Optional } from '@angular/core';\r\nimport {Subject} from 'rxjs/Subject';\r\n\r\n/**\r\n * To modify the labels and text displayed, create a new instance of MatPaginatorIntl and\r\n * include it in a custom provider\r\n */\r\n@Injectable()\r\nexport class MatPaginatorIntl {\r\n  /**\r\n   * Stream that emits whenever the labels here are changed. Use this to notify\r\n   * components if the labels have changed after initialization.\r\n   */\r\n  readonly changes: Subject<void> = new Subject<void>();\r\n\r\n  /** A label for the page size selector. */\r\n  itemsPerPageLabel: string = 'Items per page:';\r\n\r\n  /** A label for the button that increments the current page. */\r\n  nextPageLabel: string = 'Next page';\r\n\r\n  /** A label for the button that decrements the current page. */\r\n  previousPageLabel: string = 'Previous page';\r\n\r\n  /** A label for the button that moves to the first page. */\r\n  firstPageLabel: string = 'First page';\r\n\r\n  /** A label for the button that moves to the last page. */\r\n  lastPageLabel: string = 'Last page';\r\n\r\n  /** A label for the range of items within the current page and the length of the whole list. */\r\n  getRangeLabel = (page: number, pageSize: number, length: number) => {\r\n    if (length == 0 || pageSize == 0) { return `0 of ${length}`; }\r\n\r\n    length = Math.max(length, 0);\r\n\r\n    const startIndex = page * pageSize;\r\n\r\n    // If the start index exceeds the list length, do not try and fix the end index to the end.\r\n    const endIndex = startIndex < length ?\r\n        Math.min(startIndex + pageSize, length) :\r\n        startIndex + pageSize;\r\n\r\n    return `${startIndex + 1} - ${endIndex} of ${length}`;\r\n  }\r\n}\r\n\r\n/** @docs-private */\r\nexport function MAT_PAGINATOR_INTL_PROVIDER_FACTORY(parentIntl: MatPaginatorIntl) {\r\n  return parentIntl || new MatPaginatorIntl();\r\n}\r\n\r\n/** @docs-private */\r\nexport const MAT_PAGINATOR_INTL_PROVIDER = {\r\n  // If there is already an MatPaginatorIntl available, use that. Otherwise, provide a new one.\r\n  provide: MatPaginatorIntl,\r\n  deps: [[new Optional(), new SkipSelf(), MatPaginatorIntl]],\r\n  useFactory: MAT_PAGINATOR_INTL_PROVIDER_FACTORY\r\n};\r\n"],"names":[],"mappings":"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"}
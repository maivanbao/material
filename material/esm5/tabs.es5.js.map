{"version":3,"file":"tabs.es5.js","sources":["../../../src/lib/tabs/index.ts","../../../src/lib/tabs/public-api.ts","../../../src/lib/tabs/tab-nav-bar/index.ts","../../../src/lib/tabs/tabs-module.ts","../../../src/lib/tabs/tab-nav-bar/tab-nav-bar.ts","../../../src/lib/tabs/tab-header.ts","../../../src/lib/tabs/tab-label-wrapper.ts","../../../src/lib/tabs/tab-group.ts","../../../src/lib/tabs/tab-body.ts","../../../src/lib/tabs/tabs-animations.ts","../../../src/lib/tabs/tab.ts","../../../src/lib/tabs/tab-label.ts","../../../src/lib/tabs/ink-bar.ts"],"sourcesContent":["/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {MatTabBase as ɵe,_MatTabMixinBase as ɵf} from './tab';\nexport {MatTabHeaderBase as ɵa,_MatTabHeaderMixinBase as ɵb} from './tab-header';\nexport {MatTabLabelWrapperBase as ɵc,_MatTabLabelWrapperMixinBase as ɵd} from './tab-label-wrapper';\nexport {MatTabLinkBase as ɵi,MatTabNavBase as ɵg,_MatTabLinkMixinBase as ɵj,_MatTabNavMixinBase as ɵh} from './tab-nav-bar/tab-nav-bar';","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nexport * from './tabs-module';\r\nexport * from './tab-group';\r\nexport {MatInkBar} from './ink-bar';\r\nexport {\r\n  MatTabBody,\r\n  MatTabBodyOriginState,\r\n  MatTabBodyPositionState,\r\n  MatTabBodyPortal\r\n} from './tab-body';\r\nexport {MatTabHeader, ScrollDirection} from './tab-header';\r\nexport {MatTabLabelWrapper} from './tab-label-wrapper';\r\nexport {MatTab} from './tab';\r\nexport {MatTabLabel} from './tab-label';\r\nexport {MatTabNav, MatTabLink} from './tab-nav-bar/index';\r\nexport * from './tabs-animations';\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nexport * from './tab-nav-bar';\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {ObserversModule} from '@angular/cdk/observers';\r\nimport {PortalModule} from '@angular/cdk/portal';\r\nimport {ScrollDispatchModule, VIEWPORT_RULER_PROVIDER} from '@angular/cdk/scrolling';\r\nimport {CommonModule} from '@angular/common';\r\nimport {NgModule} from '@angular/core';\r\nimport {MatCommonModule, MatRippleModule} from '@angular/material/core';\r\nimport {MatInkBar} from './ink-bar';\r\nimport {MatTab} from './tab';\r\nimport {MatTabBody, MatTabBodyPortal} from './tab-body';\r\nimport {MatTabGroup} from './tab-group';\r\nimport {MatTabHeader} from './tab-header';\r\nimport {MatTabLabel} from './tab-label';\r\nimport {MatTabLabelWrapper} from './tab-label-wrapper';\r\nimport {MatTabLink, MatTabNav} from './tab-nav-bar/tab-nav-bar';\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    MatCommonModule,\r\n    PortalModule,\r\n    MatRippleModule,\r\n    ObserversModule,\r\n    ScrollDispatchModule,\r\n  ],\r\n  // Don't export all components because some are only to be used internally.\r\n  exports: [\r\n    MatCommonModule,\r\n    MatTabGroup,\r\n    MatTabLabel,\r\n    MatTab,\r\n    MatTabNav,\r\n    MatTabLink,\r\n  ],\r\n  declarations: [\r\n    MatTabGroup,\r\n    MatTabLabel,\r\n    MatTab,\r\n    MatInkBar,\r\n    MatTabLabelWrapper,\r\n    MatTabNav,\r\n    MatTabLink,\r\n    MatTabBody,\r\n    MatTabBodyPortal,\r\n    MatTabHeader\r\n  ],\r\n  providers: [VIEWPORT_RULER_PROVIDER],\r\n})\r\nexport class MatTabsModule {}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\nimport {Directionality} from '@angular/cdk/bidi';\r\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\r\nimport {Platform} from '@angular/cdk/platform';\r\nimport {ViewportRuler} from '@angular/cdk/scrolling';\r\nimport {\r\n  AfterContentInit,\r\n  Attribute,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ContentChildren,\r\n  Directive,\r\n  ElementRef,\r\n  forwardRef,\r\n  Inject,\r\n  Input,\r\n  NgZone,\r\n  OnDestroy,\r\n  Optional,\r\n  QueryList,\r\n  ViewChild,\r\n  ViewEncapsulation,\r\n} from '@angular/core';\r\nimport {\r\n  CanColor,\r\n  CanDisable,\r\n  CanDisableRipple,\r\n  HasTabIndex,\r\n  MAT_RIPPLE_GLOBAL_OPTIONS,\r\n  mixinColor,\r\n  mixinDisabled,\r\n  mixinDisableRipple,\r\n  mixinTabIndex, RippleConfig,\r\n  RippleGlobalOptions,\r\n  RippleRenderer,\r\n  RippleTarget,\r\n  ThemePalette,\r\n} from '@angular/material/core';\r\nimport {merge} from 'rxjs/observable/merge';\r\nimport {of as observableOf} from 'rxjs/observable/of';\r\nimport {takeUntil} from 'rxjs/operators/takeUntil';\r\nimport {Subject} from 'rxjs/Subject';\r\nimport {MatInkBar} from '../ink-bar';\r\n\r\n\r\n// Boilerplate for applying mixins to MatTabNav.\r\n/** @docs-private */\r\nexport class MatTabNavBase {\r\n  constructor(public _elementRef: ElementRef) {}\r\n}\r\nexport const _MatTabNavMixinBase = mixinColor(MatTabNavBase, 'primary');\r\n\r\n/**\r\n * Navigation component matching the styles of the tab group header.\r\n * Provides anchored navigation with animated ink bar.\r\n */\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: '[mat-tab-nav-bar]',\r\n  exportAs: 'matTabNavBar, matTabNav',\r\n  inputs: ['color'],\r\n  templateUrl: 'tab-nav-bar.html',\r\n  styleUrls: ['tab-nav-bar.css'],\r\n  host: {'class': 'mat-tab-nav-bar'},\r\n  encapsulation: ViewEncapsulation.None,\r\n  preserveWhitespaces: false,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class MatTabNav extends _MatTabNavMixinBase implements AfterContentInit, CanColor,\r\n    OnDestroy {\r\n\r\n  /** Subject that emits when the component has been destroyed. */\r\n  private readonly _onDestroy = new Subject<void>();\r\n\r\n  _activeLinkChanged: boolean;\r\n  _activeLinkElement: ElementRef;\r\n\r\n  @ViewChild(MatInkBar) _inkBar: MatInkBar;\r\n\r\n  /** Query list of all tab links of the tab navigation. */\r\n  @ContentChildren(forwardRef(() => MatTabLink), {descendants: true})\r\n  _tabLinks: QueryList<MatTabLink>;\r\n\r\n  /** Background color of the tab nav. */\r\n  @Input()\r\n  get backgroundColor(): ThemePalette { return this._backgroundColor; }\r\n  set backgroundColor(value: ThemePalette) {\r\n    const nativeElement: HTMLElement = this._elementRef.nativeElement;\r\n\r\n    nativeElement.classList.remove(`mat-background-${this.backgroundColor}`);\r\n\r\n    if (value) {\r\n      nativeElement.classList.add(`mat-background-${value}`);\r\n    }\r\n\r\n    this._backgroundColor = value;\r\n  }\r\n  private _backgroundColor: ThemePalette;\r\n\r\n  /** Whether ripples should be disabled for all links or not. */\r\n  @Input()\r\n  get disableRipple() { return this._disableRipple; }\r\n  set disableRipple(value: boolean) {\r\n    this._disableRipple = coerceBooleanProperty(value);\r\n    this._setLinkDisableRipple();\r\n  }\r\n  private _disableRipple: boolean = false;\r\n\r\n  constructor(elementRef: ElementRef,\r\n              @Optional() private _dir: Directionality,\r\n              private _ngZone: NgZone,\r\n              private _changeDetectorRef: ChangeDetectorRef,\r\n              private _viewportRuler: ViewportRuler) {\r\n    super(elementRef);\r\n  }\r\n\r\n  /** Notifies the component that the active link has been changed. */\r\n  updateActiveLink(element: ElementRef) {\r\n    this._activeLinkChanged = this._activeLinkElement != element;\r\n    this._activeLinkElement = element;\r\n\r\n    if (this._activeLinkChanged) {\r\n      this._changeDetectorRef.markForCheck();\r\n    }\r\n  }\r\n\r\n  ngAfterContentInit(): void {\r\n    this._ngZone.runOutsideAngular(() => {\r\n      const dirChange = this._dir ? this._dir.change : observableOf(null);\r\n\r\n      return merge(dirChange, this._viewportRuler.change(10)).pipe(takeUntil(this._onDestroy))\r\n          .subscribe(() => this._alignInkBar());\r\n    });\r\n\r\n    this._setLinkDisableRipple();\r\n  }\r\n\r\n  /** Checks if the active link has been changed and, if so, will update the ink bar. */\r\n  ngAfterContentChecked(): void {\r\n    if (this._activeLinkChanged) {\r\n      this._alignInkBar();\r\n      this._activeLinkChanged = false;\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this._onDestroy.next();\r\n    this._onDestroy.complete();\r\n  }\r\n\r\n  /** Aligns the ink bar to the active link. */\r\n  _alignInkBar(): void {\r\n    if (this._activeLinkElement) {\r\n      this._inkBar.alignToElement(this._activeLinkElement.nativeElement);\r\n    }\r\n  }\r\n\r\n  /** Sets the `disableRipple` property on each link of the navigation bar. */\r\n  private _setLinkDisableRipple() {\r\n    if (this._tabLinks) {\r\n      this._tabLinks.forEach(link => link.disableRipple = this.disableRipple);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n// Boilerplate for applying mixins to MatTabLink.\r\nexport class MatTabLinkBase {}\r\nexport const _MatTabLinkMixinBase =\r\n  mixinTabIndex(mixinDisableRipple(mixinDisabled(MatTabLinkBase)));\r\n\r\n/**\r\n * Link inside of a `mat-tab-nav-bar`.\r\n */\r\n@Directive({\r\n  selector: '[mat-tab-link], [matTabLink]',\r\n  exportAs: 'matTabLink',\r\n  inputs: ['disabled', 'disableRipple', 'tabIndex'],\r\n  host: {\r\n    'class': 'mat-tab-link',\r\n    '[attr.aria-disabled]': 'disabled.toString()',\r\n    '[attr.tabIndex]': 'tabIndex',\r\n    '[class.mat-tab-disabled]': 'disabled',\r\n    '[class.mat-tab-label-active]': 'active',\r\n    '(click)': '_handleClick($event)'\r\n  }\r\n})\r\nexport class MatTabLink extends _MatTabLinkMixinBase\r\n    implements OnDestroy, CanDisable, CanDisableRipple, HasTabIndex, RippleTarget {\r\n\r\n  /** Whether the tab link is active or not. */\r\n  private _isActive: boolean = false;\r\n\r\n  /** Reference to the RippleRenderer for the tab-link. */\r\n  private _tabLinkRipple: RippleRenderer;\r\n\r\n  /** Whether the link is active. */\r\n  @Input()\r\n  get active(): boolean { return this._isActive; }\r\n  set active(value: boolean) {\r\n    this._isActive = value;\r\n    if (value) {\r\n      this._tabNavBar.updateActiveLink(this._elementRef);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Ripple configuration for ripples that are launched on pointer down.\r\n   * @docs-private\r\n   */\r\n  rippleConfig: RippleConfig = {};\r\n\r\n  /**\r\n   * Whether ripples are disabled on interaction\r\n   * @docs-private\r\n   */\r\n  get rippleDisabled(): boolean {\r\n    return this.disabled || this.disableRipple;\r\n  }\r\n\r\n  constructor(private _tabNavBar: MatTabNav,\r\n              private _elementRef: ElementRef,\r\n              ngZone: NgZone,\r\n              platform: Platform,\r\n              @Optional() @Inject(MAT_RIPPLE_GLOBAL_OPTIONS) globalOptions: RippleGlobalOptions,\r\n              @Attribute('tabindex') tabIndex: string) {\r\n    super();\r\n\r\n    this._tabLinkRipple = new RippleRenderer(this, ngZone, _elementRef, platform);\r\n    this._tabLinkRipple.setupTriggerEvents(_elementRef.nativeElement);\r\n\r\n    this.tabIndex = parseInt(tabIndex) || 0;\r\n\r\n    if (globalOptions) {\r\n      this.rippleConfig = {\r\n        terminateOnPointerUp: globalOptions.terminateOnPointerUp,\r\n        speedFactor: globalOptions.baseSpeedFactor,\r\n        animation: globalOptions.animation,\r\n      };\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this._tabLinkRipple._removeTriggerEvents();\r\n  }\r\n\r\n  /**\r\n   * Handles the click event, preventing default navigation if the tab link is disabled.\r\n   */\r\n  _handleClick(event: MouseEvent) {\r\n    if (this.disabled) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {Direction, Directionality} from '@angular/cdk/bidi';\r\nimport {ENTER, LEFT_ARROW, RIGHT_ARROW, SPACE, HOME, END} from '@angular/cdk/keycodes';\r\nimport {\r\n  AfterContentChecked,\r\n  AfterContentInit,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ContentChildren,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Input,\r\n  OnDestroy,\r\n  Optional,\r\n  Output,\r\n  QueryList,\r\n  ViewChild,\r\n  ViewEncapsulation,\r\n} from '@angular/core';\r\nimport {CanDisableRipple, mixinDisableRipple} from '@angular/material/core';\r\nimport {merge} from 'rxjs/observable/merge';\r\nimport {of as observableOf} from 'rxjs/observable/of';\r\nimport {Subscription} from 'rxjs/Subscription';\r\nimport {coerceNumberProperty} from '@angular/cdk/coercion';\r\nimport {MatInkBar} from './ink-bar';\r\nimport {MatTabLabelWrapper} from './tab-label-wrapper';\r\nimport {ViewportRuler} from '@angular/cdk/scrolling';\r\n\r\n\r\n/**\r\n * The directions that scrolling can go in when the header's tabs exceed the header width. 'After'\r\n * will scroll the header towards the end of the tabs list and 'before' will scroll towards the\r\n * beginning of the list.\r\n */\r\nexport type ScrollDirection = 'after' | 'before';\r\n\r\n/**\r\n * The distance in pixels that will be overshot when scrolling a tab label into view. This helps\r\n * provide a small affordance to the label next to it.\r\n */\r\nconst EXAGGERATED_OVERSCROLL = 60;\r\n\r\n// Boilerplate for applying mixins to MatTabHeader.\r\n/** @docs-private */\r\nexport class MatTabHeaderBase {}\r\nexport const _MatTabHeaderMixinBase = mixinDisableRipple(MatTabHeaderBase);\r\n\r\n/**\r\n * The header of the tab group which displays a list of all the tabs in the tab group. Includes\r\n * an ink bar that follows the currently selected tab. When the tabs list's width exceeds the\r\n * width of the header container, then arrows will be displayed to allow the user to scroll\r\n * left and right across the header.\r\n * @docs-private\r\n */\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'mat-tab-header',\r\n  templateUrl: 'tab-header.html',\r\n  styleUrls: ['tab-header.css'],\r\n  inputs: ['disableRipple'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  preserveWhitespaces: false,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  host: {\r\n    'class': 'mat-tab-header',\r\n    '[class.mat-tab-header-pagination-controls-enabled]': '_showPaginationControls',\r\n    '[class.mat-tab-header-rtl]': \"_getLayoutDirection() == 'rtl'\",\r\n  },\r\n})\r\nexport class MatTabHeader extends _MatTabHeaderMixinBase\r\n    implements AfterContentChecked, AfterContentInit, OnDestroy, CanDisableRipple {\r\n\r\n  @ContentChildren(MatTabLabelWrapper) _labelWrappers: QueryList<MatTabLabelWrapper>;\r\n  @ViewChild(MatInkBar) _inkBar: MatInkBar;\r\n  @ViewChild('tabListContainer') _tabListContainer: ElementRef;\r\n  @ViewChild('tabList') _tabList: ElementRef;\r\n\r\n  /** The tab index that is focused. */\r\n  private _focusIndex: number = 0;\r\n\r\n  /** The distance in pixels that the tab labels should be translated to the left. */\r\n  private _scrollDistance = 0;\r\n\r\n  /** Whether the header should scroll to the selected index after the view has been checked. */\r\n  private _selectedIndexChanged = false;\r\n\r\n  /** Combines listeners that will re-align the ink bar whenever they're invoked. */\r\n  private _realignInkBar = Subscription.EMPTY;\r\n\r\n  /** Whether the controls for pagination should be displayed */\r\n  _showPaginationControls = false;\r\n\r\n  /** Whether the tab list can be scrolled more towards the end of the tab label list. */\r\n  _disableScrollAfter = true;\r\n\r\n  /** Whether the tab list can be scrolled more towards the beginning of the tab label list. */\r\n  _disableScrollBefore = true;\r\n\r\n  /**\r\n   * The number of tab labels that are displayed on the header. When this changes, the header\r\n   * should re-evaluate the scroll position.\r\n   */\r\n  private _tabLabelCount: number;\r\n\r\n  /** Whether the scroll distance has changed and should be applied after the view is checked. */\r\n  private _scrollDistanceChanged: boolean;\r\n\r\n  private _selectedIndex: number = 0;\r\n\r\n  /** The index of the active tab. */\r\n  @Input()\r\n  get selectedIndex(): number { return this._selectedIndex; }\r\n  set selectedIndex(value: number) {\r\n    value = coerceNumberProperty(value);\r\n    this._selectedIndexChanged = this._selectedIndex != value;\r\n    this._selectedIndex = value;\r\n    this._focusIndex = value;\r\n  }\r\n\r\n  /** Event emitted when the option is selected. */\r\n  @Output() readonly selectFocusedIndex = new EventEmitter();\r\n\r\n  /** Event emitted when a label is focused. */\r\n  @Output() readonly indexFocused = new EventEmitter();\r\n\r\n  constructor(private _elementRef: ElementRef,\r\n              private _changeDetectorRef: ChangeDetectorRef,\r\n              private _viewportRuler: ViewportRuler,\r\n              @Optional() private _dir: Directionality) {\r\n    super();\r\n  }\r\n\r\n  ngAfterContentChecked(): void {\r\n    // If the number of tab labels have changed, check if scrolling should be enabled\r\n    if (this._tabLabelCount != this._labelWrappers.length) {\r\n      this._updatePagination();\r\n      this._tabLabelCount = this._labelWrappers.length;\r\n      this._changeDetectorRef.markForCheck();\r\n    }\r\n\r\n    // If the selected index has changed, scroll to the label and check if the scrolling controls\r\n    // should be disabled.\r\n    if (this._selectedIndexChanged) {\r\n      this._scrollToLabel(this._selectedIndex);\r\n      this._checkScrollingControls();\r\n      this._alignInkBarToSelectedTab();\r\n      this._selectedIndexChanged = false;\r\n      this._changeDetectorRef.markForCheck();\r\n    }\r\n\r\n    // If the scroll distance has been changed (tab selected, focused, scroll controls activated),\r\n    // then translate the header to reflect this.\r\n    if (this._scrollDistanceChanged) {\r\n      this._updateTabScrollPosition();\r\n      this._scrollDistanceChanged = false;\r\n      this._changeDetectorRef.markForCheck();\r\n    }\r\n  }\r\n\r\n  _handleKeydown(event: KeyboardEvent) {\r\n    switch (event.keyCode) {\r\n      case RIGHT_ARROW:\r\n        this._focusNextTab();\r\n        break;\r\n      case LEFT_ARROW:\r\n        this._focusPreviousTab();\r\n        break;\r\n      case HOME:\r\n        this._focusFirstTab();\r\n        event.preventDefault();\r\n        break;\r\n      case END:\r\n        this._focusLastTab();\r\n        event.preventDefault();\r\n        break;\r\n      case ENTER:\r\n      case SPACE:\r\n        this.selectFocusedIndex.emit(this.focusIndex);\r\n        event.preventDefault();\r\n        break;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Aligns the ink bar to the selected tab on load.\r\n   */\r\n  ngAfterContentInit() {\r\n    const dirChange = this._dir ? this._dir.change : observableOf(null);\r\n    const resize = this._viewportRuler.change(150);\r\n    const realign = () => {\r\n      this._updatePagination();\r\n      this._alignInkBarToSelectedTab();\r\n    };\r\n\r\n    // Defer the first call in order to allow for slower browsers to lay out the elements.\r\n    // This helps in cases where the user lands directly on a page with paginated tabs.\r\n    typeof requestAnimationFrame !== 'undefined' ? requestAnimationFrame(realign) : realign();\r\n    this._realignInkBar = merge(dirChange, resize).subscribe(realign);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this._realignInkBar.unsubscribe();\r\n  }\r\n\r\n  /**\r\n   * Callback for when the MutationObserver detects that the content has changed.\r\n   */\r\n  _onContentChanges() {\r\n    this._updatePagination();\r\n    this._alignInkBarToSelectedTab();\r\n    this._changeDetectorRef.markForCheck();\r\n  }\r\n\r\n  /**\r\n   * Updating the view whether pagination should be enabled or not\r\n   */\r\n  _updatePagination() {\r\n    this._checkPaginationEnabled();\r\n    this._checkScrollingControls();\r\n    this._updateTabScrollPosition();\r\n  }\r\n\r\n  /** When the focus index is set, we must manually send focus to the correct label */\r\n  set focusIndex(value: number) {\r\n    if (!this._isValidIndex(value) || this._focusIndex == value) { return; }\r\n\r\n    this._focusIndex = value;\r\n    this.indexFocused.emit(value);\r\n    this._setTabFocus(value);\r\n  }\r\n\r\n  /** Tracks which element has focus; used for keyboard navigation */\r\n  get focusIndex(): number { return this._focusIndex; }\r\n\r\n  /**\r\n   * Determines if an index is valid.  If the tabs are not ready yet, we assume that the user is\r\n   * providing a valid index and return true.\r\n   */\r\n  _isValidIndex(index: number): boolean {\r\n    if (!this._labelWrappers) { return true; }\r\n\r\n    const tab = this._labelWrappers ? this._labelWrappers.toArray()[index] : null;\r\n    return !!tab && !tab.disabled;\r\n  }\r\n\r\n  /**\r\n   * Sets focus on the HTML element for the label wrapper and scrolls it into the view if\r\n   * scrolling is enabled.\r\n   */\r\n  _setTabFocus(tabIndex: number) {\r\n    if (this._showPaginationControls) {\r\n      this._scrollToLabel(tabIndex);\r\n    }\r\n\r\n    if (this._labelWrappers && this._labelWrappers.length) {\r\n      this._labelWrappers.toArray()[tabIndex].focus();\r\n\r\n      // Do not let the browser manage scrolling to focus the element, this will be handled\r\n      // by using translation. In LTR, the scroll left should be 0. In RTL, the scroll width\r\n      // should be the full width minus the offset width.\r\n      const containerEl = this._tabListContainer.nativeElement;\r\n      const dir = this._getLayoutDirection();\r\n\r\n      if (dir == 'ltr') {\r\n        containerEl.scrollLeft = 0;\r\n      } else {\r\n        containerEl.scrollLeft = containerEl.scrollWidth - containerEl.offsetWidth;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Moves the focus towards the beginning or the end of the list depending on the offset provided.\r\n   * Valid offsets are 1 and -1.\r\n   */\r\n  _moveFocus(offset: number) {\r\n    if (this._labelWrappers) {\r\n      const tabs: MatTabLabelWrapper[] = this._labelWrappers.toArray();\r\n\r\n      for (let i = this.focusIndex + offset; i < tabs.length && i >= 0; i += offset) {\r\n        if (this._isValidIndex(i)) {\r\n          this.focusIndex = i;\r\n          return;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /** Increment the focus index by 1 until a valid tab is found. */\r\n  _focusNextTab(): void {\r\n    this._moveFocus(this._getLayoutDirection() == 'ltr' ? 1 : -1);\r\n  }\r\n\r\n  /** Decrement the focus index by 1 until a valid tab is found. */\r\n  _focusPreviousTab(): void {\r\n    this._moveFocus(this._getLayoutDirection() == 'ltr' ? -1 : 1);\r\n  }\r\n\r\n  /** Focuses the first tab. */\r\n  private _focusFirstTab(): void {\r\n    for (let i = 0; i < this._labelWrappers.length; i++) {\r\n      if (this._isValidIndex(i)) {\r\n        this.focusIndex = i;\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  /** Focuses the last tab. */\r\n  private _focusLastTab(): void {\r\n    for (let i = this._labelWrappers.length - 1; i > -1; i--) {\r\n      if (this._isValidIndex(i)) {\r\n        this.focusIndex = i;\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  /** The layout direction of the containing app. */\r\n  _getLayoutDirection(): Direction {\r\n    return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\r\n  }\r\n\r\n  /** Performs the CSS transformation on the tab list that will cause the list to scroll. */\r\n  _updateTabScrollPosition() {\r\n    const scrollDistance = this.scrollDistance;\r\n    const translateX = this._getLayoutDirection() === 'ltr' ? -scrollDistance : scrollDistance;\r\n\r\n    this._tabList.nativeElement.style.transform = `translate3d(${translateX}px, 0, 0)`;\r\n  }\r\n\r\n  /** Sets the distance in pixels that the tab header should be transformed in the X-axis. */\r\n  get scrollDistance(): number { return this._scrollDistance; }\r\n  set scrollDistance(v: number) {\r\n    this._scrollDistance = Math.max(0, Math.min(this._getMaxScrollDistance(), v));\r\n\r\n    // Mark that the scroll distance has changed so that after the view is checked, the CSS\r\n    // transformation can move the header.\r\n    this._scrollDistanceChanged = true;\r\n    this._checkScrollingControls();\r\n  }\r\n\r\n  /**\r\n   * Moves the tab list in the 'before' or 'after' direction (towards the beginning of the list or\r\n   * the end of the list, respectively). The distance to scroll is computed to be a third of the\r\n   * length of the tab list view window.\r\n   *\r\n   * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\r\n   * should be called sparingly.\r\n   */\r\n  _scrollHeader(scrollDir: ScrollDirection) {\r\n    const viewLength = this._tabListContainer.nativeElement.offsetWidth;\r\n\r\n    // Move the scroll distance one-third the length of the tab list's viewport.\r\n    this.scrollDistance += (scrollDir == 'before' ? -1 : 1) * viewLength / 3;\r\n  }\r\n\r\n  /**\r\n   * Moves the tab list such that the desired tab label (marked by index) is moved into view.\r\n   *\r\n   * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\r\n   * should be called sparingly.\r\n   */\r\n  _scrollToLabel(labelIndex: number) {\r\n    const selectedLabel = this._labelWrappers ? this._labelWrappers.toArray()[labelIndex] : null;\r\n\r\n    if (!selectedLabel) { return; }\r\n\r\n    // The view length is the visible width of the tab labels.\r\n    const viewLength = this._tabListContainer.nativeElement.offsetWidth;\r\n\r\n    let labelBeforePos: number, labelAfterPos: number;\r\n    if (this._getLayoutDirection() == 'ltr') {\r\n      labelBeforePos = selectedLabel.getOffsetLeft();\r\n      labelAfterPos = labelBeforePos + selectedLabel.getOffsetWidth();\r\n    } else {\r\n      labelAfterPos = this._tabList.nativeElement.offsetWidth - selectedLabel.getOffsetLeft();\r\n      labelBeforePos = labelAfterPos - selectedLabel.getOffsetWidth();\r\n    }\r\n\r\n    const beforeVisiblePos = this.scrollDistance;\r\n    const afterVisiblePos = this.scrollDistance + viewLength;\r\n\r\n    if (labelBeforePos < beforeVisiblePos) {\r\n      // Scroll header to move label to the before direction\r\n      this.scrollDistance -= beforeVisiblePos - labelBeforePos + EXAGGERATED_OVERSCROLL;\r\n    } else if (labelAfterPos > afterVisiblePos) {\r\n      // Scroll header to move label to the after direction\r\n      this.scrollDistance += labelAfterPos - afterVisiblePos + EXAGGERATED_OVERSCROLL;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Evaluate whether the pagination controls should be displayed. If the scroll width of the\r\n   * tab list is wider than the size of the header container, then the pagination controls should\r\n   * be shown.\r\n   *\r\n   * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\r\n   * should be called sparingly.\r\n   */\r\n  _checkPaginationEnabled() {\r\n    const isEnabled =\r\n        this._tabList.nativeElement.scrollWidth > this._elementRef.nativeElement.offsetWidth;\r\n\r\n    if (!isEnabled) {\r\n      this.scrollDistance = 0;\r\n    }\r\n\r\n    if (isEnabled !== this._showPaginationControls) {\r\n      this._changeDetectorRef.markForCheck();\r\n    }\r\n\r\n    this._showPaginationControls = isEnabled;\r\n  }\r\n\r\n  /**\r\n   * Evaluate whether the before and after controls should be enabled or disabled.\r\n   * If the header is at the beginning of the list (scroll distance is equal to 0) then disable the\r\n   * before button. If the header is at the end of the list (scroll distance is equal to the\r\n   * maximum distance we can scroll), then disable the after button.\r\n   *\r\n   * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\r\n   * should be called sparingly.\r\n   */\r\n  _checkScrollingControls() {\r\n    // Check if the pagination arrows should be activated.\r\n    this._disableScrollBefore = this.scrollDistance == 0;\r\n    this._disableScrollAfter = this.scrollDistance == this._getMaxScrollDistance();\r\n    this._changeDetectorRef.markForCheck();\r\n  }\r\n\r\n  /**\r\n   * Determines what is the maximum length in pixels that can be set for the scroll distance. This\r\n   * is equal to the difference in width between the tab list container and tab header container.\r\n   *\r\n   * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\r\n   * should be called sparingly.\r\n   */\r\n  _getMaxScrollDistance(): number {\r\n    const lengthOfTabList = this._tabList.nativeElement.scrollWidth;\r\n    const viewLength = this._tabListContainer.nativeElement.offsetWidth;\r\n    return (lengthOfTabList - viewLength) || 0;\r\n  }\r\n\r\n  /** Tells the ink-bar to align itself to the current label wrapper */\r\n  private _alignInkBarToSelectedTab(): void {\r\n    const selectedLabelWrapper = this._labelWrappers && this._labelWrappers.length ?\r\n        this._labelWrappers.toArray()[this.selectedIndex].elementRef.nativeElement :\r\n        null;\r\n\r\n    this._inkBar.alignToElement(selectedLabelWrapper);\r\n  }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {Directive, ElementRef} from '@angular/core';\r\nimport {CanDisable, mixinDisabled} from '@angular/material/core';\r\n\r\n// Boilerplate for applying mixins to MatTabLabelWrapper.\r\n/** @docs-private */\r\nexport class MatTabLabelWrapperBase {}\r\nexport const _MatTabLabelWrapperMixinBase = mixinDisabled(MatTabLabelWrapperBase);\r\n\r\n/**\r\n * Used in the `mat-tab-group` view to display tab labels.\r\n * @docs-private\r\n */\r\n@Directive({\r\n  selector: '[matTabLabelWrapper]',\r\n  inputs: ['disabled'],\r\n  host: {\r\n    '[class.mat-tab-disabled]': 'disabled'\r\n  }\r\n})\r\nexport class MatTabLabelWrapper extends _MatTabLabelWrapperMixinBase implements CanDisable {\r\n  constructor(public elementRef: ElementRef) {\r\n    super();\r\n  }\r\n\r\n  /** Sets focus on the wrapper element */\r\n  focus(): void {\r\n    this.elementRef.nativeElement.focus();\r\n  }\r\n\r\n  getOffsetLeft(): number {\r\n    return this.elementRef.nativeElement.offsetLeft;\r\n  }\r\n\r\n  getOffsetWidth(): number {\r\n    return this.elementRef.nativeElement.offsetWidth;\r\n  }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {\r\n  AfterContentChecked,\r\n  AfterContentInit,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ContentChildren,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Input,\r\n  OnDestroy,\r\n  Output,\r\n  QueryList,\r\n  ViewChild,\r\n  ViewEncapsulation,\r\n} from '@angular/core';\r\nimport {coerceBooleanProperty, coerceNumberProperty} from '@angular/cdk/coercion';\r\nimport {Subscription} from 'rxjs/Subscription';\r\nimport {MatTab} from './tab';\r\nimport {MatTabHeader} from './tab-header';\r\nimport {merge} from 'rxjs/observable/merge';\r\nimport {\r\n  CanColor,\r\n  CanDisableRipple,\r\n  mixinColor,\r\n  mixinDisableRipple,\r\n  ThemePalette\r\n} from '@angular/material/core';\r\n\r\n\r\n/** Used to generate unique ID's for each tab component */\r\nlet nextId = 0;\r\n\r\n/** A simple change event emitted on focus or selection changes. */\r\nexport class MatTabChangeEvent {\r\n  /** Index of the currently-selected tab. */\r\n  index: number;\r\n  /** Reference to the currently-selected tab. */\r\n  tab: MatTab;\r\n}\r\n\r\n/** Possible positions for the tab header. */\r\nexport type MatTabHeaderPosition = 'above' | 'below';\r\n\r\n// Boilerplate for applying mixins to MatTabGroup.\r\n/** @docs-private */\r\nexport class MatTabGroupBase {\r\n  constructor(public _elementRef: ElementRef) {}\r\n}\r\nexport const _MatTabGroupMixinBase = mixinColor(mixinDisableRipple(MatTabGroupBase), 'primary');\r\n\r\n/**\r\n * Material design tab-group component.  Supports basic tab pairs (label + content) and includes\r\n * animated ink-bar, keyboard navigation, and screen reader.\r\n * See: https://www.google.com/design/spec/components/tabs.html\r\n */\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'mat-tab-group',\r\n  exportAs: 'matTabGroup',\r\n  templateUrl: 'tab-group.html',\r\n  styleUrls: ['tab-group.css'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  preserveWhitespaces: false,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  inputs: ['color', 'disableRipple'],\r\n  host: {\r\n    'class': 'mat-tab-group',\r\n    '[class.mat-tab-group-dynamic-height]': 'dynamicHeight',\r\n    '[class.mat-tab-group-inverted-header]': 'headerPosition === \"below\"',\r\n  },\r\n})\r\nexport class MatTabGroup extends _MatTabGroupMixinBase implements AfterContentInit,\r\n    AfterContentChecked, OnDestroy, CanColor, CanDisableRipple {\r\n\r\n  @ContentChildren(MatTab) _tabs: QueryList<MatTab>;\r\n\r\n  @ViewChild('tabBodyWrapper') _tabBodyWrapper: ElementRef;\r\n\r\n  /** The tab index that should be selected after the content has been checked. */\r\n  private _indexToSelect: number | null = 0;\r\n\r\n  /** Snapshot of the height of the tab body wrapper before another tab is activated. */\r\n  private _tabBodyWrapperHeight: number = 0;\r\n\r\n  /** Subscription to tabs being added/removed. */\r\n  private _tabsSubscription = Subscription.EMPTY;\r\n\r\n  /** Subscription to changes in the tab labels. */\r\n  private _tabLabelSubscription = Subscription.EMPTY;\r\n\r\n  /** Whether the tab group should grow to the size of the active tab. */\r\n  @Input()\r\n  get dynamicHeight(): boolean { return this._dynamicHeight; }\r\n  set dynamicHeight(value: boolean) { this._dynamicHeight = coerceBooleanProperty(value); }\r\n  private _dynamicHeight: boolean = false;\r\n\r\n  /**\r\n   * @deprecated\r\n   * @deletion-target 6.0.0\r\n   */\r\n  @Input('mat-dynamic-height')\r\n  get _dynamicHeightDeprecated(): boolean { return this._dynamicHeight; }\r\n  set _dynamicHeightDeprecated(value: boolean) { this._dynamicHeight = value; }\r\n\r\n  /** The index of the active tab. */\r\n  @Input()\r\n  get selectedIndex(): number | null { return this._selectedIndex; }\r\n  set selectedIndex(value: number | null) {\r\n    this._indexToSelect = coerceNumberProperty(value, null);\r\n  }\r\n  private _selectedIndex: number | null = null;\r\n\r\n  /** Position of the tab header. */\r\n  @Input() headerPosition: MatTabHeaderPosition = 'above';\r\n\r\n  /** Background color of the tab group. */\r\n  @Input()\r\n  get backgroundColor(): ThemePalette { return this._backgroundColor; }\r\n  set backgroundColor(value: ThemePalette) {\r\n    const nativeElement: HTMLElement = this._elementRef.nativeElement;\r\n\r\n    nativeElement.classList.remove(`mat-background-${this.backgroundColor}`);\r\n\r\n    if (value) {\r\n      nativeElement.classList.add(`mat-background-${value}`);\r\n    }\r\n\r\n    this._backgroundColor = value;\r\n  }\r\n  private _backgroundColor: ThemePalette;\r\n\r\n  /** Output to enable support for two-way binding on `[(selectedIndex)]` */\r\n  @Output() readonly selectedIndexChange: EventEmitter<number> = new EventEmitter<number>();\r\n\r\n  /** Event emitted when focus has changed within a tab group. */\r\n  @Output() readonly focusChange: EventEmitter<MatTabChangeEvent> =\r\n      new EventEmitter<MatTabChangeEvent>();\r\n\r\n  /** Event emitted when the body animation has completed */\r\n  @Output() readonly animationDone: EventEmitter<void> = new EventEmitter<void>();\r\n\r\n  /** Event emitted when the tab selection has changed. */\r\n  @Output() readonly selectedTabChange: EventEmitter<MatTabChangeEvent> =\r\n      new EventEmitter<MatTabChangeEvent>(true);\r\n\r\n  /**\r\n   * Event emitted when the tab selection has changed.\r\n   * @deprecated Use `selectedTabChange` instead.\r\n   * @deletion-target 6.0.0\r\n   */\r\n  @Output() readonly selectChange: EventEmitter<MatTabChangeEvent> = this.selectedTabChange;\r\n\r\n  private _groupId: number;\r\n\r\n  constructor(elementRef: ElementRef,\r\n              private _changeDetectorRef: ChangeDetectorRef) {\r\n    super(elementRef);\r\n    this._groupId = nextId++;\r\n  }\r\n\r\n  /**\r\n   * After the content is checked, this component knows what tabs have been defined\r\n   * and what the selected index should be. This is where we can know exactly what position\r\n   * each tab should be in according to the new selected index, and additionally we know how\r\n   * a new selected tab should transition in (from the left or right).\r\n   */\r\n  ngAfterContentChecked() {\r\n    // Clamp the next selected index to the boundsof 0 and the tabs length.\r\n    // Note the `|| 0`, which ensures that values like NaN can't get through\r\n    // and which would otherwise throw the component into an infinite loop\r\n    // (since Math.max(NaN, 0) === NaN).\r\n    let indexToSelect = this._indexToSelect =\r\n        Math.min(this._tabs.length - 1, Math.max(this._indexToSelect || 0, 0));\r\n\r\n    // If there is a change in selected index, emit a change event. Should not trigger if\r\n    // the selected index has not yet been initialized.\r\n    if (this._selectedIndex != indexToSelect && this._selectedIndex != null) {\r\n      const tabChangeEvent = this._createChangeEvent(indexToSelect);\r\n      this.selectedTabChange.emit(tabChangeEvent);\r\n      // Emitting this value after change detection has run\r\n      // since the checked content may contain this variable'\r\n      Promise.resolve().then(() => this.selectedIndexChange.emit(indexToSelect));\r\n    }\r\n\r\n    // Setup the position for each tab and optionally setup an origin on the next selected tab.\r\n    this._tabs.forEach((tab: MatTab, index: number) => {\r\n      tab.position = index - indexToSelect;\r\n      tab.isActive = index === indexToSelect;\r\n\r\n      // If there is already a selected tab, then set up an origin for the next selected tab\r\n      // if it doesn't have one already.\r\n      if (this._selectedIndex != null && tab.position == 0 && !tab.origin) {\r\n        tab.origin = indexToSelect - this._selectedIndex;\r\n      }\r\n    });\r\n\r\n    if (this._selectedIndex !== indexToSelect) {\r\n      this._selectedIndex = indexToSelect;\r\n      this._changeDetectorRef.markForCheck();\r\n    }\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    this._subscribeToTabLabels();\r\n\r\n    // Subscribe to changes in the amount of tabs, in order to be\r\n    // able to re-render the content as new tabs are added or removed.\r\n    this._tabsSubscription = this._tabs.changes.subscribe(() => {\r\n      this._subscribeToTabLabels();\r\n      this._changeDetectorRef.markForCheck();\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this._tabsSubscription.unsubscribe();\r\n    this._tabLabelSubscription.unsubscribe();\r\n  }\r\n\r\n  _focusChanged(index: number) {\r\n    this.focusChange.emit(this._createChangeEvent(index));\r\n  }\r\n\r\n  private _createChangeEvent(index: number): MatTabChangeEvent {\r\n    const event = new MatTabChangeEvent;\r\n    event.index = index;\r\n    if (this._tabs && this._tabs.length) {\r\n      event.tab = this._tabs.toArray()[index];\r\n    }\r\n    return event;\r\n  }\r\n\r\n  /**\r\n   * Subscribes to changes in the tab labels. This is needed, because the @Input for the label is\r\n   * on the MatTab component, whereas the data binding is inside the MatTabGroup. In order for the\r\n   * binding to be updated, we need to subscribe to changes in it and trigger change detection\r\n   * manually.\r\n   */\r\n  private _subscribeToTabLabels() {\r\n    if (this._tabLabelSubscription) {\r\n      this._tabLabelSubscription.unsubscribe();\r\n    }\r\n\r\n    this._tabLabelSubscription = merge(\r\n        ...this._tabs.map(tab => tab._disableChange),\r\n        ...this._tabs.map(tab => tab._labelChange)).subscribe(() => {\r\n      this._changeDetectorRef.markForCheck();\r\n    });\r\n  }\r\n\r\n  /** Returns a unique id for each tab label element */\r\n  _getTabLabelId(i: number): string {\r\n    return `mat-tab-label-${this._groupId}-${i}`;\r\n  }\r\n\r\n  /** Returns a unique id for each tab content element */\r\n  _getTabContentId(i: number): string {\r\n    return `mat-tab-content-${this._groupId}-${i}`;\r\n  }\r\n\r\n  /**\r\n   * Sets the height of the body wrapper to the height of the activating tab if dynamic\r\n   * height property is true.\r\n   */\r\n  _setTabBodyWrapperHeight(tabHeight: number): void {\r\n    if (!this._dynamicHeight || !this._tabBodyWrapperHeight) { return; }\r\n\r\n    const wrapper: HTMLElement = this._tabBodyWrapper.nativeElement;\r\n\r\n    wrapper.style.height = this._tabBodyWrapperHeight + 'px';\r\n\r\n    // This conditional forces the browser to paint the height so that\r\n    // the animation to the new height can have an origin.\r\n    if (this._tabBodyWrapper.nativeElement.offsetHeight) {\r\n      wrapper.style.height = tabHeight + 'px';\r\n    }\r\n  }\r\n\r\n  /** Removes the height of the tab body wrapper. */\r\n  _removeTabBodyWrapperHeight(): void {\r\n    this._tabBodyWrapperHeight = this._tabBodyWrapper.nativeElement.clientHeight;\r\n    this._tabBodyWrapper.nativeElement.style.height = '';\r\n    this.animationDone.emit();\r\n  }\r\n\r\n  /** Handle click events, setting new selected index if appropriate. */\r\n  _handleClick(tab: MatTab, tabHeader: MatTabHeader, idx: number) {\r\n    if (!tab.disabled) {\r\n      this.selectedIndex = tabHeader.focusIndex = idx;\r\n    }\r\n  }\r\n\r\n  /** Retrieves the tabindex for the tab. */\r\n  _getTabIndex(tab: MatTab, idx: number): number | null {\r\n    if (tab.disabled) {\r\n      return null;\r\n    }\r\n    return this.selectedIndex === idx ? 0 : -1;\r\n  }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {\r\n  Component,\r\n  Input,\r\n  Inject,\r\n  Output,\r\n  EventEmitter,\r\n  OnDestroy,\r\n  OnInit,\r\n  ElementRef,\r\n  Directive,\r\n  Optional,\r\n  ViewEncapsulation,\r\n  ChangeDetectionStrategy,\r\n  ComponentFactoryResolver,\r\n  ViewContainerRef,\r\n  forwardRef,\r\n} from '@angular/core';\r\nimport {AnimationEvent} from '@angular/animations';\r\nimport {TemplatePortal, CdkPortalOutlet} from '@angular/cdk/portal';\r\nimport {Directionality, Direction} from '@angular/cdk/bidi';\r\nimport {Subscription} from 'rxjs/Subscription';\r\nimport {matTabsAnimations} from './tabs-animations';\r\n\r\n/**\r\n * These position states are used internally as animation states for the tab body. Setting the\r\n * position state to left, right, or center will transition the tab body from its current\r\n * position to its respective state. If there is not current position (void, in the case of a new\r\n * tab body), then there will be no transition animation to its state.\r\n *\r\n * In the case of a new tab body that should immediately be centered with an animating transition,\r\n * then left-origin-center or right-origin-center can be used, which will use left or right as its\r\n * psuedo-prior state.\r\n */\r\nexport type MatTabBodyPositionState =\r\n    'left' | 'center' | 'right' | 'left-origin-center' | 'right-origin-center';\r\n\r\n/**\r\n * The origin state is an internally used state that is set on a new tab body indicating if it\r\n * began to the left or right of the prior selected index. For example, if the selected index was\r\n * set to 1, and a new tab is created and selected at index 2, then the tab body would have an\r\n * origin of right because its index was greater than the prior selected index.\r\n */\r\nexport type MatTabBodyOriginState = 'left' | 'right';\r\n\r\n/**\r\n * The portal host directive for the contents of the tab.\r\n * @docs-private\r\n */\r\n@Directive({\r\n  selector: '[matTabBodyHost]'\r\n})\r\nexport class MatTabBodyPortal extends CdkPortalOutlet implements OnInit, OnDestroy {\r\n  /** A subscription to events for when the tab body begins centering. */\r\n  private _centeringSub: Subscription;\r\n  /** A subscription to events for when the tab body finishes leaving from center position. */\r\n  private _leavingSub: Subscription;\r\n\r\n  constructor(\r\n    _componentFactoryResolver: ComponentFactoryResolver,\r\n    _viewContainerRef: ViewContainerRef,\r\n    @Inject(forwardRef(() => MatTabBody)) private _host: MatTabBody) {\r\n      super(_componentFactoryResolver, _viewContainerRef);\r\n  }\r\n\r\n  /** Set initial visibility or set up subscription for changing visibility. */\r\n  ngOnInit(): void {\r\n    if (this._host._isCenterPosition(this._host._position)) {\r\n      this.attach(this._host._content);\r\n    }\r\n    this._centeringSub = this._host._beforeCentering.subscribe((isCentering: boolean) => {\r\n      if (isCentering) {\r\n        if (!this.hasAttached()) {\r\n          this.attach(this._host._content);\r\n        }\r\n      }\r\n    });\r\n\r\n    this._leavingSub = this._host._afterLeavingCenter.subscribe(() => {\r\n      this.detach();\r\n    });\r\n  }\r\n\r\n  /** Clean up centering subscription. */\r\n  ngOnDestroy(): void {\r\n    if (this._centeringSub && !this._centeringSub.closed) {\r\n      this._centeringSub.unsubscribe();\r\n    }\r\n\r\n    if (this._leavingSub && !this._leavingSub.closed) {\r\n      this._leavingSub.unsubscribe();\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Wrapper for the contents of a tab.\r\n * @docs-private\r\n */\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'mat-tab-body',\r\n  templateUrl: 'tab-body.html',\r\n  styleUrls: ['tab-body.css'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  preserveWhitespaces: false,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  animations: [matTabsAnimations.translateTab],\r\n  host: {\r\n    'class': 'mat-tab-body',\r\n  },\r\n})\r\nexport class MatTabBody implements OnInit {\r\n  /** Event emitted when the tab begins to animate towards the center as the active tab. */\r\n  @Output() readonly _onCentering: EventEmitter<number> = new EventEmitter<number>();\r\n\r\n  /** Event emitted before the centering of the tab begins. */\r\n  @Output() readonly _beforeCentering: EventEmitter<boolean> = new EventEmitter<boolean>();\r\n\r\n  /** Event emitted before the centering of the tab begins. */\r\n  @Output() readonly _afterLeavingCenter: EventEmitter<boolean> = new EventEmitter<boolean>();\r\n\r\n  /** Event emitted when the tab completes its animation towards the center. */\r\n  @Output() readonly _onCentered: EventEmitter<void> = new EventEmitter<void>(true);\r\n\r\n  /** The tab body content to display. */\r\n  @Input('content') _content: TemplatePortal;\r\n\r\n  /** The shifted index position of the tab body, where zero represents the active center tab. */\r\n  @Input()\r\n  set position(position: number) {\r\n    if (position < 0) {\r\n      this._position = this._getLayoutDirection() == 'ltr' ? 'left' : 'right';\r\n    } else if (position > 0) {\r\n      this._position = this._getLayoutDirection() == 'ltr' ? 'right' : 'left';\r\n    } else {\r\n      this._position = 'center';\r\n    }\r\n  }\r\n  _position: MatTabBodyPositionState;\r\n\r\n  /** The origin position from which this tab should appear when it is centered into view. */\r\n  @Input()\r\n  set origin(origin: number) {\r\n    if (origin == null) { return; }\r\n\r\n    const dir = this._getLayoutDirection();\r\n    if ((dir == 'ltr' && origin <= 0) || (dir == 'rtl' && origin > 0)) {\r\n      this._origin = 'left';\r\n    } else {\r\n      this._origin = 'right';\r\n    }\r\n  }\r\n  _origin: MatTabBodyOriginState;\r\n\r\n  constructor(private _elementRef: ElementRef,\r\n              @Optional() private _dir: Directionality) { }\r\n\r\n  /**\r\n   * After initialized, check if the content is centered and has an origin. If so, set the\r\n   * special position states that transition the tab from the left or right before centering.\r\n   */\r\n  ngOnInit() {\r\n    if (this._position == 'center' && this._origin) {\r\n      this._position = this._origin == 'left' ? 'left-origin-center' : 'right-origin-center';\r\n    }\r\n  }\r\n\r\n  _onTranslateTabStarted(e: AnimationEvent): void {\r\n    const isCentering = this._isCenterPosition(e.toState);\r\n    this._beforeCentering.emit(isCentering);\r\n    if (isCentering) {\r\n      this._onCentering.emit(this._elementRef.nativeElement.clientHeight);\r\n    }\r\n  }\r\n\r\n  _onTranslateTabComplete(e: AnimationEvent): void {\r\n    // If the transition to the center is complete, emit an event.\r\n    if (this._isCenterPosition(e.toState) && this._isCenterPosition(this._position)) {\r\n      this._onCentered.emit();\r\n    }\r\n\r\n    if (this._isCenterPosition(e.fromState) && !this._isCenterPosition(this._position)) {\r\n      this._afterLeavingCenter.emit();\r\n    }\r\n  }\r\n\r\n  /** The text direction of the containing app. */\r\n  _getLayoutDirection(): Direction {\r\n    return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\r\n  }\r\n\r\n  /** Whether the provided position state is considered center, regardless of origin. */\r\n  _isCenterPosition(position: MatTabBodyPositionState|string): boolean {\r\n    return position == 'center' ||\r\n        position == 'left-origin-center' ||\r\n        position == 'right-origin-center';\r\n  }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\nimport {\r\n  animate,\r\n  state,\r\n  style,\r\n  transition,\r\n  trigger,\r\n  AnimationTriggerMetadata,\r\n} from '@angular/animations';\r\n\r\n/** Animations used by the Material tabs. */\r\nexport const matTabsAnimations: {\r\n  readonly translateTab: AnimationTriggerMetadata;\r\n} = {\r\n  /** Animation translates a tab along the X axis. */\r\n  translateTab: trigger('translateTab', [\r\n    // Note: transitions to `none` instead of 0, because some browsers might blur the content.\r\n    state('center, void, left-origin-center, right-origin-center', style({transform: 'none'})),\r\n    state('left', style({transform: 'translate3d(-100%, 0, 0)'})),\r\n    state('right', style({transform: 'translate3d(100%, 0, 0)'})),\r\n    transition('* => left, * => right, left => center, right => center',\r\n        animate('500ms cubic-bezier(0.35, 0, 0.25, 1)')),\r\n    transition('void => left-origin-center', [\r\n      style({transform: 'translate3d(-100%, 0, 0)'}),\r\n      animate('500ms cubic-bezier(0.35, 0, 0.25, 1)')\r\n    ]),\r\n    transition('void => right-origin-center', [\r\n      style({transform: 'translate3d(100%, 0, 0)'}),\r\n      animate('500ms cubic-bezier(0.35, 0, 0.25, 1)')\r\n    ])\r\n  ])\r\n};\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {TemplatePortal} from '@angular/cdk/portal';\r\nimport {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  ContentChild,\r\n  Input,\r\n  OnChanges,\r\n  OnDestroy,\r\n  OnInit,\r\n  SimpleChanges,\r\n  TemplateRef,\r\n  ViewChild,\r\n  ViewContainerRef,\r\n  ViewEncapsulation,\r\n} from '@angular/core';\r\nimport {CanDisable, mixinDisabled} from '@angular/material/core';\r\nimport {Subject} from 'rxjs/Subject';\r\nimport {MatTabLabel} from './tab-label';\r\n\r\n\r\n// Boilerplate for applying mixins to MatTab.\r\n/** @docs-private */\r\nexport class MatTabBase {}\r\nexport const _MatTabMixinBase = mixinDisabled(MatTabBase);\r\n\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'mat-tab',\r\n  templateUrl: 'tab.html',\r\n  inputs: ['disabled'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  encapsulation: ViewEncapsulation.None,\r\n  preserveWhitespaces: false,\r\n  exportAs: 'matTab',\r\n})\r\nexport class MatTab extends _MatTabMixinBase implements OnInit, CanDisable, OnChanges, OnDestroy {\r\n  /** Content for the tab label given by `<ng-template mat-tab-label>`. */\r\n  @ContentChild(MatTabLabel) templateLabel: MatTabLabel;\r\n\r\n  /** Template inside the MatTab view that contains an `<ng-content>`. */\r\n  @ViewChild(TemplateRef) _content: TemplateRef<any>;\r\n\r\n  /** The plain text label for the tab, used when there is no template label. */\r\n  @Input('label') textLabel: string = '';\r\n\r\n  /** The portal that will be the hosted content of the tab */\r\n  private _contentPortal: TemplatePortal | null = null;\r\n\r\n  /** @docs-private */\r\n  get content(): TemplatePortal | null {\r\n    return this._contentPortal;\r\n  }\r\n\r\n  /** Emits whenever the label changes. */\r\n  readonly _labelChange = new Subject<void>();\r\n\r\n  /** Emits whenever the disable changes */\r\n  readonly _disableChange = new Subject<void>();\r\n\r\n  /**\r\n   * The relatively indexed position where 0 represents the center, negative is left, and positive\r\n   * represents the right.\r\n   */\r\n  position: number | null = null;\r\n\r\n  /**\r\n   * The initial relatively index origin of the tab if it was created and selected after there\r\n   * was already a selected tab. Provides context of what position the tab should originate from.\r\n   */\r\n  origin: number | null = null;\r\n\r\n  /**\r\n   * Whether the tab is currently active.\r\n   */\r\n  isActive = false;\r\n\r\n  constructor(private _viewContainerRef: ViewContainerRef) {\r\n    super();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.hasOwnProperty('textLabel')) {\r\n      this._labelChange.next();\r\n    }\r\n\r\n    if (changes.hasOwnProperty('disabled')) {\r\n      this._disableChange.next();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this._disableChange.complete();\r\n    this._labelChange.complete();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this._contentPortal = new TemplatePortal(this._content, this._viewContainerRef);\r\n  }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {Directive, TemplateRef, ViewContainerRef} from '@angular/core';\r\nimport {CdkPortal} from '@angular/cdk/portal';\r\n\r\n/** Used to flag tab labels for use with the portal directive */\r\n@Directive({\r\n  selector: '[mat-tab-label], [matTabLabel]',\r\n})\r\nexport class MatTabLabel extends CdkPortal {\r\n  constructor(templateRef: TemplateRef<any>, viewContainerRef: ViewContainerRef) {\r\n    super(templateRef, viewContainerRef);\r\n  }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {Directive, ElementRef, NgZone} from '@angular/core';\r\n\r\n\r\n/**\r\n * The ink-bar is used to display and animate the line underneath the current active tab label.\r\n * @docs-private\r\n */\r\n@Directive({\r\n  selector: 'mat-ink-bar',\r\n  host: {\r\n    'class': 'mat-ink-bar',\r\n  },\r\n})\r\nexport class MatInkBar {\r\n  constructor(\r\n    private _elementRef: ElementRef,\r\n    private _ngZone: NgZone) {}\r\n\r\n  /**\r\n   * Calculates the styles from the provided element in order to align the ink-bar to that element.\r\n   * Shows the ink bar if previously set as hidden.\r\n   * @param element\r\n   */\r\n  alignToElement(element: HTMLElement) {\r\n    this.show();\r\n\r\n    if (typeof requestAnimationFrame !== 'undefined') {\r\n      this._ngZone.runOutsideAngular(() => {\r\n        requestAnimationFrame(() => this._setStyles(element));\r\n      });\r\n    } else {\r\n      this._setStyles(element);\r\n    }\r\n  }\r\n\r\n  /** Shows the ink bar. */\r\n  show(): void {\r\n    this._elementRef.nativeElement.style.visibility = 'visible';\r\n  }\r\n\r\n  /** Hides the ink bar. */\r\n  hide(): void {\r\n    this._elementRef.nativeElement.style.visibility = 'hidden';\r\n  }\r\n\r\n  /**\r\n   * Sets the proper styles to the ink bar element.\r\n   * @param element\r\n   */\r\n  private _setStyles(element: HTMLElement) {\r\n    const inkBar: HTMLElement = this._elementRef.nativeElement;\r\n\r\n    inkBar.style.left = element ? (element.offsetLeft || 0) + 'px' : '0';\r\n    inkBar.style.width = element ? (element.offsetWidth || 0) + 'px' : '0';\r\n  }\r\n}\r\n"],"names":["observableOf","tslib_1.__extends"],"mappings":"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"}